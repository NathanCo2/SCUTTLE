
SCUTTLE_V0.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000899c  08000190  08000190  00001190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000ac  08008b2c  08008b2c  00009b2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008bd8  08008bd8  0000a068  2**0
                  CONTENTS
  4 .ARM          00000008  08008bd8  08008bd8  00009bd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008be0  08008be0  0000a068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008be0  08008be0  00009be0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008be4  08008be4  00009be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000068  20000000  08008be8  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000069c  20000068  08008c50  0000a068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000704  08008c50  0000a704  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000a068  2**0
                  CONTENTS, READONLY
 12 .debug_info   0001a406  00000000  00000000  0000a098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002ff5  00000000  00000000  0002449e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00001868  00000000  00000000  00027498  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00001335  00000000  00000000  00028d00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003eff  00000000  00000000  0002a035  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0001d60d  00000000  00000000  0002df34  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000fb8ca  00000000  00000000  0004b541  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00146e0b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00007124  00000000  00000000  00146e50  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  0014df74  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	@ (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	@ (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000068 	.word	0x20000068
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08008b14 	.word	0x08008b14

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	@ (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	@ (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	@ (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	2000006c 	.word	0x2000006c
 80001cc:	08008b14 	.word	0x08008b14

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <__aeabi_uldivmod>:
 8000270:	b953      	cbnz	r3, 8000288 <__aeabi_uldivmod+0x18>
 8000272:	b94a      	cbnz	r2, 8000288 <__aeabi_uldivmod+0x18>
 8000274:	2900      	cmp	r1, #0
 8000276:	bf08      	it	eq
 8000278:	2800      	cmpeq	r0, #0
 800027a:	bf1c      	itt	ne
 800027c:	f04f 31ff 	movne.w	r1, #4294967295
 8000280:	f04f 30ff 	movne.w	r0, #4294967295
 8000284:	f000 b96a 	b.w	800055c <__aeabi_idiv0>
 8000288:	f1ad 0c08 	sub.w	ip, sp, #8
 800028c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000290:	f000 f806 	bl	80002a0 <__udivmoddi4>
 8000294:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000298:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800029c:	b004      	add	sp, #16
 800029e:	4770      	bx	lr

080002a0 <__udivmoddi4>:
 80002a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002a4:	9d08      	ldr	r5, [sp, #32]
 80002a6:	460c      	mov	r4, r1
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d14e      	bne.n	800034a <__udivmoddi4+0xaa>
 80002ac:	4694      	mov	ip, r2
 80002ae:	458c      	cmp	ip, r1
 80002b0:	4686      	mov	lr, r0
 80002b2:	fab2 f282 	clz	r2, r2
 80002b6:	d962      	bls.n	800037e <__udivmoddi4+0xde>
 80002b8:	b14a      	cbz	r2, 80002ce <__udivmoddi4+0x2e>
 80002ba:	f1c2 0320 	rsb	r3, r2, #32
 80002be:	4091      	lsls	r1, r2
 80002c0:	fa20 f303 	lsr.w	r3, r0, r3
 80002c4:	fa0c fc02 	lsl.w	ip, ip, r2
 80002c8:	4319      	orrs	r1, r3
 80002ca:	fa00 fe02 	lsl.w	lr, r0, r2
 80002ce:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80002d2:	fa1f f68c 	uxth.w	r6, ip
 80002d6:	fbb1 f4f7 	udiv	r4, r1, r7
 80002da:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80002de:	fb07 1114 	mls	r1, r7, r4, r1
 80002e2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80002e6:	fb04 f106 	mul.w	r1, r4, r6
 80002ea:	4299      	cmp	r1, r3
 80002ec:	d90a      	bls.n	8000304 <__udivmoddi4+0x64>
 80002ee:	eb1c 0303 	adds.w	r3, ip, r3
 80002f2:	f104 30ff 	add.w	r0, r4, #4294967295
 80002f6:	f080 8112 	bcs.w	800051e <__udivmoddi4+0x27e>
 80002fa:	4299      	cmp	r1, r3
 80002fc:	f240 810f 	bls.w	800051e <__udivmoddi4+0x27e>
 8000300:	3c02      	subs	r4, #2
 8000302:	4463      	add	r3, ip
 8000304:	1a59      	subs	r1, r3, r1
 8000306:	fa1f f38e 	uxth.w	r3, lr
 800030a:	fbb1 f0f7 	udiv	r0, r1, r7
 800030e:	fb07 1110 	mls	r1, r7, r0, r1
 8000312:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000316:	fb00 f606 	mul.w	r6, r0, r6
 800031a:	429e      	cmp	r6, r3
 800031c:	d90a      	bls.n	8000334 <__udivmoddi4+0x94>
 800031e:	eb1c 0303 	adds.w	r3, ip, r3
 8000322:	f100 31ff 	add.w	r1, r0, #4294967295
 8000326:	f080 80fc 	bcs.w	8000522 <__udivmoddi4+0x282>
 800032a:	429e      	cmp	r6, r3
 800032c:	f240 80f9 	bls.w	8000522 <__udivmoddi4+0x282>
 8000330:	4463      	add	r3, ip
 8000332:	3802      	subs	r0, #2
 8000334:	1b9b      	subs	r3, r3, r6
 8000336:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800033a:	2100      	movs	r1, #0
 800033c:	b11d      	cbz	r5, 8000346 <__udivmoddi4+0xa6>
 800033e:	40d3      	lsrs	r3, r2
 8000340:	2200      	movs	r2, #0
 8000342:	e9c5 3200 	strd	r3, r2, [r5]
 8000346:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800034a:	428b      	cmp	r3, r1
 800034c:	d905      	bls.n	800035a <__udivmoddi4+0xba>
 800034e:	b10d      	cbz	r5, 8000354 <__udivmoddi4+0xb4>
 8000350:	e9c5 0100 	strd	r0, r1, [r5]
 8000354:	2100      	movs	r1, #0
 8000356:	4608      	mov	r0, r1
 8000358:	e7f5      	b.n	8000346 <__udivmoddi4+0xa6>
 800035a:	fab3 f183 	clz	r1, r3
 800035e:	2900      	cmp	r1, #0
 8000360:	d146      	bne.n	80003f0 <__udivmoddi4+0x150>
 8000362:	42a3      	cmp	r3, r4
 8000364:	d302      	bcc.n	800036c <__udivmoddi4+0xcc>
 8000366:	4290      	cmp	r0, r2
 8000368:	f0c0 80f0 	bcc.w	800054c <__udivmoddi4+0x2ac>
 800036c:	1a86      	subs	r6, r0, r2
 800036e:	eb64 0303 	sbc.w	r3, r4, r3
 8000372:	2001      	movs	r0, #1
 8000374:	2d00      	cmp	r5, #0
 8000376:	d0e6      	beq.n	8000346 <__udivmoddi4+0xa6>
 8000378:	e9c5 6300 	strd	r6, r3, [r5]
 800037c:	e7e3      	b.n	8000346 <__udivmoddi4+0xa6>
 800037e:	2a00      	cmp	r2, #0
 8000380:	f040 8090 	bne.w	80004a4 <__udivmoddi4+0x204>
 8000384:	eba1 040c 	sub.w	r4, r1, ip
 8000388:	ea4f 481c 	mov.w	r8, ip, lsr #16
 800038c:	fa1f f78c 	uxth.w	r7, ip
 8000390:	2101      	movs	r1, #1
 8000392:	fbb4 f6f8 	udiv	r6, r4, r8
 8000396:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800039a:	fb08 4416 	mls	r4, r8, r6, r4
 800039e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003a2:	fb07 f006 	mul.w	r0, r7, r6
 80003a6:	4298      	cmp	r0, r3
 80003a8:	d908      	bls.n	80003bc <__udivmoddi4+0x11c>
 80003aa:	eb1c 0303 	adds.w	r3, ip, r3
 80003ae:	f106 34ff 	add.w	r4, r6, #4294967295
 80003b2:	d202      	bcs.n	80003ba <__udivmoddi4+0x11a>
 80003b4:	4298      	cmp	r0, r3
 80003b6:	f200 80cd 	bhi.w	8000554 <__udivmoddi4+0x2b4>
 80003ba:	4626      	mov	r6, r4
 80003bc:	1a1c      	subs	r4, r3, r0
 80003be:	fa1f f38e 	uxth.w	r3, lr
 80003c2:	fbb4 f0f8 	udiv	r0, r4, r8
 80003c6:	fb08 4410 	mls	r4, r8, r0, r4
 80003ca:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80003ce:	fb00 f707 	mul.w	r7, r0, r7
 80003d2:	429f      	cmp	r7, r3
 80003d4:	d908      	bls.n	80003e8 <__udivmoddi4+0x148>
 80003d6:	eb1c 0303 	adds.w	r3, ip, r3
 80003da:	f100 34ff 	add.w	r4, r0, #4294967295
 80003de:	d202      	bcs.n	80003e6 <__udivmoddi4+0x146>
 80003e0:	429f      	cmp	r7, r3
 80003e2:	f200 80b0 	bhi.w	8000546 <__udivmoddi4+0x2a6>
 80003e6:	4620      	mov	r0, r4
 80003e8:	1bdb      	subs	r3, r3, r7
 80003ea:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003ee:	e7a5      	b.n	800033c <__udivmoddi4+0x9c>
 80003f0:	f1c1 0620 	rsb	r6, r1, #32
 80003f4:	408b      	lsls	r3, r1
 80003f6:	fa22 f706 	lsr.w	r7, r2, r6
 80003fa:	431f      	orrs	r7, r3
 80003fc:	fa20 fc06 	lsr.w	ip, r0, r6
 8000400:	fa04 f301 	lsl.w	r3, r4, r1
 8000404:	ea43 030c 	orr.w	r3, r3, ip
 8000408:	40f4      	lsrs	r4, r6
 800040a:	fa00 f801 	lsl.w	r8, r0, r1
 800040e:	0c38      	lsrs	r0, r7, #16
 8000410:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000414:	fbb4 fef0 	udiv	lr, r4, r0
 8000418:	fa1f fc87 	uxth.w	ip, r7
 800041c:	fb00 441e 	mls	r4, r0, lr, r4
 8000420:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000424:	fb0e f90c 	mul.w	r9, lr, ip
 8000428:	45a1      	cmp	r9, r4
 800042a:	fa02 f201 	lsl.w	r2, r2, r1
 800042e:	d90a      	bls.n	8000446 <__udivmoddi4+0x1a6>
 8000430:	193c      	adds	r4, r7, r4
 8000432:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000436:	f080 8084 	bcs.w	8000542 <__udivmoddi4+0x2a2>
 800043a:	45a1      	cmp	r9, r4
 800043c:	f240 8081 	bls.w	8000542 <__udivmoddi4+0x2a2>
 8000440:	f1ae 0e02 	sub.w	lr, lr, #2
 8000444:	443c      	add	r4, r7
 8000446:	eba4 0409 	sub.w	r4, r4, r9
 800044a:	fa1f f983 	uxth.w	r9, r3
 800044e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000452:	fb00 4413 	mls	r4, r0, r3, r4
 8000456:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800045a:	fb03 fc0c 	mul.w	ip, r3, ip
 800045e:	45a4      	cmp	ip, r4
 8000460:	d907      	bls.n	8000472 <__udivmoddi4+0x1d2>
 8000462:	193c      	adds	r4, r7, r4
 8000464:	f103 30ff 	add.w	r0, r3, #4294967295
 8000468:	d267      	bcs.n	800053a <__udivmoddi4+0x29a>
 800046a:	45a4      	cmp	ip, r4
 800046c:	d965      	bls.n	800053a <__udivmoddi4+0x29a>
 800046e:	3b02      	subs	r3, #2
 8000470:	443c      	add	r4, r7
 8000472:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000476:	fba0 9302 	umull	r9, r3, r0, r2
 800047a:	eba4 040c 	sub.w	r4, r4, ip
 800047e:	429c      	cmp	r4, r3
 8000480:	46ce      	mov	lr, r9
 8000482:	469c      	mov	ip, r3
 8000484:	d351      	bcc.n	800052a <__udivmoddi4+0x28a>
 8000486:	d04e      	beq.n	8000526 <__udivmoddi4+0x286>
 8000488:	b155      	cbz	r5, 80004a0 <__udivmoddi4+0x200>
 800048a:	ebb8 030e 	subs.w	r3, r8, lr
 800048e:	eb64 040c 	sbc.w	r4, r4, ip
 8000492:	fa04 f606 	lsl.w	r6, r4, r6
 8000496:	40cb      	lsrs	r3, r1
 8000498:	431e      	orrs	r6, r3
 800049a:	40cc      	lsrs	r4, r1
 800049c:	e9c5 6400 	strd	r6, r4, [r5]
 80004a0:	2100      	movs	r1, #0
 80004a2:	e750      	b.n	8000346 <__udivmoddi4+0xa6>
 80004a4:	f1c2 0320 	rsb	r3, r2, #32
 80004a8:	fa20 f103 	lsr.w	r1, r0, r3
 80004ac:	fa0c fc02 	lsl.w	ip, ip, r2
 80004b0:	fa24 f303 	lsr.w	r3, r4, r3
 80004b4:	4094      	lsls	r4, r2
 80004b6:	430c      	orrs	r4, r1
 80004b8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004bc:	fa00 fe02 	lsl.w	lr, r0, r2
 80004c0:	fa1f f78c 	uxth.w	r7, ip
 80004c4:	fbb3 f0f8 	udiv	r0, r3, r8
 80004c8:	fb08 3110 	mls	r1, r8, r0, r3
 80004cc:	0c23      	lsrs	r3, r4, #16
 80004ce:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80004d2:	fb00 f107 	mul.w	r1, r0, r7
 80004d6:	4299      	cmp	r1, r3
 80004d8:	d908      	bls.n	80004ec <__udivmoddi4+0x24c>
 80004da:	eb1c 0303 	adds.w	r3, ip, r3
 80004de:	f100 36ff 	add.w	r6, r0, #4294967295
 80004e2:	d22c      	bcs.n	800053e <__udivmoddi4+0x29e>
 80004e4:	4299      	cmp	r1, r3
 80004e6:	d92a      	bls.n	800053e <__udivmoddi4+0x29e>
 80004e8:	3802      	subs	r0, #2
 80004ea:	4463      	add	r3, ip
 80004ec:	1a5b      	subs	r3, r3, r1
 80004ee:	b2a4      	uxth	r4, r4
 80004f0:	fbb3 f1f8 	udiv	r1, r3, r8
 80004f4:	fb08 3311 	mls	r3, r8, r1, r3
 80004f8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80004fc:	fb01 f307 	mul.w	r3, r1, r7
 8000500:	42a3      	cmp	r3, r4
 8000502:	d908      	bls.n	8000516 <__udivmoddi4+0x276>
 8000504:	eb1c 0404 	adds.w	r4, ip, r4
 8000508:	f101 36ff 	add.w	r6, r1, #4294967295
 800050c:	d213      	bcs.n	8000536 <__udivmoddi4+0x296>
 800050e:	42a3      	cmp	r3, r4
 8000510:	d911      	bls.n	8000536 <__udivmoddi4+0x296>
 8000512:	3902      	subs	r1, #2
 8000514:	4464      	add	r4, ip
 8000516:	1ae4      	subs	r4, r4, r3
 8000518:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800051c:	e739      	b.n	8000392 <__udivmoddi4+0xf2>
 800051e:	4604      	mov	r4, r0
 8000520:	e6f0      	b.n	8000304 <__udivmoddi4+0x64>
 8000522:	4608      	mov	r0, r1
 8000524:	e706      	b.n	8000334 <__udivmoddi4+0x94>
 8000526:	45c8      	cmp	r8, r9
 8000528:	d2ae      	bcs.n	8000488 <__udivmoddi4+0x1e8>
 800052a:	ebb9 0e02 	subs.w	lr, r9, r2
 800052e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000532:	3801      	subs	r0, #1
 8000534:	e7a8      	b.n	8000488 <__udivmoddi4+0x1e8>
 8000536:	4631      	mov	r1, r6
 8000538:	e7ed      	b.n	8000516 <__udivmoddi4+0x276>
 800053a:	4603      	mov	r3, r0
 800053c:	e799      	b.n	8000472 <__udivmoddi4+0x1d2>
 800053e:	4630      	mov	r0, r6
 8000540:	e7d4      	b.n	80004ec <__udivmoddi4+0x24c>
 8000542:	46d6      	mov	lr, sl
 8000544:	e77f      	b.n	8000446 <__udivmoddi4+0x1a6>
 8000546:	4463      	add	r3, ip
 8000548:	3802      	subs	r0, #2
 800054a:	e74d      	b.n	80003e8 <__udivmoddi4+0x148>
 800054c:	4606      	mov	r6, r0
 800054e:	4623      	mov	r3, r4
 8000550:	4608      	mov	r0, r1
 8000552:	e70f      	b.n	8000374 <__udivmoddi4+0xd4>
 8000554:	3e02      	subs	r6, #2
 8000556:	4463      	add	r3, ip
 8000558:	e730      	b.n	80003bc <__udivmoddi4+0x11c>
 800055a:	bf00      	nop

0800055c <__aeabi_idiv0>:
 800055c:	4770      	bx	lr
 800055e:	bf00      	nop

08000560 <read_encoder>:
 * @brief Read encoder value
 * @param[in] encoder A pointer to a structure (encoder_t) containing encoder-related data such as position, velocity, and the last counter value.
 * @param[in] htim A pointer to the timer handle used to read the counter value.
 * @details This function reads a timer setup in encoder mode and finds position and velocity, accounting for overflow and direction change.
 */
void read_encoder(encoder_t *encoder) {
 8000560:	b580      	push	{r7, lr}
 8000562:	b086      	sub	sp, #24
 8000564:	af00      	add	r7, sp, #0
 8000566:	6078      	str	r0, [r7, #4]

	//initialize internal variables
    uint32_t current_counter = -1*__HAL_TIM_GET_COUNTER(encoder->htim); //Inverted due to wiring
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8000570:	425b      	negs	r3, r3
 8000572:	613b      	str	r3, [r7, #16]
    int32_t velocity_change;
    float delta_t;
    float current_tick = HAL_GetTick();
 8000574:	f001 feb8 	bl	80022e8 <HAL_GetTick>
 8000578:	ee07 0a90 	vmov	s15, r0
 800057c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8000580:	edc7 7a03 	vstr	s15, [r7, #12]

	// Calculate velocity change
	if (current_counter >= encoder->last_counter_value) {
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	68db      	ldr	r3, [r3, #12]
 8000588:	693a      	ldr	r2, [r7, #16]
 800058a:	429a      	cmp	r2, r3
 800058c:	d305      	bcc.n	800059a <read_encoder+0x3a>
		velocity_change = current_counter - encoder->last_counter_value; //Velocity has units of counts per timer tick
 800058e:	687b      	ldr	r3, [r7, #4]
 8000590:	68db      	ldr	r3, [r3, #12]
 8000592:	693a      	ldr	r2, [r7, #16]
 8000594:	1ad3      	subs	r3, r2, r3
 8000596:	617b      	str	r3, [r7, #20]
 8000598:	e014      	b.n	80005c4 <read_encoder+0x64>
	} else {
		velocity_change = __HAL_TIM_GET_AUTORELOAD(encoder->htim) - encoder->last_counter_value + current_counter;
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	681b      	ldr	r3, [r3, #0]
 800059e:	681b      	ldr	r3, [r3, #0]
 80005a0:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80005a2:	687b      	ldr	r3, [r7, #4]
 80005a4:	68db      	ldr	r3, [r3, #12]
 80005a6:	1ad2      	subs	r2, r2, r3
 80005a8:	693b      	ldr	r3, [r7, #16]
 80005aa:	4413      	add	r3, r2
 80005ac:	617b      	str	r3, [r7, #20]
		if (!__HAL_TIM_IS_TIM_COUNTING_DOWN(encoder->htim)) { //If encoder is rotating in other direction
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	681b      	ldr	r3, [r3, #0]
 80005b2:	681b      	ldr	r3, [r3, #0]
 80005b4:	681b      	ldr	r3, [r3, #0]
 80005b6:	f003 0310 	and.w	r3, r3, #16
 80005ba:	2b10      	cmp	r3, #16
 80005bc:	d002      	beq.n	80005c4 <read_encoder+0x64>
			velocity_change *= -1; // Invert for counting down mode
 80005be:	697b      	ldr	r3, [r7, #20]
 80005c0:	425b      	negs	r3, r3
 80005c2:	617b      	str	r3, [r7, #20]
		}
	}
	// Update position and store last counter value
	encoder->position += velocity_change;
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	689a      	ldr	r2, [r3, #8]
 80005c8:	697b      	ldr	r3, [r7, #20]
 80005ca:	441a      	add	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	609a      	str	r2, [r3, #8]
	encoder->last_counter_value = current_counter;
 80005d0:	687b      	ldr	r3, [r7, #4]
 80005d2:	693a      	ldr	r2, [r7, #16]
 80005d4:	60da      	str	r2, [r3, #12]

	delta_t = (current_tick > encoder->last_tick) ? ((current_tick - encoder->last_tick)/1000) : 1; //how much time(ms) elapsed since last run
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	691b      	ldr	r3, [r3, #16]
 80005da:	ee07 3a90 	vmov	s15, r3
 80005de:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80005e2:	ed97 7a03 	vldr	s14, [r7, #12]
 80005e6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80005ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80005ee:	dd0e      	ble.n	800060e <read_encoder+0xae>
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	691b      	ldr	r3, [r3, #16]
 80005f4:	ee07 3a90 	vmov	s15, r3
 80005f8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80005fc:	ed97 7a03 	vldr	s14, [r7, #12]
 8000600:	ee37 7a67 	vsub.f32	s14, s14, s15
 8000604:	eddf 6a12 	vldr	s13, [pc, #72]	@ 8000650 <read_encoder+0xf0>
 8000608:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800060c:	e001      	b.n	8000612 <read_encoder+0xb2>
 800060e:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8000612:	edc7 7a02 	vstr	s15, [r7, #8]
    encoder->velocity = (int16_t)(velocity_change / delta_t); //units of encoder counts / s
 8000616:	697b      	ldr	r3, [r7, #20]
 8000618:	ee07 3a90 	vmov	s15, r3
 800061c:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000620:	ed97 7a02 	vldr	s14, [r7, #8]
 8000624:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8000628:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800062c:	ee17 3a90 	vmov	r3, s15
 8000630:	b21a      	sxth	r2, r3
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	809a      	strh	r2, [r3, #4]
    encoder->last_tick = current_tick;
 8000636:	edd7 7a03 	vldr	s15, [r7, #12]
 800063a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800063e:	ee17 2a90 	vmov	r2, s15
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	611a      	str	r2, [r3, #16]


}
 8000646:	bf00      	nop
 8000648:	3718      	adds	r7, #24
 800064a:	46bd      	mov	sp, r7
 800064c:	bd80      	pop	{r7, pc}
 800064e:	bf00      	nop
 8000650:	447a0000 	.word	0x447a0000

08000654 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000654:	b480      	push	{r7}
 8000656:	b083      	sub	sp, #12
 8000658:	af00      	add	r7, sp, #0
 800065a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800065c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000660:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	@ 0xe80
 8000664:	f003 0301 	and.w	r3, r3, #1
 8000668:	2b00      	cmp	r3, #0
 800066a:	d013      	beq.n	8000694 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 800066c:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000670:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	@ 0xe00
 8000674:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000678:	2b00      	cmp	r3, #0
 800067a:	d00b      	beq.n	8000694 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 800067c:	e000      	b.n	8000680 <ITM_SendChar+0x2c>
    {
      __NOP();
 800067e:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000680:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000684:	681b      	ldr	r3, [r3, #0]
 8000686:	2b00      	cmp	r3, #0
 8000688:	d0f9      	beq.n	800067e <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 800068a:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 800068e:	687a      	ldr	r2, [r7, #4]
 8000690:	b2d2      	uxtb	r2, r2
 8000692:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000694:	687b      	ldr	r3, [r7, #4]
}
 8000696:	4618      	mov	r0, r3
 8000698:	370c      	adds	r7, #12
 800069a:	46bd      	mov	sp, r7
 800069c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006a0:	4770      	bx	lr
	...

080006a4 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80006a4:	b580      	push	{r7, lr}
 80006a6:	b09e      	sub	sp, #120	@ 0x78
 80006a8:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80006aa:	f001 fdb4 	bl	8002216 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80006ae:	f000 f961 	bl	8000974 <SystemClock_Config>

/* Configure the peripherals common clocks */
  PeriphCommonClock_Config();
 80006b2:	f000 f9ae 	bl	8000a12 <PeriphCommonClock_Config>

  /* USER CODE BEGIN SysInit */
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80006b6:	f000 ff5b 	bl	8001570 <MX_GPIO_Init>
  MX_TIM1_Init();
 80006ba:	f000 fba1 	bl	8000e00 <MX_TIM1_Init>
  MX_ADC1_Init();
 80006be:	f000 f9d3 	bl	8000a68 <MX_ADC1_Init>
  MX_ADC2_Init();
 80006c2:	f000 fa47 	bl	8000b54 <MX_ADC2_Init>
  MX_ADC3_Init();
 80006c6:	f000 fab9 	bl	8000c3c <MX_ADC3_Init>
  MX_TIM2_Init();
 80006ca:	f000 fc8f 	bl	8000fec <MX_TIM2_Init>
  MX_SPI3_Init();
 80006ce:	f000 fb59 	bl	8000d84 <MX_SPI3_Init>
  MX_TIM3_Init();
 80006d2:	f000 fcdf 	bl	8001094 <MX_TIM3_Init>
  MX_USART3_UART_Init();
 80006d6:	f000 ff1b 	bl	8001510 <MX_USART3_UART_Init>
  MX_TIM4_Init();
 80006da:	f000 fd31 	bl	8001140 <MX_TIM4_Init>
  MX_TIM5_Init();
 80006de:	f000 fd85 	bl	80011ec <MX_TIM5_Init>
  MX_I2C2_Init();
 80006e2:	f000 fb0f 	bl	8000d04 <MX_I2C2_Init>
  MX_TIM8_Init();
 80006e6:	f000 fde1 	bl	80012ac <MX_TIM8_Init>
  MX_TIM15_Init();
 80006ea:	f000 fe93 	bl	8001414 <MX_TIM15_Init>
  MX_TIM17_Init();
 80006ee:	f000 fee9 	bl	80014c4 <MX_TIM17_Init>

  //Put timers in correct mode
  ;


  HAL_TIM_IC_Start_IT(&htim15, TIM_CHANNEL_1);
 80006f2:	2100      	movs	r1, #0
 80006f4:	4890      	ldr	r0, [pc, #576]	@ (8000938 <main+0x294>)
 80006f6:	f005 f8c3 	bl	8005880 <HAL_TIM_IC_Start_IT>
  //Set ADC in correct mode
  HAL_ADC_Start(&hadc1);
 80006fa:	4890      	ldr	r0, [pc, #576]	@ (800093c <main+0x298>)
 80006fc:	f002 f912 	bl	8002924 <HAL_ADC_Start>
  HAL_ADC_Start(&hadc2);
 8000700:	488f      	ldr	r0, [pc, #572]	@ (8000940 <main+0x29c>)
 8000702:	f002 f90f 	bl	8002924 <HAL_ADC_Start>
  //hadc1.Init.EOCSelection = DISABLE; //Apparently important
  //hadc2.Init.EOCSelection = DISABLE; //Apparently important
  HAL_ADC_Start(&hadc3);
 8000706:	488f      	ldr	r0, [pc, #572]	@ (8000944 <main+0x2a0>)
 8000708:	f002 f90c 	bl	8002924 <HAL_ADC_Start>
  //hadc3.Init.EOCSelection = DISABLE; //Apparently important


	// Start PWM for motor 1 and motor 2 channels
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 800070c:	2100      	movs	r1, #0
 800070e:	488e      	ldr	r0, [pc, #568]	@ (8000948 <main+0x2a4>)
 8000710:	f004 ff58 	bl	80055c4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_2);
 8000714:	2104      	movs	r1, #4
 8000716:	488c      	ldr	r0, [pc, #560]	@ (8000948 <main+0x2a4>)
 8000718:	f004 ff54 	bl	80055c4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_3);
 800071c:	2108      	movs	r1, #8
 800071e:	488a      	ldr	r0, [pc, #552]	@ (8000948 <main+0x2a4>)
 8000720:	f004 ff50 	bl	80055c4 <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_4);
 8000724:	210c      	movs	r1, #12
 8000726:	4888      	ldr	r0, [pc, #544]	@ (8000948 <main+0x2a4>)
 8000728:	f004 ff4c 	bl	80055c4 <HAL_TIM_PWM_Start>

	// Assign motor 1 to Timer 1 channels 1 and 3
	motor1.chA = &(htim1.Instance->CCR1);
 800072c:	4b86      	ldr	r3, [pc, #536]	@ (8000948 <main+0x2a4>)
 800072e:	681b      	ldr	r3, [r3, #0]
 8000730:	3334      	adds	r3, #52	@ 0x34
 8000732:	4a86      	ldr	r2, [pc, #536]	@ (800094c <main+0x2a8>)
 8000734:	6013      	str	r3, [r2, #0]
	motor1.chB = &(htim1.Instance->CCR3);
 8000736:	4b84      	ldr	r3, [pc, #528]	@ (8000948 <main+0x2a4>)
 8000738:	681b      	ldr	r3, [r3, #0]
 800073a:	333c      	adds	r3, #60	@ 0x3c
 800073c:	4a83      	ldr	r2, [pc, #524]	@ (800094c <main+0x2a8>)
 800073e:	6053      	str	r3, [r2, #4]
	motor1.Period = __HAL_TIM_GET_AUTORELOAD(&htim1);
 8000740:	4b81      	ldr	r3, [pc, #516]	@ (8000948 <main+0x2a4>)
 8000742:	681b      	ldr	r3, [r3, #0]
 8000744:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000746:	4a81      	ldr	r2, [pc, #516]	@ (800094c <main+0x2a8>)
 8000748:	6093      	str	r3, [r2, #8]

	// Assign motor 2 to Timer 1 channels 2 and 4
	motor2.chA = &(htim1.Instance->CCR2);
 800074a:	4b7f      	ldr	r3, [pc, #508]	@ (8000948 <main+0x2a4>)
 800074c:	681b      	ldr	r3, [r3, #0]
 800074e:	3338      	adds	r3, #56	@ 0x38
 8000750:	4a7f      	ldr	r2, [pc, #508]	@ (8000950 <main+0x2ac>)
 8000752:	6013      	str	r3, [r2, #0]
	motor2.chB = &(htim1.Instance->CCR4);
 8000754:	4b7c      	ldr	r3, [pc, #496]	@ (8000948 <main+0x2a4>)
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	3340      	adds	r3, #64	@ 0x40
 800075a:	4a7d      	ldr	r2, [pc, #500]	@ (8000950 <main+0x2ac>)
 800075c:	6053      	str	r3, [r2, #4]
	motor2.Period = __HAL_TIM_GET_AUTORELOAD(&htim1);
 800075e:	4b7a      	ldr	r3, [pc, #488]	@ (8000948 <main+0x2a4>)
 8000760:	681b      	ldr	r3, [r3, #0]
 8000762:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000764:	4a7a      	ldr	r2, [pc, #488]	@ (8000950 <main+0x2ac>)
 8000766:	6093      	str	r3, [r2, #8]

  	// Enable motors 1 (PB1) and 2 (PB2)
  	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_SET);
 8000768:	2201      	movs	r2, #1
 800076a:	f243 0106 	movw	r1, #12294	@ 0x3006
 800076e:	4879      	ldr	r0, [pc, #484]	@ (8000954 <main+0x2b0>)
 8000770:	f003 f99c 	bl	8003aac <HAL_GPIO_WritePin>

	//Set initial duty cycles
	set_duty(&motor1, 0);
 8000774:	2100      	movs	r1, #0
 8000776:	4875      	ldr	r0, [pc, #468]	@ (800094c <main+0x2a8>)
 8000778:	f001 f814 	bl	80017a4 <set_duty>
	set_duty(&motor2, 0);
 800077c:	2100      	movs	r1, #0
 800077e:	4874      	ldr	r0, [pc, #464]	@ (8000950 <main+0x2ac>)
 8000780:	f001 f810 	bl	80017a4 <set_duty>

	// Initialize encoders
	int16_t mot1_velocity = 0;
 8000784:	2300      	movs	r3, #0
 8000786:	f8a7 3070 	strh.w	r3, [r7, #112]	@ 0x70
	int32_t mot1_position = 0;
 800078a:	2300      	movs	r3, #0
 800078c:	66fb      	str	r3, [r7, #108]	@ 0x6c
	uint32_t enc1_lastval = 0;
 800078e:	2300      	movs	r3, #0
 8000790:	66bb      	str	r3, [r7, #104]	@ 0x68
	uint32_t last_tick1 = 0;
 8000792:	2300      	movs	r3, #0
 8000794:	667b      	str	r3, [r7, #100]	@ 0x64
	encoder1 = (encoder_t){&htim3, mot1_velocity, mot1_position, enc1_lastval, last_tick1};
 8000796:	4b70      	ldr	r3, [pc, #448]	@ (8000958 <main+0x2b4>)
 8000798:	4a70      	ldr	r2, [pc, #448]	@ (800095c <main+0x2b8>)
 800079a:	601a      	str	r2, [r3, #0]
 800079c:	4a6e      	ldr	r2, [pc, #440]	@ (8000958 <main+0x2b4>)
 800079e:	f8b7 3070 	ldrh.w	r3, [r7, #112]	@ 0x70
 80007a2:	8093      	strh	r3, [r2, #4]
 80007a4:	4a6c      	ldr	r2, [pc, #432]	@ (8000958 <main+0x2b4>)
 80007a6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80007a8:	6093      	str	r3, [r2, #8]
 80007aa:	4a6b      	ldr	r2, [pc, #428]	@ (8000958 <main+0x2b4>)
 80007ac:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80007ae:	60d3      	str	r3, [r2, #12]
 80007b0:	4a69      	ldr	r2, [pc, #420]	@ (8000958 <main+0x2b4>)
 80007b2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80007b4:	6113      	str	r3, [r2, #16]

	int16_t mot2_velocity = 0;
 80007b6:	2300      	movs	r3, #0
 80007b8:	f8a7 3062 	strh.w	r3, [r7, #98]	@ 0x62
	int32_t mot2_position = 0;
 80007bc:	2300      	movs	r3, #0
 80007be:	65fb      	str	r3, [r7, #92]	@ 0x5c
	uint32_t enc2_lastval = 0;
 80007c0:	2300      	movs	r3, #0
 80007c2:	65bb      	str	r3, [r7, #88]	@ 0x58
	uint32_t last_tick2 = 0;
 80007c4:	2300      	movs	r3, #0
 80007c6:	657b      	str	r3, [r7, #84]	@ 0x54
	encoder2 = (encoder_t){&htim4, mot2_velocity, mot2_position, enc2_lastval, last_tick2};
 80007c8:	4b65      	ldr	r3, [pc, #404]	@ (8000960 <main+0x2bc>)
 80007ca:	4a66      	ldr	r2, [pc, #408]	@ (8000964 <main+0x2c0>)
 80007cc:	601a      	str	r2, [r3, #0]
 80007ce:	4a64      	ldr	r2, [pc, #400]	@ (8000960 <main+0x2bc>)
 80007d0:	f8b7 3062 	ldrh.w	r3, [r7, #98]	@ 0x62
 80007d4:	8093      	strh	r3, [r2, #4]
 80007d6:	4a62      	ldr	r2, [pc, #392]	@ (8000960 <main+0x2bc>)
 80007d8:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 80007da:	6093      	str	r3, [r2, #8]
 80007dc:	4a60      	ldr	r2, [pc, #384]	@ (8000960 <main+0x2bc>)
 80007de:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 80007e0:	60d3      	str	r3, [r2, #12]
 80007e2:	4a5f      	ldr	r2, [pc, #380]	@ (8000960 <main+0x2bc>)
 80007e4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80007e6:	6113      	str	r3, [r2, #16]

	// Start the encoders and enable interrupts
	HAL_TIM_Encoder_Start_IT(&htim3, TIM_CHANNEL_ALL);
 80007e8:	213c      	movs	r1, #60	@ 0x3c
 80007ea:	485c      	ldr	r0, [pc, #368]	@ (800095c <main+0x2b8>)
 80007ec:	f005 fa38 	bl	8005c60 <HAL_TIM_Encoder_Start_IT>
	__HAL_TIM_SET_COUNTER(&htim3,0);
 80007f0:	4b5a      	ldr	r3, [pc, #360]	@ (800095c <main+0x2b8>)
 80007f2:	681b      	ldr	r3, [r3, #0]
 80007f4:	2200      	movs	r2, #0
 80007f6:	625a      	str	r2, [r3, #36]	@ 0x24
	HAL_TIM_Encoder_Start_IT(&htim4, TIM_CHANNEL_ALL);
 80007f8:	213c      	movs	r1, #60	@ 0x3c
 80007fa:	485a      	ldr	r0, [pc, #360]	@ (8000964 <main+0x2c0>)
 80007fc:	f005 fa30 	bl	8005c60 <HAL_TIM_Encoder_Start_IT>
	__HAL_TIM_SET_COUNTER(&htim4,0);
 8000800:	4b58      	ldr	r3, [pc, #352]	@ (8000964 <main+0x2c0>)
 8000802:	681b      	ldr	r3, [r3, #0]
 8000804:	2200      	movs	r2, #0
 8000806:	625a      	str	r2, [r3, #36]	@ 0x24

	uint32_t previousMillis = 0;//for debug
 8000808:	2300      	movs	r3, #0
 800080a:	677b      	str	r3, [r7, #116]	@ 0x74

	//Set initial duty cycles
	set_duty(&motor1, 40);
 800080c:	2128      	movs	r1, #40	@ 0x28
 800080e:	484f      	ldr	r0, [pc, #316]	@ (800094c <main+0x2a8>)
 8000810:	f000 ffc8 	bl	80017a4 <set_duty>
	set_duty(&motor2, 40);
 8000814:	2128      	movs	r1, #40	@ 0x28
 8000816:	484e      	ldr	r0, [pc, #312]	@ (8000950 <main+0x2ac>)
 8000818:	f000 ffc4 	bl	80017a4 <set_duty>


	// Initialize controllers
	float Pgain_velocity1 = 1;
 800081c:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 8000820:	653b      	str	r3, [r7, #80]	@ 0x50
	int32_t velocity_setpoint = 500;
 8000822:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8000826:	64fb      	str	r3, [r7, #76]	@ 0x4c
	controller1 = (controller_t){Pgain_velocity1, velocity_setpoint};
 8000828:	4a4f      	ldr	r2, [pc, #316]	@ (8000968 <main+0x2c4>)
 800082a:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800082c:	6013      	str	r3, [r2, #0]
 800082e:	4a4e      	ldr	r2, [pc, #312]	@ (8000968 <main+0x2c4>)
 8000830:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8000832:	6053      	str	r3, [r2, #4]



  uint8_t task = 0; //State variable for main loop
 8000834:	2300      	movs	r3, #0
 8000836:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
  uint8_t T1State = 0; //Task 1 State
 800083a:	2300      	movs	r3, #0
 800083c:	f887 304b 	strb.w	r3, [r7, #75]	@ 0x4b
  uint8_t T2State = 0; //Task 2 State
 8000840:	2300      	movs	r3, #0
 8000842:	f887 304a 	strb.w	r3, [r7, #74]	@ 0x4a
  uint8_t T3State = 0; //Task 3 State
 8000846:	2300      	movs	r3, #0
 8000848:	f887 3049 	strb.w	r3, [r7, #73]	@ 0x49
  uint8_t T4State = 0; //Task 4 State
 800084c:	2300      	movs	r3, #0
 800084e:	f887 3048 	strb.w	r3, [r7, #72]	@ 0x48
  uint8_t T5State = 0; //Task 5 State
 8000852:	2300      	movs	r3, #0
 8000854:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
  uint8_t T6State = 0; //Task 6 State
 8000858:	2300      	movs	r3, #0
 800085a:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46

  //Set motors, metal detector, and camera to ON by default. Will turn off if battery too low or killswitch active
   uint8_t DriveON_Rad = 1; //Radio Drive ON
 800085e:	2301      	movs	r3, #1
 8000860:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
   uint8_t DriveON_MD = 1; //Metal Detector Drive ON
 8000864:	2301      	movs	r3, #1
 8000866:	f887 3044 	strb.w	r3, [r7, #68]	@ 0x44
   uint8_t ArmON = 1;
 800086a:	2301      	movs	r3, #1
 800086c:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43

   uint8_t OpenMV = 1; //Camera Update On
 8000870:	2301      	movs	r3, #1
 8000872:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42


   uint8_t Follow = 1; //Follow mode
 8000876:	2301      	movs	r3, #1
 8000878:	f887 3041 	strb.w	r3, [r7, #65]	@ 0x41



   //Set Kill switch to be off by default
   uint8_t BatKill = 0; //If Kill is 1 then turn everything off
 800087c:	2300      	movs	r3, #0
 800087e:	f887 3040 	strb.w	r3, [r7, #64]	@ 0x40
   uint8_t RadKill = 0; //Radio Kill switch
 8000882:	2300      	movs	r3, #0
 8000884:	f887 303f 	strb.w	r3, [r7, #63]	@ 0x3f

   //Initialize a distance and angle setpoint
   float Distance_Target = 0;
 8000888:	f04f 0300 	mov.w	r3, #0
 800088c:	63bb      	str	r3, [r7, #56]	@ 0x38
   float Angle_Target = 0;
 800088e:	f04f 0300 	mov.w	r3, #0
 8000892:	637b      	str	r3, [r7, #52]	@ 0x34

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1) {
	  //Run FSM
	  switch(task){
 8000894:	f897 3073 	ldrb.w	r3, [r7, #115]	@ 0x73
 8000898:	2b06      	cmp	r3, #6
 800089a:	d8fb      	bhi.n	8000894 <main+0x1f0>
 800089c:	a201      	add	r2, pc, #4	@ (adr r2, 80008a4 <main+0x200>)
 800089e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008a2:	bf00      	nop
 80008a4:	080008c1 	.word	0x080008c1
 80008a8:	080008c9 	.word	0x080008c9
 80008ac:	080008d1 	.word	0x080008d1
 80008b0:	080008d9 	.word	0x080008d9
 80008b4:	0800091b 	.word	0x0800091b
 80008b8:	08000923 	.word	0x08000923
 80008bc:	0800092b 	.word	0x0800092b

	  case 0: //State 0
		  //State 0: INIT
		  //Do not make file for this, just Initialize as necessary
		  task = 1;
 80008c0:	2301      	movs	r3, #1
 80008c2:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
		  break;
 80008c6:	e035      	b.n	8000934 <main+0x290>

	  case 1: //State 1
		  //State 1: Diagnostics
		  //Check battery and shut off if necessary
		  //task1_run(&T1State, hadc2,&BatKill);
		  task = 2;
 80008c8:	2302      	movs	r3, #2
 80008ca:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
		  break;
 80008ce:	e031      	b.n	8000934 <main+0x290>

	  case 2: //State 2
		  //State 2: Radio
		  //Check killswitches and radio, act accordingly
		  //task2_run(&T2State,&BatKill,&RadKill,&usWidth,&DriveON_Rad,&ArmON,&MDON,&OpenMV);
	  	  task = 3;
 80008d0:	2303      	movs	r3, #3
 80008d2:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
	  	  break;
 80008d6:	e02d      	b.n	8000934 <main+0x290>

	  case 3: //State 3
		  //State 3: OpenMV Camera
	  	  //task3_run(&T3State,&Distance_Target,&Angle_Target,&SPI_Rec,&Follow,&OpenMV, hspi3);
		  if (HAL_GetTick() - previousMillis >= 200) {
 80008d8:	f001 fd06 	bl	80022e8 <HAL_GetTick>
 80008dc:	4602      	mov	r2, r0
 80008de:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 80008e0:	1ad3      	subs	r3, r2, r3
 80008e2:	2bc7      	cmp	r3, #199	@ 0xc7
 80008e4:	d915      	bls.n	8000912 <main+0x26e>
		  	          previousMillis = HAL_GetTick();
 80008e6:	f001 fcff 	bl	80022e8 <HAL_GetTick>
 80008ea:	6778      	str	r0, [r7, #116]	@ 0x74
		  	          read_encoder(&encoder1);
 80008ec:	481a      	ldr	r0, [pc, #104]	@ (8000958 <main+0x2b4>)
 80008ee:	f7ff fe37 	bl	8000560 <read_encoder>
		  	          read_encoder(&encoder2);
 80008f2:	481b      	ldr	r0, [pc, #108]	@ (8000960 <main+0x2bc>)
 80008f4:	f7ff fe34 	bl	8000560 <read_encoder>
		  	    	  printf("Encoder1 position: %ld\n", encoder1.position);
 80008f8:	4b17      	ldr	r3, [pc, #92]	@ (8000958 <main+0x2b4>)
 80008fa:	689b      	ldr	r3, [r3, #8]
 80008fc:	4619      	mov	r1, r3
 80008fe:	481b      	ldr	r0, [pc, #108]	@ (800096c <main+0x2c8>)
 8000900:	f007 fa9a 	bl	8007e38 <iprintf>
		  	    	  printf("Encoder1 Velocity: %d\n", encoder1.velocity);
 8000904:	4b14      	ldr	r3, [pc, #80]	@ (8000958 <main+0x2b4>)
 8000906:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800090a:	4619      	mov	r1, r3
 800090c:	4818      	ldr	r0, [pc, #96]	@ (8000970 <main+0x2cc>)
 800090e:	f007 fa93 	bl	8007e38 <iprintf>
		  }
		  task = 4;
 8000912:	2304      	movs	r3, #4
 8000914:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
	  	  break;
 8000918:	e00c      	b.n	8000934 <main+0x290>

	  case 4: //State 4
		  //State 4: Metal Detector
	  	  //task4_run(&T4State,&MDON,&sumval,htim17,&Metal_Found, hadc1, hadc2, hadc3);
	  	  task = 5;
 800091a:	2305      	movs	r3, #5
 800091c:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
	  	  break;
 8000920:	e008      	b.n	8000934 <main+0x290>

	  case 5: //State 5
		  //State 5: Arm Motor
	  	  //task5_run(&T5State,&ArmON,&Metal_Found,htim17,&sumval);
	  	  task = 6;
 8000922:	2306      	movs	r3, #6
 8000924:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
	  	  break;
 8000928:	e004      	b.n	8000934 <main+0x290>

	  case 6: //State 6
		  //State 6:
	  	  //Insert State 6 class here
		  //task6_run(&T6State, &DriveON_MD, &DriveON_Rad, &Follow,&Distance_Target,&Angle_Target);
	  	  task = 1; //Do not go back to init
 800092a:	2301      	movs	r3, #1
 800092c:	f887 3073 	strb.w	r3, [r7, #115]	@ 0x73
	  	  break;
 8000930:	bf00      	nop
 8000932:	e7af      	b.n	8000894 <main+0x1f0>
	  switch(task){
 8000934:	e7ae      	b.n	8000894 <main+0x1f0>
 8000936:	bf00      	nop
 8000938:	20000430 	.word	0x20000430
 800093c:	20000084 	.word	0x20000084
 8000940:	200000e8 	.word	0x200000e8
 8000944:	2000014c 	.word	0x2000014c
 8000948:	20000268 	.word	0x20000268
 800094c:	20000564 	.word	0x20000564
 8000950:	20000570 	.word	0x20000570
 8000954:	48000400 	.word	0x48000400
 8000958:	2000057c 	.word	0x2000057c
 800095c:	20000300 	.word	0x20000300
 8000960:	20000590 	.word	0x20000590
 8000964:	2000034c 	.word	0x2000034c
 8000968:	200005a4 	.word	0x200005a4
 800096c:	08008b2c 	.word	0x08008b2c
 8000970:	08008b44 	.word	0x08008b44

08000974 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000974:	b580      	push	{r7, lr}
 8000976:	b096      	sub	sp, #88	@ 0x58
 8000978:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800097a:	f107 0314 	add.w	r3, r7, #20
 800097e:	2244      	movs	r2, #68	@ 0x44
 8000980:	2100      	movs	r1, #0
 8000982:	4618      	mov	r0, r3
 8000984:	f007 faad 	bl	8007ee2 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000988:	463b      	mov	r3, r7
 800098a:	2200      	movs	r2, #0
 800098c:	601a      	str	r2, [r3, #0]
 800098e:	605a      	str	r2, [r3, #4]
 8000990:	609a      	str	r2, [r3, #8]
 8000992:	60da      	str	r2, [r3, #12]
 8000994:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 8000996:	f44f 7000 	mov.w	r0, #512	@ 0x200
 800099a:	f003 f9df 	bl	8003d5c <HAL_PWREx_ControlVoltageScaling>
 800099e:	4603      	mov	r3, r0
 80009a0:	2b00      	cmp	r3, #0
 80009a2:	d001      	beq.n	80009a8 <SystemClock_Config+0x34>
  {
    Error_Handler();
 80009a4:	f000 fef6 	bl	8001794 <Error_Handler>
  }

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80009a8:	2301      	movs	r3, #1
 80009aa:	617b      	str	r3, [r7, #20]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80009ac:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80009b0:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80009b2:	2302      	movs	r3, #2
 80009b4:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80009b6:	2303      	movs	r3, #3
 80009b8:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLM = 5;
 80009ba:	2305      	movs	r3, #5
 80009bc:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLN = 32;
 80009be:	2320      	movs	r3, #32
 80009c0:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 80009c2:	2307      	movs	r3, #7
 80009c4:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 80009c6:	2302      	movs	r3, #2
 80009c8:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 80009ca:	2302      	movs	r3, #2
 80009cc:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80009ce:	f107 0314 	add.w	r3, r7, #20
 80009d2:	4618      	mov	r0, r3
 80009d4:	f003 fa18 	bl	8003e08 <HAL_RCC_OscConfig>
 80009d8:	4603      	mov	r3, r0
 80009da:	2b00      	cmp	r3, #0
 80009dc:	d001      	beq.n	80009e2 <SystemClock_Config+0x6e>
  {
    Error_Handler();
 80009de:	f000 fed9 	bl	8001794 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80009e2:	230f      	movs	r3, #15
 80009e4:	603b      	str	r3, [r7, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80009e6:	2303      	movs	r3, #3
 80009e8:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80009ea:	2300      	movs	r3, #0
 80009ec:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80009ee:	2300      	movs	r3, #0
 80009f0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80009f2:	2300      	movs	r3, #0
 80009f4:	613b      	str	r3, [r7, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 80009f6:	463b      	mov	r3, r7
 80009f8:	2104      	movs	r1, #4
 80009fa:	4618      	mov	r0, r3
 80009fc:	f003 fde0 	bl	80045c0 <HAL_RCC_ClockConfig>
 8000a00:	4603      	mov	r3, r0
 8000a02:	2b00      	cmp	r3, #0
 8000a04:	d001      	beq.n	8000a0a <SystemClock_Config+0x96>
  {
    Error_Handler();
 8000a06:	f000 fec5 	bl	8001794 <Error_Handler>
  }
}
 8000a0a:	bf00      	nop
 8000a0c:	3758      	adds	r7, #88	@ 0x58
 8000a0e:	46bd      	mov	sp, r7
 8000a10:	bd80      	pop	{r7, pc}

08000a12 <PeriphCommonClock_Config>:
/**
  * @brief Peripherals Common Clock Configuration
  * @retval None
  */
void PeriphCommonClock_Config(void)
{
 8000a12:	b580      	push	{r7, lr}
 8000a14:	b0a2      	sub	sp, #136	@ 0x88
 8000a16:	af00      	add	r7, sp, #0
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8000a18:	1d3b      	adds	r3, r7, #4
 8000a1a:	2284      	movs	r2, #132	@ 0x84
 8000a1c:	2100      	movs	r1, #0
 8000a1e:	4618      	mov	r0, r3
 8000a20:	f007 fa5f 	bl	8007ee2 <memset>

  /** Initializes the peripherals clock
  */
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 8000a24:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 8000a28:	607b      	str	r3, [r7, #4]
  PeriphClkInit.AdcClockSelection = RCC_ADCCLKSOURCE_PLLSAI1;
 8000a2a:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000a2e:	67bb      	str	r3, [r7, #120]	@ 0x78
  PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_HSE;
 8000a30:	2303      	movs	r3, #3
 8000a32:	60bb      	str	r3, [r7, #8]
  PeriphClkInit.PLLSAI1.PLLSAI1M = 5;
 8000a34:	2305      	movs	r3, #5
 8000a36:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 8000a38:	2318      	movs	r3, #24
 8000a3a:	613b      	str	r3, [r7, #16]
  PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV7;
 8000a3c:	2307      	movs	r3, #7
 8000a3e:	617b      	str	r3, [r7, #20]
  PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 8000a40:	2302      	movs	r3, #2
 8000a42:	61bb      	str	r3, [r7, #24]
  PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 8000a44:	2302      	movs	r3, #2
 8000a46:	61fb      	str	r3, [r7, #28]
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_ADC1CLK;
 8000a48:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8000a4c:	623b      	str	r3, [r7, #32]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8000a4e:	1d3b      	adds	r3, r7, #4
 8000a50:	4618      	mov	r0, r3
 8000a52:	f003 ffd9 	bl	8004a08 <HAL_RCCEx_PeriphCLKConfig>
 8000a56:	4603      	mov	r3, r0
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	d001      	beq.n	8000a60 <PeriphCommonClock_Config+0x4e>
  {
    Error_Handler();
 8000a5c:	f000 fe9a 	bl	8001794 <Error_Handler>
  }
}
 8000a60:	bf00      	nop
 8000a62:	3788      	adds	r7, #136	@ 0x88
 8000a64:	46bd      	mov	sp, r7
 8000a66:	bd80      	pop	{r7, pc}

08000a68 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	b08a      	sub	sp, #40	@ 0x28
 8000a6c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_MultiModeTypeDef multimode = {0};
 8000a6e:	f107 031c 	add.w	r3, r7, #28
 8000a72:	2200      	movs	r2, #0
 8000a74:	601a      	str	r2, [r3, #0]
 8000a76:	605a      	str	r2, [r3, #4]
 8000a78:	609a      	str	r2, [r3, #8]
  ADC_ChannelConfTypeDef sConfig = {0};
 8000a7a:	1d3b      	adds	r3, r7, #4
 8000a7c:	2200      	movs	r2, #0
 8000a7e:	601a      	str	r2, [r3, #0]
 8000a80:	605a      	str	r2, [r3, #4]
 8000a82:	609a      	str	r2, [r3, #8]
 8000a84:	60da      	str	r2, [r3, #12]
 8000a86:	611a      	str	r2, [r3, #16]
 8000a88:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC1_Init 1 */

  /** Common config
  */
  hadc1.Instance = ADC1;
 8000a8a:	4b2f      	ldr	r3, [pc, #188]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000a8c:	4a2f      	ldr	r2, [pc, #188]	@ (8000b4c <MX_ADC1_Init+0xe4>)
 8000a8e:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8000a90:	4b2d      	ldr	r3, [pc, #180]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000a92:	2200      	movs	r2, #0
 8000a94:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8000a96:	4b2c      	ldr	r3, [pc, #176]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000a98:	2200      	movs	r2, #0
 8000a9a:	609a      	str	r2, [r3, #8]
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000a9c:	4b2a      	ldr	r3, [pc, #168]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000a9e:	2200      	movs	r2, #0
 8000aa0:	60da      	str	r2, [r3, #12]
  hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000aa2:	4b29      	ldr	r3, [pc, #164]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000aa4:	2200      	movs	r2, #0
 8000aa6:	611a      	str	r2, [r3, #16]
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000aa8:	4b27      	ldr	r3, [pc, #156]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000aaa:	2204      	movs	r2, #4
 8000aac:	615a      	str	r2, [r3, #20]
  hadc1.Init.LowPowerAutoWait = DISABLE;
 8000aae:	4b26      	ldr	r3, [pc, #152]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ab0:	2200      	movs	r2, #0
 8000ab2:	761a      	strb	r2, [r3, #24]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8000ab4:	4b24      	ldr	r3, [pc, #144]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ab6:	2200      	movs	r2, #0
 8000ab8:	765a      	strb	r2, [r3, #25]
  hadc1.Init.NbrOfConversion = 1;
 8000aba:	4b23      	ldr	r3, [pc, #140]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000abc:	2201      	movs	r2, #1
 8000abe:	61da      	str	r2, [r3, #28]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8000ac0:	4b21      	ldr	r3, [pc, #132]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ac2:	2200      	movs	r2, #0
 8000ac4:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000ac8:	4b1f      	ldr	r3, [pc, #124]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000aca:	2200      	movs	r2, #0
 8000acc:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000ace:	4b1e      	ldr	r3, [pc, #120]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8000ad4:	4b1c      	ldr	r3, [pc, #112]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ad6:	2200      	movs	r2, #0
 8000ad8:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000adc:	4b1a      	ldr	r3, [pc, #104]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ade:	2200      	movs	r2, #0
 8000ae0:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc1.Init.OversamplingMode = DISABLE;
 8000ae2:	4b19      	ldr	r3, [pc, #100]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000ae4:	2200      	movs	r2, #0
 8000ae6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8000aea:	4817      	ldr	r0, [pc, #92]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000aec:	f001 fdca 	bl	8002684 <HAL_ADC_Init>
 8000af0:	4603      	mov	r3, r0
 8000af2:	2b00      	cmp	r3, #0
 8000af4:	d001      	beq.n	8000afa <MX_ADC1_Init+0x92>
  {
    Error_Handler();
 8000af6:	f000 fe4d 	bl	8001794 <Error_Handler>
  }

  /** Configure the ADC multi-mode
  */
  multimode.Mode = ADC_MODE_INDEPENDENT;
 8000afa:	2300      	movs	r3, #0
 8000afc:	61fb      	str	r3, [r7, #28]
  if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 8000afe:	f107 031c 	add.w	r3, r7, #28
 8000b02:	4619      	mov	r1, r3
 8000b04:	4810      	ldr	r0, [pc, #64]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000b06:	f002 fc65 	bl	80033d4 <HAL_ADCEx_MultiModeConfigChannel>
 8000b0a:	4603      	mov	r3, r0
 8000b0c:	2b00      	cmp	r3, #0
 8000b0e:	d001      	beq.n	8000b14 <MX_ADC1_Init+0xac>
  {
    Error_Handler();
 8000b10:	f000 fe40 	bl	8001794 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8000b14:	4b0e      	ldr	r3, [pc, #56]	@ (8000b50 <MX_ADC1_Init+0xe8>)
 8000b16:	607b      	str	r3, [r7, #4]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000b18:	2306      	movs	r3, #6
 8000b1a:	60bb      	str	r3, [r7, #8]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8000b1c:	2300      	movs	r3, #0
 8000b1e:	60fb      	str	r3, [r7, #12]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000b20:	237f      	movs	r3, #127	@ 0x7f
 8000b22:	613b      	str	r3, [r7, #16]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000b24:	2304      	movs	r3, #4
 8000b26:	617b      	str	r3, [r7, #20]
  sConfig.Offset = 0;
 8000b28:	2300      	movs	r3, #0
 8000b2a:	61bb      	str	r3, [r7, #24]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8000b2c:	1d3b      	adds	r3, r7, #4
 8000b2e:	4619      	mov	r1, r3
 8000b30:	4805      	ldr	r0, [pc, #20]	@ (8000b48 <MX_ADC1_Init+0xe0>)
 8000b32:	f001 ffb1 	bl	8002a98 <HAL_ADC_ConfigChannel>
 8000b36:	4603      	mov	r3, r0
 8000b38:	2b00      	cmp	r3, #0
 8000b3a:	d001      	beq.n	8000b40 <MX_ADC1_Init+0xd8>
  {
    Error_Handler();
 8000b3c:	f000 fe2a 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8000b40:	bf00      	nop
 8000b42:	3728      	adds	r7, #40	@ 0x28
 8000b44:	46bd      	mov	sp, r7
 8000b46:	bd80      	pop	{r7, pc}
 8000b48:	20000084 	.word	0x20000084
 8000b4c:	50040000 	.word	0x50040000
 8000b50:	04300002 	.word	0x04300002

08000b54 <MX_ADC2_Init>:
  * @brief ADC2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC2_Init(void)
{
 8000b54:	b580      	push	{r7, lr}
 8000b56:	b086      	sub	sp, #24
 8000b58:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC2_Init 0 */

  /* USER CODE END ADC2_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000b5a:	463b      	mov	r3, r7
 8000b5c:	2200      	movs	r2, #0
 8000b5e:	601a      	str	r2, [r3, #0]
 8000b60:	605a      	str	r2, [r3, #4]
 8000b62:	609a      	str	r2, [r3, #8]
 8000b64:	60da      	str	r2, [r3, #12]
 8000b66:	611a      	str	r2, [r3, #16]
 8000b68:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC2_Init 1 */

  /** Common config
  */
  hadc2.Instance = ADC2;
 8000b6a:	4b30      	ldr	r3, [pc, #192]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b6c:	4a30      	ldr	r2, [pc, #192]	@ (8000c30 <MX_ADC2_Init+0xdc>)
 8000b6e:	601a      	str	r2, [r3, #0]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8000b70:	4b2e      	ldr	r3, [pc, #184]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b72:	2200      	movs	r2, #0
 8000b74:	605a      	str	r2, [r3, #4]
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 8000b76:	4b2d      	ldr	r3, [pc, #180]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b78:	2200      	movs	r2, #0
 8000b7a:	609a      	str	r2, [r3, #8]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000b7c:	4b2b      	ldr	r3, [pc, #172]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b7e:	2200      	movs	r2, #0
 8000b80:	60da      	str	r2, [r3, #12]
  hadc2.Init.ScanConvMode = ADC_SCAN_ENABLE;
 8000b82:	4b2a      	ldr	r3, [pc, #168]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b84:	2201      	movs	r2, #1
 8000b86:	611a      	str	r2, [r3, #16]
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000b88:	4b28      	ldr	r3, [pc, #160]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b8a:	2204      	movs	r2, #4
 8000b8c:	615a      	str	r2, [r3, #20]
  hadc2.Init.LowPowerAutoWait = DISABLE;
 8000b8e:	4b27      	ldr	r3, [pc, #156]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b90:	2200      	movs	r2, #0
 8000b92:	761a      	strb	r2, [r3, #24]
  hadc2.Init.ContinuousConvMode = DISABLE;
 8000b94:	4b25      	ldr	r3, [pc, #148]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b96:	2200      	movs	r2, #0
 8000b98:	765a      	strb	r2, [r3, #25]
  hadc2.Init.NbrOfConversion = 2;
 8000b9a:	4b24      	ldr	r3, [pc, #144]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000b9c:	2202      	movs	r2, #2
 8000b9e:	61da      	str	r2, [r3, #28]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8000ba0:	4b22      	ldr	r3, [pc, #136]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000ba2:	2200      	movs	r2, #0
 8000ba4:	f883 2020 	strb.w	r2, [r3, #32]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000ba8:	4b20      	ldr	r3, [pc, #128]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000baa:	2200      	movs	r2, #0
 8000bac:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000bae:	4b1f      	ldr	r3, [pc, #124]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc2.Init.DMAContinuousRequests = DISABLE;
 8000bb4:	4b1d      	ldr	r3, [pc, #116]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bb6:	2200      	movs	r2, #0
 8000bb8:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc2.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000bbc:	4b1b      	ldr	r3, [pc, #108]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bbe:	2200      	movs	r2, #0
 8000bc0:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc2.Init.OversamplingMode = DISABLE;
 8000bc2:	4b1a      	ldr	r3, [pc, #104]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8000bca:	4818      	ldr	r0, [pc, #96]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bcc:	f001 fd5a 	bl	8002684 <HAL_ADC_Init>
 8000bd0:	4603      	mov	r3, r0
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d001      	beq.n	8000bda <MX_ADC2_Init+0x86>
  {
    Error_Handler();
 8000bd6:	f000 fddd 	bl	8001794 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_2;
 8000bda:	4b16      	ldr	r3, [pc, #88]	@ (8000c34 <MX_ADC2_Init+0xe0>)
 8000bdc:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000bde:	2306      	movs	r3, #6
 8000be0:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8000be2:	2300      	movs	r3, #0
 8000be4:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000be6:	237f      	movs	r3, #127	@ 0x7f
 8000be8:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000bea:	2304      	movs	r3, #4
 8000bec:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000bee:	2300      	movs	r3, #0
 8000bf0:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000bf2:	463b      	mov	r3, r7
 8000bf4:	4619      	mov	r1, r3
 8000bf6:	480d      	ldr	r0, [pc, #52]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000bf8:	f001 ff4e 	bl	8002a98 <HAL_ADC_ConfigChannel>
 8000bfc:	4603      	mov	r3, r0
 8000bfe:	2b00      	cmp	r3, #0
 8000c00:	d001      	beq.n	8000c06 <MX_ADC2_Init+0xb2>
  {
    Error_Handler();
 8000c02:	f000 fdc7 	bl	8001794 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_15;
 8000c06:	4b0c      	ldr	r3, [pc, #48]	@ (8000c38 <MX_ADC2_Init+0xe4>)
 8000c08:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_2;
 8000c0a:	230c      	movs	r3, #12
 8000c0c:	607b      	str	r3, [r7, #4]
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8000c0e:	463b      	mov	r3, r7
 8000c10:	4619      	mov	r1, r3
 8000c12:	4806      	ldr	r0, [pc, #24]	@ (8000c2c <MX_ADC2_Init+0xd8>)
 8000c14:	f001 ff40 	bl	8002a98 <HAL_ADC_ConfigChannel>
 8000c18:	4603      	mov	r3, r0
 8000c1a:	2b00      	cmp	r3, #0
 8000c1c:	d001      	beq.n	8000c22 <MX_ADC2_Init+0xce>
  {
    Error_Handler();
 8000c1e:	f000 fdb9 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN ADC2_Init 2 */

  /* USER CODE END ADC2_Init 2 */

}
 8000c22:	bf00      	nop
 8000c24:	3718      	adds	r7, #24
 8000c26:	46bd      	mov	sp, r7
 8000c28:	bd80      	pop	{r7, pc}
 8000c2a:	bf00      	nop
 8000c2c:	200000e8 	.word	0x200000e8
 8000c30:	50040100 	.word	0x50040100
 8000c34:	08600004 	.word	0x08600004
 8000c38:	3ef08000 	.word	0x3ef08000

08000c3c <MX_ADC3_Init>:
  * @brief ADC3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC3_Init(void)
{
 8000c3c:	b580      	push	{r7, lr}
 8000c3e:	b086      	sub	sp, #24
 8000c40:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC3_Init 0 */

  /* USER CODE END ADC3_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8000c42:	463b      	mov	r3, r7
 8000c44:	2200      	movs	r2, #0
 8000c46:	601a      	str	r2, [r3, #0]
 8000c48:	605a      	str	r2, [r3, #4]
 8000c4a:	609a      	str	r2, [r3, #8]
 8000c4c:	60da      	str	r2, [r3, #12]
 8000c4e:	611a      	str	r2, [r3, #16]
 8000c50:	615a      	str	r2, [r3, #20]

  /* USER CODE END ADC3_Init 1 */

  /** Common config
  */
  hadc3.Instance = ADC3;
 8000c52:	4b29      	ldr	r3, [pc, #164]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c54:	4a29      	ldr	r2, [pc, #164]	@ (8000cfc <MX_ADC3_Init+0xc0>)
 8000c56:	601a      	str	r2, [r3, #0]
  hadc3.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
 8000c58:	4b27      	ldr	r3, [pc, #156]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	605a      	str	r2, [r3, #4]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8000c5e:	4b26      	ldr	r3, [pc, #152]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c60:	2200      	movs	r2, #0
 8000c62:	609a      	str	r2, [r3, #8]
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8000c64:	4b24      	ldr	r3, [pc, #144]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c66:	2200      	movs	r2, #0
 8000c68:	60da      	str	r2, [r3, #12]
  hadc3.Init.ScanConvMode = ADC_SCAN_DISABLE;
 8000c6a:	4b23      	ldr	r3, [pc, #140]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c6c:	2200      	movs	r2, #0
 8000c6e:	611a      	str	r2, [r3, #16]
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8000c70:	4b21      	ldr	r3, [pc, #132]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c72:	2204      	movs	r2, #4
 8000c74:	615a      	str	r2, [r3, #20]
  hadc3.Init.LowPowerAutoWait = DISABLE;
 8000c76:	4b20      	ldr	r3, [pc, #128]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c78:	2200      	movs	r2, #0
 8000c7a:	761a      	strb	r2, [r3, #24]
  hadc3.Init.ContinuousConvMode = DISABLE;
 8000c7c:	4b1e      	ldr	r3, [pc, #120]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c7e:	2200      	movs	r2, #0
 8000c80:	765a      	strb	r2, [r3, #25]
  hadc3.Init.NbrOfConversion = 1;
 8000c82:	4b1d      	ldr	r3, [pc, #116]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c84:	2201      	movs	r2, #1
 8000c86:	61da      	str	r2, [r3, #28]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 8000c88:	4b1b      	ldr	r3, [pc, #108]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c8a:	2200      	movs	r2, #0
 8000c8c:	f883 2020 	strb.w	r2, [r3, #32]
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8000c90:	4b19      	ldr	r3, [pc, #100]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c92:	2200      	movs	r2, #0
 8000c94:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8000c96:	4b18      	ldr	r3, [pc, #96]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c98:	2200      	movs	r2, #0
 8000c9a:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8000c9c:	4b16      	ldr	r3, [pc, #88]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000c9e:	2200      	movs	r2, #0
 8000ca0:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc3.Init.Overrun = ADC_OVR_DATA_PRESERVED;
 8000ca4:	4b14      	ldr	r3, [pc, #80]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000ca6:	2200      	movs	r2, #0
 8000ca8:	635a      	str	r2, [r3, #52]	@ 0x34
  hadc3.Init.OversamplingMode = DISABLE;
 8000caa:	4b13      	ldr	r3, [pc, #76]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000cac:	2200      	movs	r2, #0
 8000cae:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8000cb2:	4811      	ldr	r0, [pc, #68]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000cb4:	f001 fce6 	bl	8002684 <HAL_ADC_Init>
 8000cb8:	4603      	mov	r3, r0
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d001      	beq.n	8000cc2 <MX_ADC3_Init+0x86>
  {
    Error_Handler();
 8000cbe:	f000 fd69 	bl	8001794 <Error_Handler>
  }

  /** Configure Regular Channel
  */
  sConfig.Channel = ADC_CHANNEL_3;
 8000cc2:	4b0f      	ldr	r3, [pc, #60]	@ (8000d00 <MX_ADC3_Init+0xc4>)
 8000cc4:	603b      	str	r3, [r7, #0]
  sConfig.Rank = ADC_REGULAR_RANK_1;
 8000cc6:	2306      	movs	r3, #6
 8000cc8:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_2CYCLES_5;
 8000cca:	2300      	movs	r3, #0
 8000ccc:	60bb      	str	r3, [r7, #8]
  sConfig.SingleDiff = ADC_SINGLE_ENDED;
 8000cce:	237f      	movs	r3, #127	@ 0x7f
 8000cd0:	60fb      	str	r3, [r7, #12]
  sConfig.OffsetNumber = ADC_OFFSET_NONE;
 8000cd2:	2304      	movs	r3, #4
 8000cd4:	613b      	str	r3, [r7, #16]
  sConfig.Offset = 0;
 8000cd6:	2300      	movs	r3, #0
 8000cd8:	617b      	str	r3, [r7, #20]
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8000cda:	463b      	mov	r3, r7
 8000cdc:	4619      	mov	r1, r3
 8000cde:	4806      	ldr	r0, [pc, #24]	@ (8000cf8 <MX_ADC3_Init+0xbc>)
 8000ce0:	f001 feda 	bl	8002a98 <HAL_ADC_ConfigChannel>
 8000ce4:	4603      	mov	r3, r0
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d001      	beq.n	8000cee <MX_ADC3_Init+0xb2>
  {
    Error_Handler();
 8000cea:	f000 fd53 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN ADC3_Init 2 */

  /* USER CODE END ADC3_Init 2 */

}
 8000cee:	bf00      	nop
 8000cf0:	3718      	adds	r7, #24
 8000cf2:	46bd      	mov	sp, r7
 8000cf4:	bd80      	pop	{r7, pc}
 8000cf6:	bf00      	nop
 8000cf8:	2000014c 	.word	0x2000014c
 8000cfc:	50040200 	.word	0x50040200
 8000d00:	0c900008 	.word	0x0c900008

08000d04 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 8000d04:	b580      	push	{r7, lr}
 8000d06:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 8000d08:	4b1b      	ldr	r3, [pc, #108]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d0a:	4a1c      	ldr	r2, [pc, #112]	@ (8000d7c <MX_I2C2_Init+0x78>)
 8000d0c:	601a      	str	r2, [r3, #0]
  hi2c2.Init.Timing = 0x10909CEC;
 8000d0e:	4b1a      	ldr	r3, [pc, #104]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d10:	4a1b      	ldr	r2, [pc, #108]	@ (8000d80 <MX_I2C2_Init+0x7c>)
 8000d12:	605a      	str	r2, [r3, #4]
  hi2c2.Init.OwnAddress1 = 0;
 8000d14:	4b18      	ldr	r3, [pc, #96]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	609a      	str	r2, [r3, #8]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000d1a:	4b17      	ldr	r3, [pc, #92]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d1c:	2201      	movs	r2, #1
 8000d1e:	60da      	str	r2, [r3, #12]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000d20:	4b15      	ldr	r3, [pc, #84]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d22:	2200      	movs	r2, #0
 8000d24:	611a      	str	r2, [r3, #16]
  hi2c2.Init.OwnAddress2 = 0;
 8000d26:	4b14      	ldr	r3, [pc, #80]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000d2c:	4b12      	ldr	r3, [pc, #72]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d2e:	2200      	movs	r2, #0
 8000d30:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000d32:	4b11      	ldr	r3, [pc, #68]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d34:	2200      	movs	r2, #0
 8000d36:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000d38:	4b0f      	ldr	r3, [pc, #60]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d3a:	2200      	movs	r2, #0
 8000d3c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 8000d3e:	480e      	ldr	r0, [pc, #56]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d40:	f002 fecc 	bl	8003adc <HAL_I2C_Init>
 8000d44:	4603      	mov	r3, r0
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	d001      	beq.n	8000d4e <MX_I2C2_Init+0x4a>
  {
    Error_Handler();
 8000d4a:	f000 fd23 	bl	8001794 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c2, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000d4e:	2100      	movs	r1, #0
 8000d50:	4809      	ldr	r0, [pc, #36]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d52:	f002 ff5e 	bl	8003c12 <HAL_I2CEx_ConfigAnalogFilter>
 8000d56:	4603      	mov	r3, r0
 8000d58:	2b00      	cmp	r3, #0
 8000d5a:	d001      	beq.n	8000d60 <MX_I2C2_Init+0x5c>
  {
    Error_Handler();
 8000d5c:	f000 fd1a 	bl	8001794 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c2, 0) != HAL_OK)
 8000d60:	2100      	movs	r1, #0
 8000d62:	4805      	ldr	r0, [pc, #20]	@ (8000d78 <MX_I2C2_Init+0x74>)
 8000d64:	f002 ffa0 	bl	8003ca8 <HAL_I2CEx_ConfigDigitalFilter>
 8000d68:	4603      	mov	r3, r0
 8000d6a:	2b00      	cmp	r3, #0
 8000d6c:	d001      	beq.n	8000d72 <MX_I2C2_Init+0x6e>
  {
    Error_Handler();
 8000d6e:	f000 fd11 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8000d72:	bf00      	nop
 8000d74:	bd80      	pop	{r7, pc}
 8000d76:	bf00      	nop
 8000d78:	200001b0 	.word	0x200001b0
 8000d7c:	40005800 	.word	0x40005800
 8000d80:	10909cec 	.word	0x10909cec

08000d84 <MX_SPI3_Init>:
  * @brief SPI3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI3_Init(void)
{
 8000d84:	b580      	push	{r7, lr}
 8000d86:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI3_Init 1 */

  /* USER CODE END SPI3_Init 1 */
  /* SPI3 parameter configuration*/
  hspi3.Instance = SPI3;
 8000d88:	4b1b      	ldr	r3, [pc, #108]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000d8a:	4a1c      	ldr	r2, [pc, #112]	@ (8000dfc <MX_SPI3_Init+0x78>)
 8000d8c:	601a      	str	r2, [r3, #0]
  hspi3.Init.Mode = SPI_MODE_MASTER;
 8000d8e:	4b1a      	ldr	r3, [pc, #104]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000d90:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8000d94:	605a      	str	r2, [r3, #4]
  hspi3.Init.Direction = SPI_DIRECTION_2LINES;
 8000d96:	4b18      	ldr	r3, [pc, #96]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000d98:	2200      	movs	r2, #0
 8000d9a:	609a      	str	r2, [r3, #8]
  hspi3.Init.DataSize = SPI_DATASIZE_4BIT;
 8000d9c:	4b16      	ldr	r3, [pc, #88]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000d9e:	f44f 7240 	mov.w	r2, #768	@ 0x300
 8000da2:	60da      	str	r2, [r3, #12]
  hspi3.Init.CLKPolarity = SPI_POLARITY_LOW;
 8000da4:	4b14      	ldr	r3, [pc, #80]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000da6:	2200      	movs	r2, #0
 8000da8:	611a      	str	r2, [r3, #16]
  hspi3.Init.CLKPhase = SPI_PHASE_1EDGE;
 8000daa:	4b13      	ldr	r3, [pc, #76]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dac:	2200      	movs	r2, #0
 8000dae:	615a      	str	r2, [r3, #20]
  hspi3.Init.NSS = SPI_NSS_SOFT;
 8000db0:	4b11      	ldr	r3, [pc, #68]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000db2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8000db6:	619a      	str	r2, [r3, #24]
  hspi3.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8000db8:	4b0f      	ldr	r3, [pc, #60]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dba:	2200      	movs	r2, #0
 8000dbc:	61da      	str	r2, [r3, #28]
  hspi3.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8000dbe:	4b0e      	ldr	r3, [pc, #56]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dc0:	2200      	movs	r2, #0
 8000dc2:	621a      	str	r2, [r3, #32]
  hspi3.Init.TIMode = SPI_TIMODE_DISABLE;
 8000dc4:	4b0c      	ldr	r3, [pc, #48]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dc6:	2200      	movs	r2, #0
 8000dc8:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi3.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8000dca:	4b0b      	ldr	r3, [pc, #44]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dcc:	2200      	movs	r2, #0
 8000dce:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi3.Init.CRCPolynomial = 7;
 8000dd0:	4b09      	ldr	r3, [pc, #36]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dd2:	2207      	movs	r2, #7
 8000dd4:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi3.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 8000dd6:	4b08      	ldr	r3, [pc, #32]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dd8:	2200      	movs	r2, #0
 8000dda:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi3.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 8000ddc:	4b06      	ldr	r3, [pc, #24]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000dde:	2208      	movs	r2, #8
 8000de0:	635a      	str	r2, [r3, #52]	@ 0x34
  if (HAL_SPI_Init(&hspi3) != HAL_OK)
 8000de2:	4805      	ldr	r0, [pc, #20]	@ (8000df8 <MX_SPI3_Init+0x74>)
 8000de4:	f004 fa9c 	bl	8005320 <HAL_SPI_Init>
 8000de8:	4603      	mov	r3, r0
 8000dea:	2b00      	cmp	r3, #0
 8000dec:	d001      	beq.n	8000df2 <MX_SPI3_Init+0x6e>
  {
    Error_Handler();
 8000dee:	f000 fcd1 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN SPI3_Init 2 */

  /* USER CODE END SPI3_Init 2 */

}
 8000df2:	bf00      	nop
 8000df4:	bd80      	pop	{r7, pc}
 8000df6:	bf00      	nop
 8000df8:	20000204 	.word	0x20000204
 8000dfc:	40003c00 	.word	0x40003c00

08000e00 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8000e00:	b580      	push	{r7, lr}
 8000e02:	b09a      	sub	sp, #104	@ 0x68
 8000e04:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */
  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8000e06:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	601a      	str	r2, [r3, #0]
 8000e0e:	605a      	str	r2, [r3, #4]
 8000e10:	609a      	str	r2, [r3, #8]
 8000e12:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000e14:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8000e18:	2200      	movs	r2, #0
 8000e1a:	601a      	str	r2, [r3, #0]
 8000e1c:	605a      	str	r2, [r3, #4]
 8000e1e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000e20:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000e24:	2200      	movs	r2, #0
 8000e26:	601a      	str	r2, [r3, #0]
 8000e28:	605a      	str	r2, [r3, #4]
 8000e2a:	609a      	str	r2, [r3, #8]
 8000e2c:	60da      	str	r2, [r3, #12]
 8000e2e:	611a      	str	r2, [r3, #16]
 8000e30:	615a      	str	r2, [r3, #20]
 8000e32:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000e34:	1d3b      	adds	r3, r7, #4
 8000e36:	222c      	movs	r2, #44	@ 0x2c
 8000e38:	2100      	movs	r1, #0
 8000e3a:	4618      	mov	r0, r3
 8000e3c:	f007 f851 	bl	8007ee2 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */
  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8000e40:	4b68      	ldr	r3, [pc, #416]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e42:	4a69      	ldr	r2, [pc, #420]	@ (8000fe8 <MX_TIM1_Init+0x1e8>)
 8000e44:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8000e46:	4b67      	ldr	r3, [pc, #412]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e48:	2200      	movs	r2, #0
 8000e4a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000e4c:	4b65      	ldr	r3, [pc, #404]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e4e:	2200      	movs	r2, #0
 8000e50:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 59999;
 8000e52:	4b64      	ldr	r3, [pc, #400]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e54:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 8000e58:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000e5a:	4b62      	ldr	r3, [pc, #392]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e5c:	2200      	movs	r2, #0
 8000e5e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8000e60:	4b60      	ldr	r3, [pc, #384]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e62:	2200      	movs	r2, #0
 8000e64:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000e66:	4b5f      	ldr	r3, [pc, #380]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e68:	2200      	movs	r2, #0
 8000e6a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8000e6c:	485d      	ldr	r0, [pc, #372]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e6e:	f004 fafa 	bl	8005466 <HAL_TIM_Base_Init>
 8000e72:	4603      	mov	r3, r0
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d001      	beq.n	8000e7c <MX_TIM1_Init+0x7c>
  {
    Error_Handler();
 8000e78:	f000 fc8c 	bl	8001794 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8000e7c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8000e80:	65bb      	str	r3, [r7, #88]	@ 0x58
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8000e82:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 8000e86:	4619      	mov	r1, r3
 8000e88:	4856      	ldr	r0, [pc, #344]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e8a:	f005 fa49 	bl	8006320 <HAL_TIM_ConfigClockSource>
 8000e8e:	4603      	mov	r3, r0
 8000e90:	2b00      	cmp	r3, #0
 8000e92:	d001      	beq.n	8000e98 <MX_TIM1_Init+0x98>
  {
    Error_Handler();
 8000e94:	f000 fc7e 	bl	8001794 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8000e98:	4852      	ldr	r0, [pc, #328]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000e9a:	f004 fb3b 	bl	8005514 <HAL_TIM_PWM_Init>
 8000e9e:	4603      	mov	r3, r0
 8000ea0:	2b00      	cmp	r3, #0
 8000ea2:	d001      	beq.n	8000ea8 <MX_TIM1_Init+0xa8>
  {
    Error_Handler();
 8000ea4:	f000 fc76 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 8000eac:	2300      	movs	r3, #0
 8000eae:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8000eb4:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 8000eb8:	4619      	mov	r1, r3
 8000eba:	484a      	ldr	r0, [pc, #296]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000ebc:	f006 f8ba 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 8000ec0:	4603      	mov	r3, r0
 8000ec2:	2b00      	cmp	r3, #0
 8000ec4:	d001      	beq.n	8000eca <MX_TIM1_Init+0xca>
  {
    Error_Handler();
 8000ec6:	f000 fc65 	bl	8001794 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000eca:	2360      	movs	r3, #96	@ 0x60
 8000ecc:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8000ece:	2300      	movs	r3, #0
 8000ed0:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000ed2:	2300      	movs	r3, #0
 8000ed4:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000ed6:	2300      	movs	r3, #0
 8000ed8:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000eda:	2300      	movs	r3, #0
 8000edc:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000ede:	2300      	movs	r3, #0
 8000ee0:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000ee6:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000eea:	2200      	movs	r2, #0
 8000eec:	4619      	mov	r1, r3
 8000eee:	483d      	ldr	r0, [pc, #244]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000ef0:	f005 f902 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8000ef4:	4603      	mov	r3, r0
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	d001      	beq.n	8000efe <MX_TIM1_Init+0xfe>
  {
    Error_Handler();
 8000efa:	f000 fc4b 	bl	8001794 <Error_Handler>
  }
  __HAL_TIM_DISABLE_OCxPRELOAD(&htim1, TIM_CHANNEL_1);
 8000efe:	4b39      	ldr	r3, [pc, #228]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f00:	681b      	ldr	r3, [r3, #0]
 8000f02:	699a      	ldr	r2, [r3, #24]
 8000f04:	4b37      	ldr	r3, [pc, #220]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f06:	681b      	ldr	r3, [r3, #0]
 8000f08:	f022 0208 	bic.w	r2, r2, #8
 8000f0c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000f0e:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000f12:	2204      	movs	r2, #4
 8000f14:	4619      	mov	r1, r3
 8000f16:	4833      	ldr	r0, [pc, #204]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f18:	f005 f8ee 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8000f1c:	4603      	mov	r3, r0
 8000f1e:	2b00      	cmp	r3, #0
 8000f20:	d001      	beq.n	8000f26 <MX_TIM1_Init+0x126>
  {
    Error_Handler();
 8000f22:	f000 fc37 	bl	8001794 <Error_Handler>
  }
  __HAL_TIM_DISABLE_OCxPRELOAD(&htim1, TIM_CHANNEL_2);
 8000f26:	4b2f      	ldr	r3, [pc, #188]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f28:	681b      	ldr	r3, [r3, #0]
 8000f2a:	699a      	ldr	r2, [r3, #24]
 8000f2c:	4b2d      	ldr	r3, [pc, #180]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f2e:	681b      	ldr	r3, [r3, #0]
 8000f30:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8000f34:	619a      	str	r2, [r3, #24]
  sConfigOC.Pulse = 29999;
 8000f36:	f247 532f 	movw	r3, #29999	@ 0x752f
 8000f3a:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8000f3c:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000f40:	2208      	movs	r2, #8
 8000f42:	4619      	mov	r1, r3
 8000f44:	4827      	ldr	r0, [pc, #156]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f46:	f005 f8d7 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8000f4a:	4603      	mov	r3, r0
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d001      	beq.n	8000f54 <MX_TIM1_Init+0x154>
  {
    Error_Handler();
 8000f50:	f000 fc20 	bl	8001794 <Error_Handler>
  }
  __HAL_TIM_DISABLE_OCxPRELOAD(&htim1, TIM_CHANNEL_3);
 8000f54:	4b23      	ldr	r3, [pc, #140]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	69da      	ldr	r2, [r3, #28]
 8000f5a:	4b22      	ldr	r3, [pc, #136]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f5c:	681b      	ldr	r3, [r3, #0]
 8000f5e:	f022 0208 	bic.w	r2, r2, #8
 8000f62:	61da      	str	r2, [r3, #28]
  sConfigOC.Pulse = 0;
 8000f64:	2300      	movs	r3, #0
 8000f66:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8000f68:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8000f6c:	220c      	movs	r2, #12
 8000f6e:	4619      	mov	r1, r3
 8000f70:	481c      	ldr	r0, [pc, #112]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f72:	f005 f8c1 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8000f76:	4603      	mov	r3, r0
 8000f78:	2b00      	cmp	r3, #0
 8000f7a:	d001      	beq.n	8000f80 <MX_TIM1_Init+0x180>
  {
    Error_Handler();
 8000f7c:	f000 fc0a 	bl	8001794 <Error_Handler>
  }
  __HAL_TIM_DISABLE_OCxPRELOAD(&htim1, TIM_CHANNEL_4);
 8000f80:	4b18      	ldr	r3, [pc, #96]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	69da      	ldr	r2, [r3, #28]
 8000f86:	4b17      	ldr	r3, [pc, #92]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000f88:	681b      	ldr	r3, [r3, #0]
 8000f8a:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8000f8e:	61da      	str	r2, [r3, #28]
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8000f90:	2300      	movs	r3, #0
 8000f92:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8000f94:	2300      	movs	r3, #0
 8000f96:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8000f98:	2300      	movs	r3, #0
 8000f9a:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8000fa4:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000fa8:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8000faa:	2300      	movs	r3, #0
 8000fac:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8000fae:	2300      	movs	r3, #0
 8000fb0:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8000fb2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8000fb6:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 8000fb8:	2300      	movs	r3, #0
 8000fba:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8000fbc:	2300      	movs	r3, #0
 8000fbe:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8000fc0:	1d3b      	adds	r3, r7, #4
 8000fc2:	4619      	mov	r1, r3
 8000fc4:	4807      	ldr	r0, [pc, #28]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000fc6:	f006 f8bd 	bl	8007144 <HAL_TIMEx_ConfigBreakDeadTime>
 8000fca:	4603      	mov	r3, r0
 8000fcc:	2b00      	cmp	r3, #0
 8000fce:	d001      	beq.n	8000fd4 <MX_TIM1_Init+0x1d4>
  {
    Error_Handler();
 8000fd0:	f000 fbe0 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */
  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8000fd4:	4803      	ldr	r0, [pc, #12]	@ (8000fe4 <MX_TIM1_Init+0x1e4>)
 8000fd6:	f000 ff5b 	bl	8001e90 <HAL_TIM_MspPostInit>

}
 8000fda:	bf00      	nop
 8000fdc:	3768      	adds	r7, #104	@ 0x68
 8000fde:	46bd      	mov	sp, r7
 8000fe0:	bd80      	pop	{r7, pc}
 8000fe2:	bf00      	nop
 8000fe4:	20000268 	.word	0x20000268
 8000fe8:	40012c00 	.word	0x40012c00

08000fec <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000fec:	b580      	push	{r7, lr}
 8000fee:	b08c      	sub	sp, #48	@ 0x30
 8000ff0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8000ff2:	f107 030c 	add.w	r3, r7, #12
 8000ff6:	2224      	movs	r2, #36	@ 0x24
 8000ff8:	2100      	movs	r1, #0
 8000ffa:	4618      	mov	r0, r3
 8000ffc:	f006 ff71 	bl	8007ee2 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001000:	463b      	mov	r3, r7
 8001002:	2200      	movs	r2, #0
 8001004:	601a      	str	r2, [r3, #0]
 8001006:	605a      	str	r2, [r3, #4]
 8001008:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800100a:	4b21      	ldr	r3, [pc, #132]	@ (8001090 <MX_TIM2_Init+0xa4>)
 800100c:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8001010:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001012:	4b1f      	ldr	r3, [pc, #124]	@ (8001090 <MX_TIM2_Init+0xa4>)
 8001014:	2200      	movs	r2, #0
 8001016:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001018:	4b1d      	ldr	r3, [pc, #116]	@ (8001090 <MX_TIM2_Init+0xa4>)
 800101a:	2200      	movs	r2, #0
 800101c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 800101e:	4b1c      	ldr	r3, [pc, #112]	@ (8001090 <MX_TIM2_Init+0xa4>)
 8001020:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001024:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001026:	4b1a      	ldr	r3, [pc, #104]	@ (8001090 <MX_TIM2_Init+0xa4>)
 8001028:	2200      	movs	r2, #0
 800102a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800102c:	4b18      	ldr	r3, [pc, #96]	@ (8001090 <MX_TIM2_Init+0xa4>)
 800102e:	2200      	movs	r2, #0
 8001030:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8001032:	2301      	movs	r3, #1
 8001034:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001036:	2300      	movs	r3, #0
 8001038:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800103a:	2301      	movs	r3, #1
 800103c:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 800103e:	2300      	movs	r3, #0
 8001040:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8001042:	2300      	movs	r3, #0
 8001044:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001046:	2300      	movs	r3, #0
 8001048:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800104a:	2301      	movs	r3, #1
 800104c:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 800104e:	2300      	movs	r3, #0
 8001050:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 8001052:	2300      	movs	r3, #0
 8001054:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 8001056:	f107 030c 	add.w	r3, r7, #12
 800105a:	4619      	mov	r1, r3
 800105c:	480c      	ldr	r0, [pc, #48]	@ (8001090 <MX_TIM2_Init+0xa4>)
 800105e:	f004 fd59 	bl	8005b14 <HAL_TIM_Encoder_Init>
 8001062:	4603      	mov	r3, r0
 8001064:	2b00      	cmp	r3, #0
 8001066:	d001      	beq.n	800106c <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 8001068:	f000 fb94 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800106c:	2300      	movs	r3, #0
 800106e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001070:	2300      	movs	r3, #0
 8001072:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8001074:	463b      	mov	r3, r7
 8001076:	4619      	mov	r1, r3
 8001078:	4805      	ldr	r0, [pc, #20]	@ (8001090 <MX_TIM2_Init+0xa4>)
 800107a:	f005 ffdb 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 800107e:	4603      	mov	r3, r0
 8001080:	2b00      	cmp	r3, #0
 8001082:	d001      	beq.n	8001088 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8001084:	f000 fb86 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8001088:	bf00      	nop
 800108a:	3730      	adds	r7, #48	@ 0x30
 800108c:	46bd      	mov	sp, r7
 800108e:	bd80      	pop	{r7, pc}
 8001090:	200002b4 	.word	0x200002b4

08001094 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001094:	b580      	push	{r7, lr}
 8001096:	b08c      	sub	sp, #48	@ 0x30
 8001098:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 800109a:	f107 030c 	add.w	r3, r7, #12
 800109e:	2224      	movs	r2, #36	@ 0x24
 80010a0:	2100      	movs	r1, #0
 80010a2:	4618      	mov	r0, r3
 80010a4:	f006 ff1d 	bl	8007ee2 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80010a8:	463b      	mov	r3, r7
 80010aa:	2200      	movs	r2, #0
 80010ac:	601a      	str	r2, [r3, #0]
 80010ae:	605a      	str	r2, [r3, #4]
 80010b0:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80010b2:	4b21      	ldr	r3, [pc, #132]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010b4:	4a21      	ldr	r2, [pc, #132]	@ (800113c <MX_TIM3_Init+0xa8>)
 80010b6:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 80010b8:	4b1f      	ldr	r3, [pc, #124]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010ba:	2200      	movs	r2, #0
 80010bc:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 80010be:	4b1e      	ldr	r3, [pc, #120]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010c0:	2200      	movs	r2, #0
 80010c2:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 80010c4:	4b1c      	ldr	r3, [pc, #112]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010c6:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80010ca:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80010cc:	4b1a      	ldr	r3, [pc, #104]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010ce:	2200      	movs	r2, #0
 80010d0:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80010d2:	4b19      	ldr	r3, [pc, #100]	@ (8001138 <MX_TIM3_Init+0xa4>)
 80010d4:	2200      	movs	r2, #0
 80010d6:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 80010d8:	2301      	movs	r3, #1
 80010da:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 80010dc:	2300      	movs	r3, #0
 80010de:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 80010e0:	2301      	movs	r3, #1
 80010e2:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 80010e4:	2300      	movs	r3, #0
 80010e6:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 80010e8:	2300      	movs	r3, #0
 80010ea:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 80010ec:	2300      	movs	r3, #0
 80010ee:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 80010f0:	2301      	movs	r3, #1
 80010f2:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80010f4:	2300      	movs	r3, #0
 80010f6:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80010f8:	2300      	movs	r3, #0
 80010fa:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 80010fc:	f107 030c 	add.w	r3, r7, #12
 8001100:	4619      	mov	r1, r3
 8001102:	480d      	ldr	r0, [pc, #52]	@ (8001138 <MX_TIM3_Init+0xa4>)
 8001104:	f004 fd06 	bl	8005b14 <HAL_TIM_Encoder_Init>
 8001108:	4603      	mov	r3, r0
 800110a:	2b00      	cmp	r3, #0
 800110c:	d001      	beq.n	8001112 <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 800110e:	f000 fb41 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001112:	2300      	movs	r3, #0
 8001114:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001116:	2300      	movs	r3, #0
 8001118:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 800111a:	463b      	mov	r3, r7
 800111c:	4619      	mov	r1, r3
 800111e:	4806      	ldr	r0, [pc, #24]	@ (8001138 <MX_TIM3_Init+0xa4>)
 8001120:	f005 ff88 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 8001124:	4603      	mov	r3, r0
 8001126:	2b00      	cmp	r3, #0
 8001128:	d001      	beq.n	800112e <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 800112a:	f000 fb33 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 800112e:	bf00      	nop
 8001130:	3730      	adds	r7, #48	@ 0x30
 8001132:	46bd      	mov	sp, r7
 8001134:	bd80      	pop	{r7, pc}
 8001136:	bf00      	nop
 8001138:	20000300 	.word	0x20000300
 800113c:	40000400 	.word	0x40000400

08001140 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001140:	b580      	push	{r7, lr}
 8001142:	b08c      	sub	sp, #48	@ 0x30
 8001144:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8001146:	f107 030c 	add.w	r3, r7, #12
 800114a:	2224      	movs	r2, #36	@ 0x24
 800114c:	2100      	movs	r1, #0
 800114e:	4618      	mov	r0, r3
 8001150:	f006 fec7 	bl	8007ee2 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001154:	463b      	mov	r3, r7
 8001156:	2200      	movs	r2, #0
 8001158:	601a      	str	r2, [r3, #0]
 800115a:	605a      	str	r2, [r3, #4]
 800115c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800115e:	4b21      	ldr	r3, [pc, #132]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 8001160:	4a21      	ldr	r2, [pc, #132]	@ (80011e8 <MX_TIM4_Init+0xa8>)
 8001162:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8001164:	4b1f      	ldr	r3, [pc, #124]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 8001166:	2200      	movs	r2, #0
 8001168:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800116a:	4b1e      	ldr	r3, [pc, #120]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 800116c:	2200      	movs	r2, #0
 800116e:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8001170:	4b1c      	ldr	r3, [pc, #112]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 8001172:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8001176:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001178:	4b1a      	ldr	r3, [pc, #104]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 800117a:	2200      	movs	r2, #0
 800117c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800117e:	4b19      	ldr	r3, [pc, #100]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 8001180:	2200      	movs	r2, #0
 8001182:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8001184:	2301      	movs	r3, #1
 8001186:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8001188:	2300      	movs	r3, #0
 800118a:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 800118c:	2301      	movs	r3, #1
 800118e:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8001190:	2300      	movs	r3, #0
 8001192:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8001194:	2300      	movs	r3, #0
 8001196:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8001198:	2300      	movs	r3, #0
 800119a:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 800119c:	2301      	movs	r3, #1
 800119e:	627b      	str	r3, [r7, #36]	@ 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 80011a0:	2300      	movs	r3, #0
 80011a2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sConfig.IC2Filter = 0;
 80011a4:	2300      	movs	r3, #0
 80011a6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 80011a8:	f107 030c 	add.w	r3, r7, #12
 80011ac:	4619      	mov	r1, r3
 80011ae:	480d      	ldr	r0, [pc, #52]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 80011b0:	f004 fcb0 	bl	8005b14 <HAL_TIM_Encoder_Init>
 80011b4:	4603      	mov	r3, r0
 80011b6:	2b00      	cmp	r3, #0
 80011b8:	d001      	beq.n	80011be <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 80011ba:	f000 faeb 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80011be:	2300      	movs	r3, #0
 80011c0:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80011c2:	2300      	movs	r3, #0
 80011c4:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80011c6:	463b      	mov	r3, r7
 80011c8:	4619      	mov	r1, r3
 80011ca:	4806      	ldr	r0, [pc, #24]	@ (80011e4 <MX_TIM4_Init+0xa4>)
 80011cc:	f005 ff32 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 80011d0:	4603      	mov	r3, r0
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	d001      	beq.n	80011da <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 80011d6:	f000 fadd 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 80011da:	bf00      	nop
 80011dc:	3730      	adds	r7, #48	@ 0x30
 80011de:	46bd      	mov	sp, r7
 80011e0:	bd80      	pop	{r7, pc}
 80011e2:	bf00      	nop
 80011e4:	2000034c 	.word	0x2000034c
 80011e8:	40000800 	.word	0x40000800

080011ec <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 80011ec:	b580      	push	{r7, lr}
 80011ee:	b088      	sub	sp, #32
 80011f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80011f2:	f107 0314 	add.w	r3, r7, #20
 80011f6:	2200      	movs	r2, #0
 80011f8:	601a      	str	r2, [r3, #0]
 80011fa:	605a      	str	r2, [r3, #4]
 80011fc:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 80011fe:	1d3b      	adds	r3, r7, #4
 8001200:	2200      	movs	r2, #0
 8001202:	601a      	str	r2, [r3, #0]
 8001204:	605a      	str	r2, [r3, #4]
 8001206:	609a      	str	r2, [r3, #8]
 8001208:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 800120a:	4b26      	ldr	r3, [pc, #152]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 800120c:	4a26      	ldr	r2, [pc, #152]	@ (80012a8 <MX_TIM5_Init+0xbc>)
 800120e:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8001210:	4b24      	ldr	r3, [pc, #144]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001212:	2200      	movs	r2, #0
 8001214:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001216:	4b23      	ldr	r3, [pc, #140]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001218:	2200      	movs	r2, #0
 800121a:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 800121c:	4b21      	ldr	r3, [pc, #132]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 800121e:	f04f 32ff 	mov.w	r2, #4294967295
 8001222:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001224:	4b1f      	ldr	r3, [pc, #124]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001226:	2200      	movs	r2, #0
 8001228:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800122a:	4b1e      	ldr	r3, [pc, #120]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 800122c:	2200      	movs	r2, #0
 800122e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_IC_Init(&htim5) != HAL_OK)
 8001230:	481c      	ldr	r0, [pc, #112]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001232:	f004 facd 	bl	80057d0 <HAL_TIM_IC_Init>
 8001236:	4603      	mov	r3, r0
 8001238:	2b00      	cmp	r3, #0
 800123a:	d001      	beq.n	8001240 <MX_TIM5_Init+0x54>
  {
    Error_Handler();
 800123c:	f000 faaa 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001240:	2300      	movs	r3, #0
 8001242:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001244:	2300      	movs	r3, #0
 8001246:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8001248:	f107 0314 	add.w	r3, r7, #20
 800124c:	4619      	mov	r1, r3
 800124e:	4815      	ldr	r0, [pc, #84]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001250:	f005 fef0 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 8001254:	4603      	mov	r3, r0
 8001256:	2b00      	cmp	r3, #0
 8001258:	d001      	beq.n	800125e <MX_TIM5_Init+0x72>
  {
    Error_Handler();
 800125a:	f000 fa9b 	bl	8001794 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800125e:	2300      	movs	r3, #0
 8001260:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001262:	2301      	movs	r3, #1
 8001264:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8001266:	2300      	movs	r3, #0
 8001268:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 800126a:	2300      	movs	r3, #0
 800126c:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 800126e:	1d3b      	adds	r3, r7, #4
 8001270:	2208      	movs	r2, #8
 8001272:	4619      	mov	r1, r3
 8001274:	480b      	ldr	r0, [pc, #44]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 8001276:	f004 fea3 	bl	8005fc0 <HAL_TIM_IC_ConfigChannel>
 800127a:	4603      	mov	r3, r0
 800127c:	2b00      	cmp	r3, #0
 800127e:	d001      	beq.n	8001284 <MX_TIM5_Init+0x98>
  {
    Error_Handler();
 8001280:	f000 fa88 	bl	8001794 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim5, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 8001284:	1d3b      	adds	r3, r7, #4
 8001286:	220c      	movs	r2, #12
 8001288:	4619      	mov	r1, r3
 800128a:	4806      	ldr	r0, [pc, #24]	@ (80012a4 <MX_TIM5_Init+0xb8>)
 800128c:	f004 fe98 	bl	8005fc0 <HAL_TIM_IC_ConfigChannel>
 8001290:	4603      	mov	r3, r0
 8001292:	2b00      	cmp	r3, #0
 8001294:	d001      	beq.n	800129a <MX_TIM5_Init+0xae>
  {
    Error_Handler();
 8001296:	f000 fa7d 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 800129a:	bf00      	nop
 800129c:	3720      	adds	r7, #32
 800129e:	46bd      	mov	sp, r7
 80012a0:	bd80      	pop	{r7, pc}
 80012a2:	bf00      	nop
 80012a4:	20000398 	.word	0x20000398
 80012a8:	40000c00 	.word	0x40000c00

080012ac <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 80012ac:	b580      	push	{r7, lr}
 80012ae:	b096      	sub	sp, #88	@ 0x58
 80012b0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012b2:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 80012b6:	2200      	movs	r2, #0
 80012b8:	601a      	str	r2, [r3, #0]
 80012ba:	605a      	str	r2, [r3, #4]
 80012bc:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012be:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80012c2:	2200      	movs	r2, #0
 80012c4:	601a      	str	r2, [r3, #0]
 80012c6:	605a      	str	r2, [r3, #4]
 80012c8:	609a      	str	r2, [r3, #8]
 80012ca:	60da      	str	r2, [r3, #12]
 80012cc:	611a      	str	r2, [r3, #16]
 80012ce:	615a      	str	r2, [r3, #20]
 80012d0:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80012d2:	1d3b      	adds	r3, r7, #4
 80012d4:	222c      	movs	r2, #44	@ 0x2c
 80012d6:	2100      	movs	r1, #0
 80012d8:	4618      	mov	r0, r3
 80012da:	f006 fe02 	bl	8007ee2 <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 80012de:	4b4b      	ldr	r3, [pc, #300]	@ (800140c <MX_TIM8_Init+0x160>)
 80012e0:	4a4b      	ldr	r2, [pc, #300]	@ (8001410 <MX_TIM8_Init+0x164>)
 80012e2:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 80012e4:	4b49      	ldr	r3, [pc, #292]	@ (800140c <MX_TIM8_Init+0x160>)
 80012e6:	2200      	movs	r2, #0
 80012e8:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80012ea:	4b48      	ldr	r3, [pc, #288]	@ (800140c <MX_TIM8_Init+0x160>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 59999;
 80012f0:	4b46      	ldr	r3, [pc, #280]	@ (800140c <MX_TIM8_Init+0x160>)
 80012f2:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80012f6:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80012f8:	4b44      	ldr	r3, [pc, #272]	@ (800140c <MX_TIM8_Init+0x160>)
 80012fa:	2200      	movs	r2, #0
 80012fc:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80012fe:	4b43      	ldr	r3, [pc, #268]	@ (800140c <MX_TIM8_Init+0x160>)
 8001300:	2200      	movs	r2, #0
 8001302:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001304:	4b41      	ldr	r3, [pc, #260]	@ (800140c <MX_TIM8_Init+0x160>)
 8001306:	2200      	movs	r2, #0
 8001308:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 800130a:	4840      	ldr	r0, [pc, #256]	@ (800140c <MX_TIM8_Init+0x160>)
 800130c:	f004 f902 	bl	8005514 <HAL_TIM_PWM_Init>
 8001310:	4603      	mov	r3, r0
 8001312:	2b00      	cmp	r3, #0
 8001314:	d001      	beq.n	800131a <MX_TIM8_Init+0x6e>
  {
    Error_Handler();
 8001316:	f000 fa3d 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800131a:	2300      	movs	r3, #0
 800131c:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 800131e:	2300      	movs	r3, #0
 8001320:	653b      	str	r3, [r7, #80]	@ 0x50
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001322:	2300      	movs	r3, #0
 8001324:	657b      	str	r3, [r7, #84]	@ 0x54
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 8001326:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800132a:	4619      	mov	r1, r3
 800132c:	4837      	ldr	r0, [pc, #220]	@ (800140c <MX_TIM8_Init+0x160>)
 800132e:	f005 fe81 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 8001332:	4603      	mov	r3, r0
 8001334:	2b00      	cmp	r3, #0
 8001336:	d001      	beq.n	800133c <MX_TIM8_Init+0x90>
  {
    Error_Handler();
 8001338:	f000 fa2c 	bl	8001794 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800133c:	2360      	movs	r3, #96	@ 0x60
 800133e:	633b      	str	r3, [r7, #48]	@ 0x30
  sConfigOC.Pulse = 0;
 8001340:	2300      	movs	r3, #0
 8001342:	637b      	str	r3, [r7, #52]	@ 0x34
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001344:	2300      	movs	r3, #0
 8001346:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001348:	2300      	movs	r3, #0
 800134a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800134c:	2300      	movs	r3, #0
 800134e:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001350:	2300      	movs	r3, #0
 8001352:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001354:	2300      	movs	r3, #0
 8001356:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001358:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800135c:	2200      	movs	r2, #0
 800135e:	4619      	mov	r1, r3
 8001360:	482a      	ldr	r0, [pc, #168]	@ (800140c <MX_TIM8_Init+0x160>)
 8001362:	f004 fec9 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8001366:	4603      	mov	r3, r0
 8001368:	2b00      	cmp	r3, #0
 800136a:	d001      	beq.n	8001370 <MX_TIM8_Init+0xc4>
  {
    Error_Handler();
 800136c:	f000 fa12 	bl	8001794 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001370:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 8001374:	2204      	movs	r2, #4
 8001376:	4619      	mov	r1, r3
 8001378:	4824      	ldr	r0, [pc, #144]	@ (800140c <MX_TIM8_Init+0x160>)
 800137a:	f004 febd 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 800137e:	4603      	mov	r3, r0
 8001380:	2b00      	cmp	r3, #0
 8001382:	d001      	beq.n	8001388 <MX_TIM8_Init+0xdc>
  {
    Error_Handler();
 8001384:	f000 fa06 	bl	8001794 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 8001388:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800138c:	2208      	movs	r2, #8
 800138e:	4619      	mov	r1, r3
 8001390:	481e      	ldr	r0, [pc, #120]	@ (800140c <MX_TIM8_Init+0x160>)
 8001392:	f004 feb1 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 8001396:	4603      	mov	r3, r0
 8001398:	2b00      	cmp	r3, #0
 800139a:	d001      	beq.n	80013a0 <MX_TIM8_Init+0xf4>
  {
    Error_Handler();
 800139c:	f000 f9fa 	bl	8001794 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 80013a0:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 80013a4:	220c      	movs	r2, #12
 80013a6:	4619      	mov	r1, r3
 80013a8:	4818      	ldr	r0, [pc, #96]	@ (800140c <MX_TIM8_Init+0x160>)
 80013aa:	f004 fea5 	bl	80060f8 <HAL_TIM_PWM_ConfigChannel>
 80013ae:	4603      	mov	r3, r0
 80013b0:	2b00      	cmp	r3, #0
 80013b2:	d001      	beq.n	80013b8 <MX_TIM8_Init+0x10c>
  {
    Error_Handler();
 80013b4:	f000 f9ee 	bl	8001794 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 80013b8:	2300      	movs	r3, #0
 80013ba:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80013bc:	2300      	movs	r3, #0
 80013be:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80013c0:	2300      	movs	r3, #0
 80013c2:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80013c4:	2300      	movs	r3, #0
 80013c6:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80013c8:	2300      	movs	r3, #0
 80013ca:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80013cc:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80013d0:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 80013d2:	2300      	movs	r3, #0
 80013d4:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 80013d6:	2300      	movs	r3, #0
 80013d8:	623b      	str	r3, [r7, #32]
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 80013da:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80013de:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Filter = 0;
 80013e0:	2300      	movs	r3, #0
 80013e2:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80013e4:	2300      	movs	r3, #0
 80013e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 80013e8:	1d3b      	adds	r3, r7, #4
 80013ea:	4619      	mov	r1, r3
 80013ec:	4807      	ldr	r0, [pc, #28]	@ (800140c <MX_TIM8_Init+0x160>)
 80013ee:	f005 fea9 	bl	8007144 <HAL_TIMEx_ConfigBreakDeadTime>
 80013f2:	4603      	mov	r3, r0
 80013f4:	2b00      	cmp	r3, #0
 80013f6:	d001      	beq.n	80013fc <MX_TIM8_Init+0x150>
  {
    Error_Handler();
 80013f8:	f000 f9cc 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 80013fc:	4803      	ldr	r0, [pc, #12]	@ (800140c <MX_TIM8_Init+0x160>)
 80013fe:	f000 fd47 	bl	8001e90 <HAL_TIM_MspPostInit>

}
 8001402:	bf00      	nop
 8001404:	3758      	adds	r7, #88	@ 0x58
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}
 800140a:	bf00      	nop
 800140c:	200003e4 	.word	0x200003e4
 8001410:	40013400 	.word	0x40013400

08001414 <MX_TIM15_Init>:
  * @brief TIM15 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM15_Init(void)
{
 8001414:	b580      	push	{r7, lr}
 8001416:	b088      	sub	sp, #32
 8001418:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800141a:	f107 0314 	add.w	r3, r7, #20
 800141e:	2200      	movs	r2, #0
 8001420:	601a      	str	r2, [r3, #0]
 8001422:	605a      	str	r2, [r3, #4]
 8001424:	609a      	str	r2, [r3, #8]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8001426:	1d3b      	adds	r3, r7, #4
 8001428:	2200      	movs	r2, #0
 800142a:	601a      	str	r2, [r3, #0]
 800142c:	605a      	str	r2, [r3, #4]
 800142e:	609a      	str	r2, [r3, #8]
 8001430:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 8001432:	4b22      	ldr	r3, [pc, #136]	@ (80014bc <MX_TIM15_Init+0xa8>)
 8001434:	4a22      	ldr	r2, [pc, #136]	@ (80014c0 <MX_TIM15_Init+0xac>)
 8001436:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 79;
 8001438:	4b20      	ldr	r3, [pc, #128]	@ (80014bc <MX_TIM15_Init+0xa8>)
 800143a:	224f      	movs	r2, #79	@ 0x4f
 800143c:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 800143e:	4b1f      	ldr	r3, [pc, #124]	@ (80014bc <MX_TIM15_Init+0xa8>)
 8001440:	2200      	movs	r2, #0
 8001442:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 65535;
 8001444:	4b1d      	ldr	r3, [pc, #116]	@ (80014bc <MX_TIM15_Init+0xa8>)
 8001446:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800144a:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800144c:	4b1b      	ldr	r3, [pc, #108]	@ (80014bc <MX_TIM15_Init+0xa8>)
 800144e:	2200      	movs	r2, #0
 8001450:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 8001452:	4b1a      	ldr	r3, [pc, #104]	@ (80014bc <MX_TIM15_Init+0xa8>)
 8001454:	2200      	movs	r2, #0
 8001456:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8001458:	4b18      	ldr	r3, [pc, #96]	@ (80014bc <MX_TIM15_Init+0xa8>)
 800145a:	2280      	movs	r2, #128	@ 0x80
 800145c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_IC_Init(&htim15) != HAL_OK)
 800145e:	4817      	ldr	r0, [pc, #92]	@ (80014bc <MX_TIM15_Init+0xa8>)
 8001460:	f004 f9b6 	bl	80057d0 <HAL_TIM_IC_Init>
 8001464:	4603      	mov	r3, r0
 8001466:	2b00      	cmp	r3, #0
 8001468:	d001      	beq.n	800146e <MX_TIM15_Init+0x5a>
  {
    Error_Handler();
 800146a:	f000 f993 	bl	8001794 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800146e:	2300      	movs	r3, #0
 8001470:	617b      	str	r3, [r7, #20]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001472:	2300      	movs	r3, #0
 8001474:	61fb      	str	r3, [r7, #28]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 8001476:	f107 0314 	add.w	r3, r7, #20
 800147a:	4619      	mov	r1, r3
 800147c:	480f      	ldr	r0, [pc, #60]	@ (80014bc <MX_TIM15_Init+0xa8>)
 800147e:	f005 fdd9 	bl	8007034 <HAL_TIMEx_MasterConfigSynchronization>
 8001482:	4603      	mov	r3, r0
 8001484:	2b00      	cmp	r3, #0
 8001486:	d001      	beq.n	800148c <MX_TIM15_Init+0x78>
  {
    Error_Handler();
 8001488:	f000 f984 	bl	8001794 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_BOTHEDGE;
 800148c:	230a      	movs	r3, #10
 800148e:	607b      	str	r3, [r7, #4]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8001490:	2301      	movs	r3, #1
 8001492:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8001494:	2300      	movs	r3, #0
 8001496:	60fb      	str	r3, [r7, #12]
  sConfigIC.ICFilter = 0;
 8001498:	2300      	movs	r3, #0
 800149a:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_IC_ConfigChannel(&htim15, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800149c:	1d3b      	adds	r3, r7, #4
 800149e:	2200      	movs	r2, #0
 80014a0:	4619      	mov	r1, r3
 80014a2:	4806      	ldr	r0, [pc, #24]	@ (80014bc <MX_TIM15_Init+0xa8>)
 80014a4:	f004 fd8c 	bl	8005fc0 <HAL_TIM_IC_ConfigChannel>
 80014a8:	4603      	mov	r3, r0
 80014aa:	2b00      	cmp	r3, #0
 80014ac:	d001      	beq.n	80014b2 <MX_TIM15_Init+0x9e>
  {
    Error_Handler();
 80014ae:	f000 f971 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */

}
 80014b2:	bf00      	nop
 80014b4:	3720      	adds	r7, #32
 80014b6:	46bd      	mov	sp, r7
 80014b8:	bd80      	pop	{r7, pc}
 80014ba:	bf00      	nop
 80014bc:	20000430 	.word	0x20000430
 80014c0:	40014000 	.word	0x40014000

080014c4 <MX_TIM17_Init>:
  * @brief TIM17 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM17_Init(void)
{
 80014c4:	b580      	push	{r7, lr}
 80014c6:	af00      	add	r7, sp, #0
  /* USER CODE END TIM17_Init 0 */

  /* USER CODE BEGIN TIM17_Init 1 */

  /* USER CODE END TIM17_Init 1 */
  htim17.Instance = TIM17;
 80014c8:	4b0f      	ldr	r3, [pc, #60]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014ca:	4a10      	ldr	r2, [pc, #64]	@ (800150c <MX_TIM17_Init+0x48>)
 80014cc:	601a      	str	r2, [r3, #0]
  htim17.Init.Prescaler = 79;
 80014ce:	4b0e      	ldr	r3, [pc, #56]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014d0:	224f      	movs	r2, #79	@ 0x4f
 80014d2:	605a      	str	r2, [r3, #4]
  htim17.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014d4:	4b0c      	ldr	r3, [pc, #48]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014d6:	2200      	movs	r2, #0
 80014d8:	609a      	str	r2, [r3, #8]
  htim17.Init.Period = 65535;
 80014da:	4b0b      	ldr	r3, [pc, #44]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014dc:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80014e0:	60da      	str	r2, [r3, #12]
  htim17.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014e2:	4b09      	ldr	r3, [pc, #36]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014e4:	2200      	movs	r2, #0
 80014e6:	611a      	str	r2, [r3, #16]
  htim17.Init.RepetitionCounter = 0;
 80014e8:	4b07      	ldr	r3, [pc, #28]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014ea:	2200      	movs	r2, #0
 80014ec:	615a      	str	r2, [r3, #20]
  htim17.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014ee:	4b06      	ldr	r3, [pc, #24]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014f0:	2200      	movs	r2, #0
 80014f2:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim17) != HAL_OK)
 80014f4:	4804      	ldr	r0, [pc, #16]	@ (8001508 <MX_TIM17_Init+0x44>)
 80014f6:	f003 ffb6 	bl	8005466 <HAL_TIM_Base_Init>
 80014fa:	4603      	mov	r3, r0
 80014fc:	2b00      	cmp	r3, #0
 80014fe:	d001      	beq.n	8001504 <MX_TIM17_Init+0x40>
  {
    Error_Handler();
 8001500:	f000 f948 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN TIM17_Init 2 */

  /* USER CODE END TIM17_Init 2 */

}
 8001504:	bf00      	nop
 8001506:	bd80      	pop	{r7, pc}
 8001508:	2000047c 	.word	0x2000047c
 800150c:	40014800 	.word	0x40014800

08001510 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8001510:	b580      	push	{r7, lr}
 8001512:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8001514:	4b14      	ldr	r3, [pc, #80]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001516:	4a15      	ldr	r2, [pc, #84]	@ (800156c <MX_USART3_UART_Init+0x5c>)
 8001518:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 800151a:	4b13      	ldr	r3, [pc, #76]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 800151c:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001520:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8001522:	4b11      	ldr	r3, [pc, #68]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001524:	2200      	movs	r2, #0
 8001526:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8001528:	4b0f      	ldr	r3, [pc, #60]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 800152a:	2200      	movs	r2, #0
 800152c:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800152e:	4b0e      	ldr	r3, [pc, #56]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001530:	2200      	movs	r2, #0
 8001532:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8001534:	4b0c      	ldr	r3, [pc, #48]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001536:	220c      	movs	r2, #12
 8001538:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800153a:	4b0b      	ldr	r3, [pc, #44]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 800153c:	2200      	movs	r2, #0
 800153e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001540:	4b09      	ldr	r3, [pc, #36]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001542:	2200      	movs	r2, #0
 8001544:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001546:	4b08      	ldr	r3, [pc, #32]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001548:	2200      	movs	r2, #0
 800154a:	621a      	str	r2, [r3, #32]
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800154c:	4b06      	ldr	r3, [pc, #24]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 800154e:	2200      	movs	r2, #0
 8001550:	625a      	str	r2, [r3, #36]	@ 0x24
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8001552:	4805      	ldr	r0, [pc, #20]	@ (8001568 <MX_USART3_UART_Init+0x58>)
 8001554:	f005 fe92 	bl	800727c <HAL_UART_Init>
 8001558:	4603      	mov	r3, r0
 800155a:	2b00      	cmp	r3, #0
 800155c:	d001      	beq.n	8001562 <MX_USART3_UART_Init+0x52>
  {
    Error_Handler();
 800155e:	f000 f919 	bl	8001794 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8001562:	bf00      	nop
 8001564:	bd80      	pop	{r7, pc}
 8001566:	bf00      	nop
 8001568:	200004c8 	.word	0x200004c8
 800156c:	40004800 	.word	0x40004800

08001570 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001570:	b580      	push	{r7, lr}
 8001572:	b08a      	sub	sp, #40	@ 0x28
 8001574:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001576:	f107 0314 	add.w	r3, r7, #20
 800157a:	2200      	movs	r2, #0
 800157c:	601a      	str	r2, [r3, #0]
 800157e:	605a      	str	r2, [r3, #4]
 8001580:	609a      	str	r2, [r3, #8]
 8001582:	60da      	str	r2, [r3, #12]
 8001584:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001586:	4b39      	ldr	r3, [pc, #228]	@ (800166c <MX_GPIO_Init+0xfc>)
 8001588:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800158a:	4a38      	ldr	r2, [pc, #224]	@ (800166c <MX_GPIO_Init+0xfc>)
 800158c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001590:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001592:	4b36      	ldr	r3, [pc, #216]	@ (800166c <MX_GPIO_Init+0xfc>)
 8001594:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001596:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800159a:	613b      	str	r3, [r7, #16]
 800159c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800159e:	4b33      	ldr	r3, [pc, #204]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015a0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015a2:	4a32      	ldr	r2, [pc, #200]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015a4:	f043 0304 	orr.w	r3, r3, #4
 80015a8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80015aa:	4b30      	ldr	r3, [pc, #192]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015ac:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015ae:	f003 0304 	and.w	r3, r3, #4
 80015b2:	60fb      	str	r3, [r7, #12]
 80015b4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80015b6:	4b2d      	ldr	r3, [pc, #180]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015ba:	4a2c      	ldr	r2, [pc, #176]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015bc:	f043 0301 	orr.w	r3, r3, #1
 80015c0:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80015c2:	4b2a      	ldr	r3, [pc, #168]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015c6:	f003 0301 	and.w	r3, r3, #1
 80015ca:	60bb      	str	r3, [r7, #8]
 80015cc:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80015ce:	4b27      	ldr	r3, [pc, #156]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015d2:	4a26      	ldr	r2, [pc, #152]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015d4:	f043 0302 	orr.w	r3, r3, #2
 80015d8:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80015da:	4b24      	ldr	r3, [pc, #144]	@ (800166c <MX_GPIO_Init+0xfc>)
 80015dc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80015de:	f003 0302 	and.w	r3, r3, #2
 80015e2:	607b      	str	r3, [r7, #4]
 80015e4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, GPIO_PIN_RESET);
 80015e6:	2200      	movs	r2, #0
 80015e8:	2108      	movs	r1, #8
 80015ea:	4821      	ldr	r0, [pc, #132]	@ (8001670 <MX_GPIO_Init+0x100>)
 80015ec:	f002 fa5e 	bl	8003aac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_12, GPIO_PIN_RESET);
 80015f0:	2200      	movs	r2, #0
 80015f2:	f44f 5181 	mov.w	r1, #4128	@ 0x1020
 80015f6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 80015fa:	f002 fa57 	bl	8003aac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015fe:	2200      	movs	r2, #0
 8001600:	f243 0106 	movw	r1, #12294	@ 0x3006
 8001604:	481b      	ldr	r0, [pc, #108]	@ (8001674 <MX_GPIO_Init+0x104>)
 8001606:	f002 fa51 	bl	8003aac <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
 800160a:	2308      	movs	r3, #8
 800160c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800160e:	2301      	movs	r3, #1
 8001610:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	2300      	movs	r3, #0
 8001614:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001616:	2300      	movs	r3, #0
 8001618:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800161a:	f107 0314 	add.w	r3, r7, #20
 800161e:	4619      	mov	r1, r3
 8001620:	4813      	ldr	r0, [pc, #76]	@ (8001670 <MX_GPIO_Init+0x100>)
 8001622:	f002 f899 	bl	8003758 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA5 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_12;
 8001626:	f44f 5381 	mov.w	r3, #4128	@ 0x1020
 800162a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800162c:	2301      	movs	r3, #1
 800162e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001630:	2300      	movs	r3, #0
 8001632:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001634:	2300      	movs	r3, #0
 8001636:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001638:	f107 0314 	add.w	r3, r7, #20
 800163c:	4619      	mov	r1, r3
 800163e:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001642:	f002 f889 	bl	8003758 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB1 PB2 PB12 PB13 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_12|GPIO_PIN_13;
 8001646:	f243 0306 	movw	r3, #12294	@ 0x3006
 800164a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800164c:	2301      	movs	r3, #1
 800164e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001650:	2300      	movs	r3, #0
 8001652:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001654:	2300      	movs	r3, #0
 8001656:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001658:	f107 0314 	add.w	r3, r7, #20
 800165c:	4619      	mov	r1, r3
 800165e:	4805      	ldr	r0, [pc, #20]	@ (8001674 <MX_GPIO_Init+0x104>)
 8001660:	f002 f87a 	bl	8003758 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001664:	bf00      	nop
 8001666:	3728      	adds	r7, #40	@ 0x28
 8001668:	46bd      	mov	sp, r7
 800166a:	bd80      	pop	{r7, pc}
 800166c:	40021000 	.word	0x40021000
 8001670:	48000800 	.word	0x48000800
 8001674:	48000400 	.word	0x48000400

08001678 <HAL_TIM_IC_CaptureCallback>:
}



void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) //Function from https://controllerstech.com/input-capture-in-stm32/
{
 8001678:	b580      	push	{r7, lr}
 800167a:	b084      	sub	sp, #16
 800167c:	af00      	add	r7, sp, #0
 800167e:	6078      	str	r0, [r7, #4]
	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1)  // if the interrupt source is channel1
 8001680:	687b      	ldr	r3, [r7, #4]
 8001682:	7f1b      	ldrb	r3, [r3, #28]
 8001684:	2b01      	cmp	r3, #1
 8001686:	d156      	bne.n	8001736 <HAL_TIM_IC_CaptureCallback+0xbe>
	{
		if (Is_First_Captured==0) // if the first value is not captured
 8001688:	4b2d      	ldr	r3, [pc, #180]	@ (8001740 <HAL_TIM_IC_CaptureCallback+0xc8>)
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	2b00      	cmp	r3, #0
 800168e:	d10b      	bne.n	80016a8 <HAL_TIM_IC_CaptureCallback+0x30>
		{
			IC_Val1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1); // read the first value
 8001690:	2100      	movs	r1, #0
 8001692:	6878      	ldr	r0, [r7, #4]
 8001694:	f004 ff0e 	bl	80064b4 <HAL_TIM_ReadCapturedValue>
 8001698:	4603      	mov	r3, r0
 800169a:	461a      	mov	r2, r3
 800169c:	4b29      	ldr	r3, [pc, #164]	@ (8001744 <HAL_TIM_IC_CaptureCallback+0xcc>)
 800169e:	601a      	str	r2, [r3, #0]
			Is_First_Captured = 1;  // set the first captured as true
 80016a0:	4b27      	ldr	r3, [pc, #156]	@ (8001740 <HAL_TIM_IC_CaptureCallback+0xc8>)
 80016a2:	2201      	movs	r2, #1
 80016a4:	601a      	str	r2, [r3, #0]

			__HAL_TIM_SET_COUNTER(htim, 0);  // reset the counter
			Is_First_Captured = 0; // set it back to false
		}
	}
}
 80016a6:	e046      	b.n	8001736 <HAL_TIM_IC_CaptureCallback+0xbe>
			IC_Val2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1);  // read second value
 80016a8:	2100      	movs	r1, #0
 80016aa:	6878      	ldr	r0, [r7, #4]
 80016ac:	f004 ff02 	bl	80064b4 <HAL_TIM_ReadCapturedValue>
 80016b0:	4603      	mov	r3, r0
 80016b2:	461a      	mov	r2, r3
 80016b4:	4b24      	ldr	r3, [pc, #144]	@ (8001748 <HAL_TIM_IC_CaptureCallback+0xd0>)
 80016b6:	601a      	str	r2, [r3, #0]
			if (IC_Val2 > IC_Val1)
 80016b8:	4b23      	ldr	r3, [pc, #140]	@ (8001748 <HAL_TIM_IC_CaptureCallback+0xd0>)
 80016ba:	681a      	ldr	r2, [r3, #0]
 80016bc:	4b21      	ldr	r3, [pc, #132]	@ (8001744 <HAL_TIM_IC_CaptureCallback+0xcc>)
 80016be:	681b      	ldr	r3, [r3, #0]
 80016c0:	429a      	cmp	r2, r3
 80016c2:	dd07      	ble.n	80016d4 <HAL_TIM_IC_CaptureCallback+0x5c>
				Difference = IC_Val2-IC_Val1;
 80016c4:	4b20      	ldr	r3, [pc, #128]	@ (8001748 <HAL_TIM_IC_CaptureCallback+0xd0>)
 80016c6:	681a      	ldr	r2, [r3, #0]
 80016c8:	4b1e      	ldr	r3, [pc, #120]	@ (8001744 <HAL_TIM_IC_CaptureCallback+0xcc>)
 80016ca:	681b      	ldr	r3, [r3, #0]
 80016cc:	1ad3      	subs	r3, r2, r3
 80016ce:	4a1f      	ldr	r2, [pc, #124]	@ (800174c <HAL_TIM_IC_CaptureCallback+0xd4>)
 80016d0:	6013      	str	r3, [r2, #0]
 80016d2:	e00f      	b.n	80016f4 <HAL_TIM_IC_CaptureCallback+0x7c>
			else if (IC_Val1 > IC_Val2)
 80016d4:	4b1b      	ldr	r3, [pc, #108]	@ (8001744 <HAL_TIM_IC_CaptureCallback+0xcc>)
 80016d6:	681a      	ldr	r2, [r3, #0]
 80016d8:	4b1b      	ldr	r3, [pc, #108]	@ (8001748 <HAL_TIM_IC_CaptureCallback+0xd0>)
 80016da:	681b      	ldr	r3, [r3, #0]
 80016dc:	429a      	cmp	r2, r3
 80016de:	dd09      	ble.n	80016f4 <HAL_TIM_IC_CaptureCallback+0x7c>
				Difference = (0xffff - IC_Val1) + IC_Val2;
 80016e0:	4b18      	ldr	r3, [pc, #96]	@ (8001744 <HAL_TIM_IC_CaptureCallback+0xcc>)
 80016e2:	681b      	ldr	r3, [r3, #0]
 80016e4:	f5c3 437f 	rsb	r3, r3, #65280	@ 0xff00
 80016e8:	33ff      	adds	r3, #255	@ 0xff
 80016ea:	4a17      	ldr	r2, [pc, #92]	@ (8001748 <HAL_TIM_IC_CaptureCallback+0xd0>)
 80016ec:	6812      	ldr	r2, [r2, #0]
 80016ee:	4413      	add	r3, r2
 80016f0:	4a16      	ldr	r2, [pc, #88]	@ (800174c <HAL_TIM_IC_CaptureCallback+0xd4>)
 80016f2:	6013      	str	r3, [r2, #0]
			float refClock = TIMCLOCK/(PRESCALAR);
 80016f4:	4b16      	ldr	r3, [pc, #88]	@ (8001750 <HAL_TIM_IC_CaptureCallback+0xd8>)
 80016f6:	60fb      	str	r3, [r7, #12]
			float mFactor = 1000000/refClock;
 80016f8:	eddf 6a16 	vldr	s13, [pc, #88]	@ 8001754 <HAL_TIM_IC_CaptureCallback+0xdc>
 80016fc:	ed97 7a03 	vldr	s14, [r7, #12]
 8001700:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001704:	edc7 7a02 	vstr	s15, [r7, #8]
			usWidth = Difference*mFactor;
 8001708:	4b10      	ldr	r3, [pc, #64]	@ (800174c <HAL_TIM_IC_CaptureCallback+0xd4>)
 800170a:	681b      	ldr	r3, [r3, #0]
 800170c:	ee07 3a90 	vmov	s15, r3
 8001710:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001714:	edd7 7a02 	vldr	s15, [r7, #8]
 8001718:	ee67 7a27 	vmul.f32	s15, s14, s15
 800171c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8001720:	ee17 2a90 	vmov	r2, s15
 8001724:	4b0c      	ldr	r3, [pc, #48]	@ (8001758 <HAL_TIM_IC_CaptureCallback+0xe0>)
 8001726:	601a      	str	r2, [r3, #0]
			__HAL_TIM_SET_COUNTER(htim, 0);  // reset the counter
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	2200      	movs	r2, #0
 800172e:	625a      	str	r2, [r3, #36]	@ 0x24
			Is_First_Captured = 0; // set it back to false
 8001730:	4b03      	ldr	r3, [pc, #12]	@ (8001740 <HAL_TIM_IC_CaptureCallback+0xc8>)
 8001732:	2200      	movs	r2, #0
 8001734:	601a      	str	r2, [r3, #0]
}
 8001736:	bf00      	nop
 8001738:	3710      	adds	r7, #16
 800173a:	46bd      	mov	sp, r7
 800173c:	bd80      	pop	{r7, pc}
 800173e:	bf00      	nop
 8001740:	20000560 	.word	0x20000560
 8001744:	20000554 	.word	0x20000554
 8001748:	20000558 	.word	0x20000558
 800174c:	2000055c 	.word	0x2000055c
 8001750:	49742400 	.word	0x49742400
 8001754:	49742400 	.word	0x49742400
 8001758:	20000550 	.word	0x20000550

0800175c <_write>:

int _write(int file, char *ptr, int len)
{
 800175c:	b580      	push	{r7, lr}
 800175e:	b086      	sub	sp, #24
 8001760:	af00      	add	r7, sp, #0
 8001762:	60f8      	str	r0, [r7, #12]
 8001764:	60b9      	str	r1, [r7, #8]
 8001766:	607a      	str	r2, [r7, #4]
    for (int DataIdx = 0; DataIdx < len; DataIdx++)
 8001768:	2300      	movs	r3, #0
 800176a:	617b      	str	r3, [r7, #20]
 800176c:	e009      	b.n	8001782 <_write+0x26>
        ITM_SendChar(*ptr++);
 800176e:	68bb      	ldr	r3, [r7, #8]
 8001770:	1c5a      	adds	r2, r3, #1
 8001772:	60ba      	str	r2, [r7, #8]
 8001774:	781b      	ldrb	r3, [r3, #0]
 8001776:	4618      	mov	r0, r3
 8001778:	f7fe ff6c 	bl	8000654 <ITM_SendChar>
    for (int DataIdx = 0; DataIdx < len; DataIdx++)
 800177c:	697b      	ldr	r3, [r7, #20]
 800177e:	3301      	adds	r3, #1
 8001780:	617b      	str	r3, [r7, #20]
 8001782:	697a      	ldr	r2, [r7, #20]
 8001784:	687b      	ldr	r3, [r7, #4]
 8001786:	429a      	cmp	r2, r3
 8001788:	dbf1      	blt.n	800176e <_write+0x12>

    return len;
 800178a:	687b      	ldr	r3, [r7, #4]
}
 800178c:	4618      	mov	r0, r3
 800178e:	3718      	adds	r7, #24
 8001790:	46bd      	mov	sp, r7
 8001792:	bd80      	pop	{r7, pc}

08001794 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001794:	b480      	push	{r7}
 8001796:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* USER CODE END Error_Handler_Debug */
}
 8001798:	bf00      	nop
 800179a:	46bd      	mov	sp, r7
 800179c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a0:	4770      	bx	lr
	...

080017a4 <set_duty>:
 * @param[in] p_mot Pointer to the motor object structure.
 * @param[in] level Desired duty cycle percentage (-100 to 100).
 * @details This function constrains the level to the valid range and sets the
 * 			PWM duty cycle by updating the compare register pointer directly.
 */
void set_duty(motor_t* p_mot, int32_t level) {
 80017a4:	b480      	push	{r7}
 80017a6:	b085      	sub	sp, #20
 80017a8:	af00      	add	r7, sp, #0
 80017aa:	6078      	str	r0, [r7, #4]
 80017ac:	6039      	str	r1, [r7, #0]
	/// Constrain level to valid range
	if (level > 100) level = 100;
 80017ae:	683b      	ldr	r3, [r7, #0]
 80017b0:	2b64      	cmp	r3, #100	@ 0x64
 80017b2:	dd01      	ble.n	80017b8 <set_duty+0x14>
 80017b4:	2364      	movs	r3, #100	@ 0x64
 80017b6:	603b      	str	r3, [r7, #0]
    if (level < -100) level = -100;
 80017b8:	683b      	ldr	r3, [r7, #0]
 80017ba:	f113 0f64 	cmn.w	r3, #100	@ 0x64
 80017be:	da02      	bge.n	80017c6 <set_duty+0x22>
 80017c0:	f06f 0363 	mvn.w	r3, #99	@ 0x63
 80017c4:	603b      	str	r3, [r7, #0]
	/// Initialize pulse width variables
    uint32_t pulse1 = 0;
 80017c6:	2300      	movs	r3, #0
 80017c8:	60fb      	str	r3, [r7, #12]
    uint32_t pulse2 = 0;
 80017ca:	2300      	movs	r3, #0
 80017cc:	60bb      	str	r3, [r7, #8]
    if(level > 0 ){
 80017ce:	683b      	ldr	r3, [r7, #0]
 80017d0:	2b00      	cmp	r3, #0
 80017d2:	dd0a      	ble.n	80017ea <set_duty+0x46>
    	pulse2 = (uint32_t)((level * p_mot->Period) / 100);
 80017d4:	687b      	ldr	r3, [r7, #4]
 80017d6:	689b      	ldr	r3, [r3, #8]
 80017d8:	683a      	ldr	r2, [r7, #0]
 80017da:	fb02 f303 	mul.w	r3, r2, r3
 80017de:	4a11      	ldr	r2, [pc, #68]	@ (8001824 <set_duty+0x80>)
 80017e0:	fba2 2303 	umull	r2, r3, r2, r3
 80017e4:	095b      	lsrs	r3, r3, #5
 80017e6:	60bb      	str	r3, [r7, #8]
 80017e8:	e00e      	b.n	8001808 <set_duty+0x64>
    }
    else if(level < 0){
 80017ea:	683b      	ldr	r3, [r7, #0]
 80017ec:	2b00      	cmp	r3, #0
 80017ee:	da0b      	bge.n	8001808 <set_duty+0x64>
    	pulse1 = (uint32_t)((-level * p_mot->Period) / 100);
 80017f0:	683b      	ldr	r3, [r7, #0]
 80017f2:	425b      	negs	r3, r3
 80017f4:	461a      	mov	r2, r3
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	689b      	ldr	r3, [r3, #8]
 80017fa:	fb02 f303 	mul.w	r3, r2, r3
 80017fe:	4a09      	ldr	r2, [pc, #36]	@ (8001824 <set_duty+0x80>)
 8001800:	fba2 2303 	umull	r2, r3, r2, r3
 8001804:	095b      	lsrs	r3, r3, #5
 8001806:	60fb      	str	r3, [r7, #12]
    }
    /// Set the PWM duty cycle by updating the compare register
    *(p_mot->chA) = pulse1;
 8001808:	687b      	ldr	r3, [r7, #4]
 800180a:	681b      	ldr	r3, [r3, #0]
 800180c:	68fa      	ldr	r2, [r7, #12]
 800180e:	601a      	str	r2, [r3, #0]
    *(p_mot->chB) = pulse2;
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	685b      	ldr	r3, [r3, #4]
 8001814:	68ba      	ldr	r2, [r7, #8]
 8001816:	601a      	str	r2, [r3, #0]

}
 8001818:	bf00      	nop
 800181a:	3714      	adds	r7, #20
 800181c:	46bd      	mov	sp, r7
 800181e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001822:	4770      	bx	lr
 8001824:	51eb851f 	.word	0x51eb851f

08001828 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b082      	sub	sp, #8
 800182c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800182e:	4b12      	ldr	r3, [pc, #72]	@ (8001878 <HAL_MspInit+0x50>)
 8001830:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001832:	4a11      	ldr	r2, [pc, #68]	@ (8001878 <HAL_MspInit+0x50>)
 8001834:	f043 0301 	orr.w	r3, r3, #1
 8001838:	6613      	str	r3, [r2, #96]	@ 0x60
 800183a:	4b0f      	ldr	r3, [pc, #60]	@ (8001878 <HAL_MspInit+0x50>)
 800183c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800183e:	f003 0301 	and.w	r3, r3, #1
 8001842:	607b      	str	r3, [r7, #4]
 8001844:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001846:	4b0c      	ldr	r3, [pc, #48]	@ (8001878 <HAL_MspInit+0x50>)
 8001848:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800184a:	4a0b      	ldr	r2, [pc, #44]	@ (8001878 <HAL_MspInit+0x50>)
 800184c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001850:	6593      	str	r3, [r2, #88]	@ 0x58
 8001852:	4b09      	ldr	r3, [pc, #36]	@ (8001878 <HAL_MspInit+0x50>)
 8001854:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001856:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800185a:	603b      	str	r3, [r7, #0]
 800185c:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 800185e:	2200      	movs	r2, #0
 8001860:	2100      	movs	r1, #0
 8001862:	2005      	movs	r0, #5
 8001864:	f001 ff41 	bl	80036ea <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8001868:	2005      	movs	r0, #5
 800186a:	f001 ff5a 	bl	8003722 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800186e:	bf00      	nop
 8001870:	3708      	adds	r7, #8
 8001872:	46bd      	mov	sp, r7
 8001874:	bd80      	pop	{r7, pc}
 8001876:	bf00      	nop
 8001878:	40021000 	.word	0x40021000

0800187c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800187c:	b580      	push	{r7, lr}
 800187e:	b08e      	sub	sp, #56	@ 0x38
 8001880:	af00      	add	r7, sp, #0
 8001882:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001884:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001888:	2200      	movs	r2, #0
 800188a:	601a      	str	r2, [r3, #0]
 800188c:	605a      	str	r2, [r3, #4]
 800188e:	609a      	str	r2, [r3, #8]
 8001890:	60da      	str	r2, [r3, #12]
 8001892:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001894:	687b      	ldr	r3, [r7, #4]
 8001896:	681b      	ldr	r3, [r3, #0]
 8001898:	4a58      	ldr	r2, [pc, #352]	@ (80019fc <HAL_ADC_MspInit+0x180>)
 800189a:	4293      	cmp	r3, r2
 800189c:	d12d      	bne.n	80018fa <HAL_ADC_MspInit+0x7e>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    HAL_RCC_ADC_CLK_ENABLED++;
 800189e:	4b58      	ldr	r3, [pc, #352]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 80018a0:	681b      	ldr	r3, [r3, #0]
 80018a2:	3301      	adds	r3, #1
 80018a4:	4a56      	ldr	r2, [pc, #344]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 80018a6:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC_CLK_ENABLED==1){
 80018a8:	4b55      	ldr	r3, [pc, #340]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	2b01      	cmp	r3, #1
 80018ae:	d10b      	bne.n	80018c8 <HAL_ADC_MspInit+0x4c>
      __HAL_RCC_ADC_CLK_ENABLE();
 80018b0:	4b54      	ldr	r3, [pc, #336]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018b2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018b4:	4a53      	ldr	r2, [pc, #332]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018b6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80018ba:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018bc:	4b51      	ldr	r3, [pc, #324]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018be:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018c0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80018c4:	623b      	str	r3, [r7, #32]
 80018c6:	6a3b      	ldr	r3, [r7, #32]
    }

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018c8:	4b4e      	ldr	r3, [pc, #312]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018ca:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018cc:	4a4d      	ldr	r2, [pc, #308]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018ce:	f043 0304 	orr.w	r3, r3, #4
 80018d2:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80018d4:	4b4b      	ldr	r3, [pc, #300]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80018d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80018d8:	f003 0304 	and.w	r3, r3, #4
 80018dc:	61fb      	str	r3, [r7, #28]
 80018de:	69fb      	ldr	r3, [r7, #28]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN1
    PC1     ------> ADC1_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 80018e0:	2303      	movs	r3, #3
 80018e2:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80018e4:	2303      	movs	r3, #3
 80018e6:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018e8:	2300      	movs	r3, #0
 80018ea:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80018ec:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80018f0:	4619      	mov	r1, r3
 80018f2:	4845      	ldr	r0, [pc, #276]	@ (8001a08 <HAL_ADC_MspInit+0x18c>)
 80018f4:	f001 ff30 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 80018f8:	e07c      	b.n	80019f4 <HAL_ADC_MspInit+0x178>
  else if(hadc->Instance==ADC2)
 80018fa:	687b      	ldr	r3, [r7, #4]
 80018fc:	681b      	ldr	r3, [r3, #0]
 80018fe:	4a43      	ldr	r2, [pc, #268]	@ (8001a0c <HAL_ADC_MspInit+0x190>)
 8001900:	4293      	cmp	r3, r2
 8001902:	d145      	bne.n	8001990 <HAL_ADC_MspInit+0x114>
    HAL_RCC_ADC_CLK_ENABLED++;
 8001904:	4b3e      	ldr	r3, [pc, #248]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 8001906:	681b      	ldr	r3, [r3, #0]
 8001908:	3301      	adds	r3, #1
 800190a:	4a3d      	ldr	r2, [pc, #244]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 800190c:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC_CLK_ENABLED==1){
 800190e:	4b3c      	ldr	r3, [pc, #240]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 8001910:	681b      	ldr	r3, [r3, #0]
 8001912:	2b01      	cmp	r3, #1
 8001914:	d10b      	bne.n	800192e <HAL_ADC_MspInit+0xb2>
      __HAL_RCC_ADC_CLK_ENABLE();
 8001916:	4b3b      	ldr	r3, [pc, #236]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001918:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800191a:	4a3a      	ldr	r2, [pc, #232]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 800191c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001920:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001922:	4b38      	ldr	r3, [pc, #224]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001924:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001926:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800192a:	61bb      	str	r3, [r7, #24]
 800192c:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800192e:	4b35      	ldr	r3, [pc, #212]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001930:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001932:	4a34      	ldr	r2, [pc, #208]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001934:	f043 0304 	orr.w	r3, r3, #4
 8001938:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800193a:	4b32      	ldr	r3, [pc, #200]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 800193c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800193e:	f003 0304 	and.w	r3, r3, #4
 8001942:	617b      	str	r3, [r7, #20]
 8001944:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001946:	4b2f      	ldr	r3, [pc, #188]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001948:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800194a:	4a2e      	ldr	r2, [pc, #184]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 800194c:	f043 0302 	orr.w	r3, r3, #2
 8001950:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001952:	4b2c      	ldr	r3, [pc, #176]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 8001954:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001956:	f003 0302 	and.w	r3, r3, #2
 800195a:	613b      	str	r3, [r7, #16]
 800195c:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2;
 800195e:	2306      	movs	r3, #6
 8001960:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001962:	2303      	movs	r3, #3
 8001964:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001966:	2300      	movs	r3, #0
 8001968:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800196a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800196e:	4619      	mov	r1, r3
 8001970:	4825      	ldr	r0, [pc, #148]	@ (8001a08 <HAL_ADC_MspInit+0x18c>)
 8001972:	f001 fef1 	bl	8003758 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001976:	2301      	movs	r3, #1
 8001978:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG_ADC_CONTROL;
 800197a:	230b      	movs	r3, #11
 800197c:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800197e:	2300      	movs	r3, #0
 8001980:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001982:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001986:	4619      	mov	r1, r3
 8001988:	4821      	ldr	r0, [pc, #132]	@ (8001a10 <HAL_ADC_MspInit+0x194>)
 800198a:	f001 fee5 	bl	8003758 <HAL_GPIO_Init>
}
 800198e:	e031      	b.n	80019f4 <HAL_ADC_MspInit+0x178>
  else if(hadc->Instance==ADC3)
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	681b      	ldr	r3, [r3, #0]
 8001994:	4a1f      	ldr	r2, [pc, #124]	@ (8001a14 <HAL_ADC_MspInit+0x198>)
 8001996:	4293      	cmp	r3, r2
 8001998:	d12c      	bne.n	80019f4 <HAL_ADC_MspInit+0x178>
    HAL_RCC_ADC_CLK_ENABLED++;
 800199a:	4b19      	ldr	r3, [pc, #100]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 800199c:	681b      	ldr	r3, [r3, #0]
 800199e:	3301      	adds	r3, #1
 80019a0:	4a17      	ldr	r2, [pc, #92]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 80019a2:	6013      	str	r3, [r2, #0]
    if(HAL_RCC_ADC_CLK_ENABLED==1){
 80019a4:	4b16      	ldr	r3, [pc, #88]	@ (8001a00 <HAL_ADC_MspInit+0x184>)
 80019a6:	681b      	ldr	r3, [r3, #0]
 80019a8:	2b01      	cmp	r3, #1
 80019aa:	d10b      	bne.n	80019c4 <HAL_ADC_MspInit+0x148>
      __HAL_RCC_ADC_CLK_ENABLE();
 80019ac:	4b15      	ldr	r3, [pc, #84]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019b0:	4a14      	ldr	r2, [pc, #80]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019b2:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80019b6:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80019b8:	4b12      	ldr	r3, [pc, #72]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019ba:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019bc:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80019c0:	60fb      	str	r3, [r7, #12]
 80019c2:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80019c4:	4b0f      	ldr	r3, [pc, #60]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019c6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019c8:	4a0e      	ldr	r2, [pc, #56]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019ca:	f043 0304 	orr.w	r3, r3, #4
 80019ce:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80019d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001a04 <HAL_ADC_MspInit+0x188>)
 80019d2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80019d4:	f003 0304 	and.w	r3, r3, #4
 80019d8:	60bb      	str	r3, [r7, #8]
 80019da:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80019dc:	2304      	movs	r3, #4
 80019de:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80019e0:	2303      	movs	r3, #3
 80019e2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80019e4:	2300      	movs	r3, #0
 80019e6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80019e8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80019ec:	4619      	mov	r1, r3
 80019ee:	4806      	ldr	r0, [pc, #24]	@ (8001a08 <HAL_ADC_MspInit+0x18c>)
 80019f0:	f001 feb2 	bl	8003758 <HAL_GPIO_Init>
}
 80019f4:	bf00      	nop
 80019f6:	3738      	adds	r7, #56	@ 0x38
 80019f8:	46bd      	mov	sp, r7
 80019fa:	bd80      	pop	{r7, pc}
 80019fc:	50040000 	.word	0x50040000
 8001a00:	200005ac 	.word	0x200005ac
 8001a04:	40021000 	.word	0x40021000
 8001a08:	48000800 	.word	0x48000800
 8001a0c:	50040100 	.word	0x50040100
 8001a10:	48000400 	.word	0x48000400
 8001a14:	50040200 	.word	0x50040200

08001a18 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001a18:	b580      	push	{r7, lr}
 8001a1a:	b0aa      	sub	sp, #168	@ 0xa8
 8001a1c:	af00      	add	r7, sp, #0
 8001a1e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a20:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001a24:	2200      	movs	r2, #0
 8001a26:	601a      	str	r2, [r3, #0]
 8001a28:	605a      	str	r2, [r3, #4]
 8001a2a:	609a      	str	r2, [r3, #8]
 8001a2c:	60da      	str	r2, [r3, #12]
 8001a2e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001a30:	f107 0310 	add.w	r3, r7, #16
 8001a34:	2284      	movs	r2, #132	@ 0x84
 8001a36:	2100      	movs	r1, #0
 8001a38:	4618      	mov	r0, r3
 8001a3a:	f006 fa52 	bl	8007ee2 <memset>
  if(hi2c->Instance==I2C2)
 8001a3e:	687b      	ldr	r3, [r7, #4]
 8001a40:	681b      	ldr	r3, [r3, #0]
 8001a42:	4a21      	ldr	r2, [pc, #132]	@ (8001ac8 <HAL_I2C_MspInit+0xb0>)
 8001a44:	4293      	cmp	r3, r2
 8001a46:	d13b      	bne.n	8001ac0 <HAL_I2C_MspInit+0xa8>

  /* USER CODE END I2C2_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C2;
 8001a48:	2380      	movs	r3, #128	@ 0x80
 8001a4a:	613b      	str	r3, [r7, #16]
    PeriphClkInit.I2c2ClockSelection = RCC_I2C2CLKSOURCE_PCLK1;
 8001a4c:	2300      	movs	r3, #0
 8001a4e:	667b      	str	r3, [r7, #100]	@ 0x64
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001a50:	f107 0310 	add.w	r3, r7, #16
 8001a54:	4618      	mov	r0, r3
 8001a56:	f002 ffd7 	bl	8004a08 <HAL_RCCEx_PeriphCLKConfig>
 8001a5a:	4603      	mov	r3, r0
 8001a5c:	2b00      	cmp	r3, #0
 8001a5e:	d001      	beq.n	8001a64 <HAL_I2C_MspInit+0x4c>
    {
      Error_Handler();
 8001a60:	f7ff fe98 	bl	8001794 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a64:	4b19      	ldr	r3, [pc, #100]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001a66:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a68:	4a18      	ldr	r2, [pc, #96]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001a6a:	f043 0302 	orr.w	r3, r3, #2
 8001a6e:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001a70:	4b16      	ldr	r3, [pc, #88]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001a72:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001a74:	f003 0302 	and.w	r3, r3, #2
 8001a78:	60fb      	str	r3, [r7, #12]
 8001a7a:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PB11     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8001a7c:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001a80:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a84:	2312      	movs	r3, #18
 8001a86:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a90:	2303      	movs	r3, #3
 8001a92:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a96:	2304      	movs	r3, #4
 8001a98:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a9c:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001aa0:	4619      	mov	r1, r3
 8001aa2:	480b      	ldr	r0, [pc, #44]	@ (8001ad0 <HAL_I2C_MspInit+0xb8>)
 8001aa4:	f001 fe58 	bl	8003758 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001aa8:	4b08      	ldr	r3, [pc, #32]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001aaa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001aac:	4a07      	ldr	r2, [pc, #28]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001aae:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001ab2:	6593      	str	r3, [r2, #88]	@ 0x58
 8001ab4:	4b05      	ldr	r3, [pc, #20]	@ (8001acc <HAL_I2C_MspInit+0xb4>)
 8001ab6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001ab8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001abc:	60bb      	str	r3, [r7, #8]
 8001abe:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C2_MspInit 1 */

  /* USER CODE END I2C2_MspInit 1 */
  }

}
 8001ac0:	bf00      	nop
 8001ac2:	37a8      	adds	r7, #168	@ 0xa8
 8001ac4:	46bd      	mov	sp, r7
 8001ac6:	bd80      	pop	{r7, pc}
 8001ac8:	40005800 	.word	0x40005800
 8001acc:	40021000 	.word	0x40021000
 8001ad0:	48000400 	.word	0x48000400

08001ad4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ad4:	b580      	push	{r7, lr}
 8001ad6:	b08a      	sub	sp, #40	@ 0x28
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001adc:	f107 0314 	add.w	r3, r7, #20
 8001ae0:	2200      	movs	r2, #0
 8001ae2:	601a      	str	r2, [r3, #0]
 8001ae4:	605a      	str	r2, [r3, #4]
 8001ae6:	609a      	str	r2, [r3, #8]
 8001ae8:	60da      	str	r2, [r3, #12]
 8001aea:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI3)
 8001aec:	687b      	ldr	r3, [r7, #4]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	4a26      	ldr	r2, [pc, #152]	@ (8001b8c <HAL_SPI_MspInit+0xb8>)
 8001af2:	4293      	cmp	r3, r2
 8001af4:	d145      	bne.n	8001b82 <HAL_SPI_MspInit+0xae>
  {
  /* USER CODE BEGIN SPI3_MspInit 0 */

  /* USER CODE END SPI3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI3_CLK_ENABLE();
 8001af6:	4b26      	ldr	r3, [pc, #152]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001af8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001afa:	4a25      	ldr	r2, [pc, #148]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001afc:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8001b00:	6593      	str	r3, [r2, #88]	@ 0x58
 8001b02:	4b23      	ldr	r3, [pc, #140]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b04:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001b06:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8001b0a:	613b      	str	r3, [r7, #16]
 8001b0c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b0e:	4b20      	ldr	r3, [pc, #128]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b12:	4a1f      	ldr	r2, [pc, #124]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b14:	f043 0301 	orr.w	r3, r3, #1
 8001b18:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b1a:	4b1d      	ldr	r3, [pc, #116]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b1c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b1e:	f003 0301 	and.w	r3, r3, #1
 8001b22:	60fb      	str	r3, [r7, #12]
 8001b24:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b26:	4b1a      	ldr	r3, [pc, #104]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b28:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b2a:	4a19      	ldr	r2, [pc, #100]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b2c:	f043 0304 	orr.w	r3, r3, #4
 8001b30:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001b32:	4b17      	ldr	r3, [pc, #92]	@ (8001b90 <HAL_SPI_MspInit+0xbc>)
 8001b34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001b36:	f003 0304 	and.w	r3, r3, #4
 8001b3a:	60bb      	str	r3, [r7, #8]
 8001b3c:	68bb      	ldr	r3, [r7, #8]
    PA4     ------> SPI3_NSS
    PC10     ------> SPI3_SCK
    PC11     ------> SPI3_MISO
    PC12     ------> SPI3_MOSI
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4;
 8001b3e:	2310      	movs	r3, #16
 8001b40:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b42:	2302      	movs	r3, #2
 8001b44:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b46:	2300      	movs	r3, #0
 8001b48:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b4a:	2303      	movs	r3, #3
 8001b4c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001b4e:	2306      	movs	r3, #6
 8001b50:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b52:	f107 0314 	add.w	r3, r7, #20
 8001b56:	4619      	mov	r1, r3
 8001b58:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001b5c:	f001 fdfc 	bl	8003758 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12;
 8001b60:	f44f 53e0 	mov.w	r3, #7168	@ 0x1c00
 8001b64:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b66:	2302      	movs	r3, #2
 8001b68:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b6a:	2300      	movs	r3, #0
 8001b6c:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b6e:	2303      	movs	r3, #3
 8001b70:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF6_SPI3;
 8001b72:	2306      	movs	r3, #6
 8001b74:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b76:	f107 0314 	add.w	r3, r7, #20
 8001b7a:	4619      	mov	r1, r3
 8001b7c:	4805      	ldr	r0, [pc, #20]	@ (8001b94 <HAL_SPI_MspInit+0xc0>)
 8001b7e:	f001 fdeb 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI3_MspInit 1 */

  /* USER CODE END SPI3_MspInit 1 */
  }

}
 8001b82:	bf00      	nop
 8001b84:	3728      	adds	r7, #40	@ 0x28
 8001b86:	46bd      	mov	sp, r7
 8001b88:	bd80      	pop	{r7, pc}
 8001b8a:	bf00      	nop
 8001b8c:	40003c00 	.word	0x40003c00
 8001b90:	40021000 	.word	0x40021000
 8001b94:	48000800 	.word	0x48000800

08001b98 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001b98:	b580      	push	{r7, lr}
 8001b9a:	b084      	sub	sp, #16
 8001b9c:	af00      	add	r7, sp, #0
 8001b9e:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM1)
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	4a16      	ldr	r2, [pc, #88]	@ (8001c00 <HAL_TIM_Base_MspInit+0x68>)
 8001ba6:	4293      	cmp	r3, r2
 8001ba8:	d114      	bne.n	8001bd4 <HAL_TIM_Base_MspInit+0x3c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001baa:	4b16      	ldr	r3, [pc, #88]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001bac:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001bae:	4a15      	ldr	r2, [pc, #84]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001bb0:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8001bb4:	6613      	str	r3, [r2, #96]	@ 0x60
 8001bb6:	4b13      	ldr	r3, [pc, #76]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001bb8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001bba:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8001bbe:	60fb      	str	r3, [r7, #12]
 8001bc0:	68fb      	ldr	r3, [r7, #12]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	2100      	movs	r1, #0
 8001bc6:	2018      	movs	r0, #24
 8001bc8:	f001 fd8f 	bl	80036ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 8001bcc:	2018      	movs	r0, #24
 8001bce:	f001 fda8 	bl	8003722 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM17_MspInit 1 */

  /* USER CODE END TIM17_MspInit 1 */
  }

}
 8001bd2:	e010      	b.n	8001bf6 <HAL_TIM_Base_MspInit+0x5e>
  else if(htim_base->Instance==TIM17)
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	4a0b      	ldr	r2, [pc, #44]	@ (8001c08 <HAL_TIM_Base_MspInit+0x70>)
 8001bda:	4293      	cmp	r3, r2
 8001bdc:	d10b      	bne.n	8001bf6 <HAL_TIM_Base_MspInit+0x5e>
    __HAL_RCC_TIM17_CLK_ENABLE();
 8001bde:	4b09      	ldr	r3, [pc, #36]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001be0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001be2:	4a08      	ldr	r2, [pc, #32]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001be4:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001be8:	6613      	str	r3, [r2, #96]	@ 0x60
 8001bea:	4b06      	ldr	r3, [pc, #24]	@ (8001c04 <HAL_TIM_Base_MspInit+0x6c>)
 8001bec:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001bee:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001bf2:	60bb      	str	r3, [r7, #8]
 8001bf4:	68bb      	ldr	r3, [r7, #8]
}
 8001bf6:	bf00      	nop
 8001bf8:	3710      	adds	r7, #16
 8001bfa:	46bd      	mov	sp, r7
 8001bfc:	bd80      	pop	{r7, pc}
 8001bfe:	bf00      	nop
 8001c00:	40012c00 	.word	0x40012c00
 8001c04:	40021000 	.word	0x40021000
 8001c08:	40014800 	.word	0x40014800

08001c0c <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8001c0c:	b580      	push	{r7, lr}
 8001c0e:	b08e      	sub	sp, #56	@ 0x38
 8001c10:	af00      	add	r7, sp, #0
 8001c12:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c14:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001c18:	2200      	movs	r2, #0
 8001c1a:	601a      	str	r2, [r3, #0]
 8001c1c:	605a      	str	r2, [r3, #4]
 8001c1e:	609a      	str	r2, [r3, #8]
 8001c20:	60da      	str	r2, [r3, #12]
 8001c22:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 8001c24:	687b      	ldr	r3, [r7, #4]
 8001c26:	681b      	ldr	r3, [r3, #0]
 8001c28:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c2c:	d129      	bne.n	8001c82 <HAL_TIM_Encoder_MspInit+0x76>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c2e:	4b45      	ldr	r3, [pc, #276]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c30:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c32:	4a44      	ldr	r2, [pc, #272]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c34:	f043 0301 	orr.w	r3, r3, #1
 8001c38:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c3a:	4b42      	ldr	r3, [pc, #264]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c3c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c3e:	f003 0301 	and.w	r3, r3, #1
 8001c42:	623b      	str	r3, [r7, #32]
 8001c44:	6a3b      	ldr	r3, [r7, #32]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c46:	4b3f      	ldr	r3, [pc, #252]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c48:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001c4a:	4a3e      	ldr	r2, [pc, #248]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c4c:	f043 0301 	orr.w	r3, r3, #1
 8001c50:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001c52:	4b3c      	ldr	r3, [pc, #240]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c54:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001c56:	f003 0301 	and.w	r3, r3, #1
 8001c5a:	61fb      	str	r3, [r7, #28]
 8001c5c:	69fb      	ldr	r3, [r7, #28]
    /**TIM2 GPIO Configuration
    PA0     ------> TIM2_CH1
    PA1     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001c5e:	2303      	movs	r3, #3
 8001c60:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c62:	2302      	movs	r3, #2
 8001c64:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c66:	2300      	movs	r3, #0
 8001c68:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c6a:	2300      	movs	r3, #0
 8001c6c:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001c6e:	2301      	movs	r3, #1
 8001c70:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c72:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001c76:	4619      	mov	r1, r3
 8001c78:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001c7c:	f001 fd6c 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001c80:	e05b      	b.n	8001d3a <HAL_TIM_Encoder_MspInit+0x12e>
  else if(htim_encoder->Instance==TIM3)
 8001c82:	687b      	ldr	r3, [r7, #4]
 8001c84:	681b      	ldr	r3, [r3, #0]
 8001c86:	4a30      	ldr	r2, [pc, #192]	@ (8001d48 <HAL_TIM_Encoder_MspInit+0x13c>)
 8001c88:	4293      	cmp	r3, r2
 8001c8a:	d129      	bne.n	8001ce0 <HAL_TIM_Encoder_MspInit+0xd4>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c8c:	4b2d      	ldr	r3, [pc, #180]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c8e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c90:	4a2c      	ldr	r2, [pc, #176]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c92:	f043 0302 	orr.w	r3, r3, #2
 8001c96:	6593      	str	r3, [r2, #88]	@ 0x58
 8001c98:	4b2a      	ldr	r3, [pc, #168]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001c9a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001c9c:	f003 0302 	and.w	r3, r3, #2
 8001ca0:	61bb      	str	r3, [r7, #24]
 8001ca2:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ca4:	4b27      	ldr	r3, [pc, #156]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001ca6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ca8:	4a26      	ldr	r2, [pc, #152]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001caa:	f043 0301 	orr.w	r3, r3, #1
 8001cae:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001cb0:	4b24      	ldr	r3, [pc, #144]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001cb2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001cb4:	f003 0301 	and.w	r3, r3, #1
 8001cb8:	617b      	str	r3, [r7, #20]
 8001cba:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001cbc:	23c0      	movs	r3, #192	@ 0xc0
 8001cbe:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cc0:	2302      	movs	r3, #2
 8001cc2:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cc4:	2300      	movs	r3, #0
 8001cc6:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001cc8:	2300      	movs	r3, #0
 8001cca:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8001ccc:	2302      	movs	r3, #2
 8001cce:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd0:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001cd4:	4619      	mov	r1, r3
 8001cd6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001cda:	f001 fd3d 	bl	8003758 <HAL_GPIO_Init>
}
 8001cde:	e02c      	b.n	8001d3a <HAL_TIM_Encoder_MspInit+0x12e>
  else if(htim_encoder->Instance==TIM4)
 8001ce0:	687b      	ldr	r3, [r7, #4]
 8001ce2:	681b      	ldr	r3, [r3, #0]
 8001ce4:	4a19      	ldr	r2, [pc, #100]	@ (8001d4c <HAL_TIM_Encoder_MspInit+0x140>)
 8001ce6:	4293      	cmp	r3, r2
 8001ce8:	d127      	bne.n	8001d3a <HAL_TIM_Encoder_MspInit+0x12e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001cea:	4b16      	ldr	r3, [pc, #88]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001cec:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cee:	4a15      	ldr	r2, [pc, #84]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001cf0:	f043 0304 	orr.w	r3, r3, #4
 8001cf4:	6593      	str	r3, [r2, #88]	@ 0x58
 8001cf6:	4b13      	ldr	r3, [pc, #76]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001cf8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001cfa:	f003 0304 	and.w	r3, r3, #4
 8001cfe:	613b      	str	r3, [r7, #16]
 8001d00:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d02:	4b10      	ldr	r3, [pc, #64]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001d04:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d06:	4a0f      	ldr	r2, [pc, #60]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001d08:	f043 0302 	orr.w	r3, r3, #2
 8001d0c:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001d0e:	4b0d      	ldr	r3, [pc, #52]	@ (8001d44 <HAL_TIM_Encoder_MspInit+0x138>)
 8001d10:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d12:	f003 0302 	and.w	r3, r3, #2
 8001d16:	60fb      	str	r3, [r7, #12]
 8001d18:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d1a:	23c0      	movs	r3, #192	@ 0xc0
 8001d1c:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d1e:	2302      	movs	r3, #2
 8001d20:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d22:	2300      	movs	r3, #0
 8001d24:	62fb      	str	r3, [r7, #44]	@ 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d26:	2300      	movs	r3, #0
 8001d28:	633b      	str	r3, [r7, #48]	@ 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001d2a:	2302      	movs	r3, #2
 8001d2c:	637b      	str	r3, [r7, #52]	@ 0x34
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d2e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001d32:	4619      	mov	r1, r3
 8001d34:	4806      	ldr	r0, [pc, #24]	@ (8001d50 <HAL_TIM_Encoder_MspInit+0x144>)
 8001d36:	f001 fd0f 	bl	8003758 <HAL_GPIO_Init>
}
 8001d3a:	bf00      	nop
 8001d3c:	3738      	adds	r7, #56	@ 0x38
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	bd80      	pop	{r7, pc}
 8001d42:	bf00      	nop
 8001d44:	40021000 	.word	0x40021000
 8001d48:	40000400 	.word	0x40000400
 8001d4c:	40000800 	.word	0x40000800
 8001d50:	48000400 	.word	0x48000400

08001d54 <HAL_TIM_IC_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_ic: TIM_IC handle pointer
* @retval None
*/
void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* htim_ic)
{
 8001d54:	b580      	push	{r7, lr}
 8001d56:	b08c      	sub	sp, #48	@ 0x30
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d5c:	f107 031c 	add.w	r3, r7, #28
 8001d60:	2200      	movs	r2, #0
 8001d62:	601a      	str	r2, [r3, #0]
 8001d64:	605a      	str	r2, [r3, #4]
 8001d66:	609a      	str	r2, [r3, #8]
 8001d68:	60da      	str	r2, [r3, #12]
 8001d6a:	611a      	str	r2, [r3, #16]
  if(htim_ic->Instance==TIM5)
 8001d6c:	687b      	ldr	r3, [r7, #4]
 8001d6e:	681b      	ldr	r3, [r3, #0]
 8001d70:	4a33      	ldr	r2, [pc, #204]	@ (8001e40 <HAL_TIM_IC_MspInit+0xec>)
 8001d72:	4293      	cmp	r3, r2
 8001d74:	d129      	bne.n	8001dca <HAL_TIM_IC_MspInit+0x76>
  {
  /* USER CODE BEGIN TIM5_MspInit 0 */

  /* USER CODE END TIM5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM5_CLK_ENABLE();
 8001d76:	4b33      	ldr	r3, [pc, #204]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d78:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d7a:	4a32      	ldr	r2, [pc, #200]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d7c:	f043 0308 	orr.w	r3, r3, #8
 8001d80:	6593      	str	r3, [r2, #88]	@ 0x58
 8001d82:	4b30      	ldr	r3, [pc, #192]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d84:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001d86:	f003 0308 	and.w	r3, r3, #8
 8001d8a:	61bb      	str	r3, [r7, #24]
 8001d8c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d8e:	4b2d      	ldr	r3, [pc, #180]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d90:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d92:	4a2c      	ldr	r2, [pc, #176]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d94:	f043 0301 	orr.w	r3, r3, #1
 8001d98:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001d9a:	4b2a      	ldr	r3, [pc, #168]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001d9c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001d9e:	f003 0301 	and.w	r3, r3, #1
 8001da2:	617b      	str	r3, [r7, #20]
 8001da4:	697b      	ldr	r3, [r7, #20]
    /**TIM5 GPIO Configuration
    PA2     ------> TIM5_CH3
    PA3     ------> TIM5_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 8001da6:	230c      	movs	r3, #12
 8001da8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001daa:	2302      	movs	r3, #2
 8001dac:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001dae:	2300      	movs	r3, #0
 8001db0:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001db2:	2300      	movs	r3, #0
 8001db4:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8001db6:	2302      	movs	r3, #2
 8001db8:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001dba:	f107 031c 	add.w	r3, r7, #28
 8001dbe:	4619      	mov	r1, r3
 8001dc0:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001dc4:	f001 fcc8 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }

}
 8001dc8:	e035      	b.n	8001e36 <HAL_TIM_IC_MspInit+0xe2>
  else if(htim_ic->Instance==TIM15)
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	4a1e      	ldr	r2, [pc, #120]	@ (8001e48 <HAL_TIM_IC_MspInit+0xf4>)
 8001dd0:	4293      	cmp	r3, r2
 8001dd2:	d130      	bne.n	8001e36 <HAL_TIM_IC_MspInit+0xe2>
    __HAL_RCC_TIM15_CLK_ENABLE();
 8001dd4:	4b1b      	ldr	r3, [pc, #108]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001dd6:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001dd8:	4a1a      	ldr	r2, [pc, #104]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001dda:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8001dde:	6613      	str	r3, [r2, #96]	@ 0x60
 8001de0:	4b18      	ldr	r3, [pc, #96]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001de2:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001de4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8001de8:	613b      	str	r3, [r7, #16]
 8001dea:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001dec:	4b15      	ldr	r3, [pc, #84]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001dee:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001df0:	4a14      	ldr	r2, [pc, #80]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001df2:	f043 0302 	orr.w	r3, r3, #2
 8001df6:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001df8:	4b12      	ldr	r3, [pc, #72]	@ (8001e44 <HAL_TIM_IC_MspInit+0xf0>)
 8001dfa:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001dfc:	f003 0302 	and.w	r3, r3, #2
 8001e00:	60fb      	str	r3, [r7, #12]
 8001e02:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001e04:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 8001e08:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e0a:	2302      	movs	r3, #2
 8001e0c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e0e:	2300      	movs	r3, #0
 8001e10:	627b      	str	r3, [r7, #36]	@ 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e12:	2300      	movs	r3, #0
 8001e14:	62bb      	str	r3, [r7, #40]	@ 0x28
    GPIO_InitStruct.Alternate = GPIO_AF14_TIM15;
 8001e16:	230e      	movs	r3, #14
 8001e18:	62fb      	str	r3, [r7, #44]	@ 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e1a:	f107 031c 	add.w	r3, r7, #28
 8001e1e:	4619      	mov	r1, r3
 8001e20:	480a      	ldr	r0, [pc, #40]	@ (8001e4c <HAL_TIM_IC_MspInit+0xf8>)
 8001e22:	f001 fc99 	bl	8003758 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM1_BRK_TIM15_IRQn, 0, 0);
 8001e26:	2200      	movs	r2, #0
 8001e28:	2100      	movs	r1, #0
 8001e2a:	2018      	movs	r0, #24
 8001e2c:	f001 fc5d 	bl	80036ea <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_BRK_TIM15_IRQn);
 8001e30:	2018      	movs	r0, #24
 8001e32:	f001 fc76 	bl	8003722 <HAL_NVIC_EnableIRQ>
}
 8001e36:	bf00      	nop
 8001e38:	3730      	adds	r7, #48	@ 0x30
 8001e3a:	46bd      	mov	sp, r7
 8001e3c:	bd80      	pop	{r7, pc}
 8001e3e:	bf00      	nop
 8001e40:	40000c00 	.word	0x40000c00
 8001e44:	40021000 	.word	0x40021000
 8001e48:	40014000 	.word	0x40014000
 8001e4c:	48000400 	.word	0x48000400

08001e50 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001e50:	b480      	push	{r7}
 8001e52:	b085      	sub	sp, #20
 8001e54:	af00      	add	r7, sp, #0
 8001e56:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM8)
 8001e58:	687b      	ldr	r3, [r7, #4]
 8001e5a:	681b      	ldr	r3, [r3, #0]
 8001e5c:	4a0a      	ldr	r2, [pc, #40]	@ (8001e88 <HAL_TIM_PWM_MspInit+0x38>)
 8001e5e:	4293      	cmp	r3, r2
 8001e60:	d10b      	bne.n	8001e7a <HAL_TIM_PWM_MspInit+0x2a>
  {
  /* USER CODE BEGIN TIM8_MspInit 0 */

  /* USER CODE END TIM8_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM8_CLK_ENABLE();
 8001e62:	4b0a      	ldr	r3, [pc, #40]	@ (8001e8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001e64:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e66:	4a09      	ldr	r2, [pc, #36]	@ (8001e8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001e68:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001e6c:	6613      	str	r3, [r2, #96]	@ 0x60
 8001e6e:	4b07      	ldr	r3, [pc, #28]	@ (8001e8c <HAL_TIM_PWM_MspInit+0x3c>)
 8001e70:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8001e72:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001e76:	60fb      	str	r3, [r7, #12]
 8001e78:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8001e7a:	bf00      	nop
 8001e7c:	3714      	adds	r7, #20
 8001e7e:	46bd      	mov	sp, r7
 8001e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e84:	4770      	bx	lr
 8001e86:	bf00      	nop
 8001e88:	40013400 	.word	0x40013400
 8001e8c:	40021000 	.word	0x40021000

08001e90 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b08a      	sub	sp, #40	@ 0x28
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e98:	f107 0314 	add.w	r3, r7, #20
 8001e9c:	2200      	movs	r2, #0
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	605a      	str	r2, [r3, #4]
 8001ea2:	609a      	str	r2, [r3, #8]
 8001ea4:	60da      	str	r2, [r3, #12]
 8001ea6:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	681b      	ldr	r3, [r3, #0]
 8001eac:	4a23      	ldr	r2, [pc, #140]	@ (8001f3c <HAL_TIM_MspPostInit+0xac>)
 8001eae:	4293      	cmp	r3, r2
 8001eb0:	d11e      	bne.n	8001ef0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001eb2:	4b23      	ldr	r3, [pc, #140]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001eb4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001eb6:	4a22      	ldr	r2, [pc, #136]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001eb8:	f043 0301 	orr.w	r3, r3, #1
 8001ebc:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001ebe:	4b20      	ldr	r3, [pc, #128]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001ec0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001ec2:	f003 0301 	and.w	r3, r3, #1
 8001ec6:	613b      	str	r3, [r7, #16]
 8001ec8:	693b      	ldr	r3, [r7, #16]
    PA8     ------> TIM1_CH1
    PA9     ------> TIM1_CH2
    PA10     ------> TIM1_CH3
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11;
 8001eca:	f44f 6370 	mov.w	r3, #3840	@ 0xf00
 8001ece:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ed0:	2302      	movs	r3, #2
 8001ed2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ed8:	2300      	movs	r3, #0
 8001eda:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001edc:	2301      	movs	r3, #1
 8001ede:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ee0:	f107 0314 	add.w	r3, r7, #20
 8001ee4:	4619      	mov	r1, r3
 8001ee6:	f04f 4090 	mov.w	r0, #1207959552	@ 0x48000000
 8001eea:	f001 fc35 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspPostInit 1 */

  /* USER CODE END TIM8_MspPostInit 1 */
  }

}
 8001eee:	e021      	b.n	8001f34 <HAL_TIM_MspPostInit+0xa4>
  else if(htim->Instance==TIM8)
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	4a13      	ldr	r2, [pc, #76]	@ (8001f44 <HAL_TIM_MspPostInit+0xb4>)
 8001ef6:	4293      	cmp	r3, r2
 8001ef8:	d11c      	bne.n	8001f34 <HAL_TIM_MspPostInit+0xa4>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001efa:	4b11      	ldr	r3, [pc, #68]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001efc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001efe:	4a10      	ldr	r2, [pc, #64]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001f00:	f043 0304 	orr.w	r3, r3, #4
 8001f04:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001f06:	4b0e      	ldr	r3, [pc, #56]	@ (8001f40 <HAL_TIM_MspPostInit+0xb0>)
 8001f08:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001f0a:	f003 0304 	and.w	r3, r3, #4
 8001f0e:	60fb      	str	r3, [r7, #12]
 8001f10:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
 8001f12:	f44f 7370 	mov.w	r3, #960	@ 0x3c0
 8001f16:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f18:	2302      	movs	r3, #2
 8001f1a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f1c:	2300      	movs	r3, #0
 8001f1e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001f20:	2300      	movs	r3, #0
 8001f22:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8001f24:	2303      	movs	r3, #3
 8001f26:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f28:	f107 0314 	add.w	r3, r7, #20
 8001f2c:	4619      	mov	r1, r3
 8001f2e:	4806      	ldr	r0, [pc, #24]	@ (8001f48 <HAL_TIM_MspPostInit+0xb8>)
 8001f30:	f001 fc12 	bl	8003758 <HAL_GPIO_Init>
}
 8001f34:	bf00      	nop
 8001f36:	3728      	adds	r7, #40	@ 0x28
 8001f38:	46bd      	mov	sp, r7
 8001f3a:	bd80      	pop	{r7, pc}
 8001f3c:	40012c00 	.word	0x40012c00
 8001f40:	40021000 	.word	0x40021000
 8001f44:	40013400 	.word	0x40013400
 8001f48:	48000800 	.word	0x48000800

08001f4c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001f4c:	b580      	push	{r7, lr}
 8001f4e:	b0aa      	sub	sp, #168	@ 0xa8
 8001f50:	af00      	add	r7, sp, #0
 8001f52:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f54:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001f58:	2200      	movs	r2, #0
 8001f5a:	601a      	str	r2, [r3, #0]
 8001f5c:	605a      	str	r2, [r3, #4]
 8001f5e:	609a      	str	r2, [r3, #8]
 8001f60:	60da      	str	r2, [r3, #12]
 8001f62:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8001f64:	f107 0310 	add.w	r3, r7, #16
 8001f68:	2284      	movs	r2, #132	@ 0x84
 8001f6a:	2100      	movs	r1, #0
 8001f6c:	4618      	mov	r0, r3
 8001f6e:	f005 ffb8 	bl	8007ee2 <memset>
  if(huart->Instance==USART3)
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	4a21      	ldr	r2, [pc, #132]	@ (8001ffc <HAL_UART_MspInit+0xb0>)
 8001f78:	4293      	cmp	r3, r2
 8001f7a:	d13a      	bne.n	8001ff2 <HAL_UART_MspInit+0xa6>

  /* USER CODE END USART3_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8001f7c:	2304      	movs	r3, #4
 8001f7e:	613b      	str	r3, [r7, #16]
    PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8001f80:	2300      	movs	r3, #0
 8001f82:	653b      	str	r3, [r7, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8001f84:	f107 0310 	add.w	r3, r7, #16
 8001f88:	4618      	mov	r0, r3
 8001f8a:	f002 fd3d 	bl	8004a08 <HAL_RCCEx_PeriphCLKConfig>
 8001f8e:	4603      	mov	r3, r0
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	d001      	beq.n	8001f98 <HAL_UART_MspInit+0x4c>
    {
      Error_Handler();
 8001f94:	f7ff fbfe 	bl	8001794 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8001f98:	4b19      	ldr	r3, [pc, #100]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001f9a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001f9c:	4a18      	ldr	r2, [pc, #96]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001f9e:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001fa2:	6593      	str	r3, [r2, #88]	@ 0x58
 8001fa4:	4b16      	ldr	r3, [pc, #88]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001fa6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8001fa8:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001fac:	60fb      	str	r3, [r7, #12]
 8001fae:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fb0:	4b13      	ldr	r3, [pc, #76]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001fb2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001fb4:	4a12      	ldr	r2, [pc, #72]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001fb6:	f043 0304 	orr.w	r3, r3, #4
 8001fba:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8001fbc:	4b10      	ldr	r3, [pc, #64]	@ (8002000 <HAL_UART_MspInit+0xb4>)
 8001fbe:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8001fc0:	f003 0304 	and.w	r3, r3, #4
 8001fc4:	60bb      	str	r3, [r7, #8]
 8001fc6:	68bb      	ldr	r3, [r7, #8]
    /**USART3 GPIO Configuration
    PC4     ------> USART3_TX
    PC5     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8001fc8:	2330      	movs	r3, #48	@ 0x30
 8001fca:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fce:	2302      	movs	r3, #2
 8001fd0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd4:	2300      	movs	r3, #0
 8001fd6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fda:	2303      	movs	r3, #3
 8001fdc:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8001fe0:	2307      	movs	r3, #7
 8001fe2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fe6:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 8001fea:	4619      	mov	r1, r3
 8001fec:	4805      	ldr	r0, [pc, #20]	@ (8002004 <HAL_UART_MspInit+0xb8>)
 8001fee:	f001 fbb3 	bl	8003758 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8001ff2:	bf00      	nop
 8001ff4:	37a8      	adds	r7, #168	@ 0xa8
 8001ff6:	46bd      	mov	sp, r7
 8001ff8:	bd80      	pop	{r7, pc}
 8001ffa:	bf00      	nop
 8001ffc:	40004800 	.word	0x40004800
 8002000:	40021000 	.word	0x40021000
 8002004:	48000800 	.word	0x48000800

08002008 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002008:	b480      	push	{r7}
 800200a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800200c:	bf00      	nop
 800200e:	e7fd      	b.n	800200c <NMI_Handler+0x4>

08002010 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002010:	b480      	push	{r7}
 8002012:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002014:	bf00      	nop
 8002016:	e7fd      	b.n	8002014 <HardFault_Handler+0x4>

08002018 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002018:	b480      	push	{r7}
 800201a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800201c:	bf00      	nop
 800201e:	e7fd      	b.n	800201c <MemManage_Handler+0x4>

08002020 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002020:	b480      	push	{r7}
 8002022:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002024:	bf00      	nop
 8002026:	e7fd      	b.n	8002024 <BusFault_Handler+0x4>

08002028 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002028:	b480      	push	{r7}
 800202a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800202c:	bf00      	nop
 800202e:	e7fd      	b.n	800202c <UsageFault_Handler+0x4>

08002030 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002030:	b480      	push	{r7}
 8002032:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002034:	bf00      	nop
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr

0800203e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800203e:	b480      	push	{r7}
 8002040:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002042:	bf00      	nop
 8002044:	46bd      	mov	sp, r7
 8002046:	f85d 7b04 	ldr.w	r7, [sp], #4
 800204a:	4770      	bx	lr

0800204c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800204c:	b480      	push	{r7}
 800204e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002050:	bf00      	nop
 8002052:	46bd      	mov	sp, r7
 8002054:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002058:	4770      	bx	lr

0800205a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800205a:	b580      	push	{r7, lr}
 800205c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800205e:	f000 f92f 	bl	80022c0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002062:	bf00      	nop
 8002064:	bd80      	pop	{r7, pc}

08002066 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 8002066:	b480      	push	{r7}
 8002068:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 800206a:	bf00      	nop
 800206c:	46bd      	mov	sp, r7
 800206e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002072:	4770      	bx	lr

08002074 <TIM1_BRK_TIM15_IRQHandler>:

/**
  * @brief This function handles TIM1 break interrupt and TIM15 global interrupt.
  */
void TIM1_BRK_TIM15_IRQHandler(void)
{
 8002074:	b580      	push	{r7, lr}
 8002076:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 0 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8002078:	4803      	ldr	r0, [pc, #12]	@ (8002088 <TIM1_BRK_TIM15_IRQHandler+0x14>)
 800207a:	f003 fe9f 	bl	8005dbc <HAL_TIM_IRQHandler>
  HAL_TIM_IRQHandler(&htim15);
 800207e:	4803      	ldr	r0, [pc, #12]	@ (800208c <TIM1_BRK_TIM15_IRQHandler+0x18>)
 8002080:	f003 fe9c 	bl	8005dbc <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_BRK_TIM15_IRQn 1 */

  /* USER CODE END TIM1_BRK_TIM15_IRQn 1 */
}
 8002084:	bf00      	nop
 8002086:	bd80      	pop	{r7, pc}
 8002088:	20000268 	.word	0x20000268
 800208c:	20000430 	.word	0x20000430

08002090 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002090:	b580      	push	{r7, lr}
 8002092:	b086      	sub	sp, #24
 8002094:	af00      	add	r7, sp, #0
 8002096:	60f8      	str	r0, [r7, #12]
 8002098:	60b9      	str	r1, [r7, #8]
 800209a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800209c:	2300      	movs	r3, #0
 800209e:	617b      	str	r3, [r7, #20]
 80020a0:	e00a      	b.n	80020b8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80020a2:	f3af 8000 	nop.w
 80020a6:	4601      	mov	r1, r0
 80020a8:	68bb      	ldr	r3, [r7, #8]
 80020aa:	1c5a      	adds	r2, r3, #1
 80020ac:	60ba      	str	r2, [r7, #8]
 80020ae:	b2ca      	uxtb	r2, r1
 80020b0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020b2:	697b      	ldr	r3, [r7, #20]
 80020b4:	3301      	adds	r3, #1
 80020b6:	617b      	str	r3, [r7, #20]
 80020b8:	697a      	ldr	r2, [r7, #20]
 80020ba:	687b      	ldr	r3, [r7, #4]
 80020bc:	429a      	cmp	r2, r3
 80020be:	dbf0      	blt.n	80020a2 <_read+0x12>
  }

  return len;
 80020c0:	687b      	ldr	r3, [r7, #4]
}
 80020c2:	4618      	mov	r0, r3
 80020c4:	3718      	adds	r7, #24
 80020c6:	46bd      	mov	sp, r7
 80020c8:	bd80      	pop	{r7, pc}

080020ca <_close>:
  }
  return len;
}

int _close(int file)
{
 80020ca:	b480      	push	{r7}
 80020cc:	b083      	sub	sp, #12
 80020ce:	af00      	add	r7, sp, #0
 80020d0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80020d2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80020d6:	4618      	mov	r0, r3
 80020d8:	370c      	adds	r7, #12
 80020da:	46bd      	mov	sp, r7
 80020dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020e0:	4770      	bx	lr

080020e2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80020e2:	b480      	push	{r7}
 80020e4:	b083      	sub	sp, #12
 80020e6:	af00      	add	r7, sp, #0
 80020e8:	6078      	str	r0, [r7, #4]
 80020ea:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80020ec:	683b      	ldr	r3, [r7, #0]
 80020ee:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80020f2:	605a      	str	r2, [r3, #4]
  return 0;
 80020f4:	2300      	movs	r3, #0
}
 80020f6:	4618      	mov	r0, r3
 80020f8:	370c      	adds	r7, #12
 80020fa:	46bd      	mov	sp, r7
 80020fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002100:	4770      	bx	lr

08002102 <_isatty>:

int _isatty(int file)
{
 8002102:	b480      	push	{r7}
 8002104:	b083      	sub	sp, #12
 8002106:	af00      	add	r7, sp, #0
 8002108:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800210a:	2301      	movs	r3, #1
}
 800210c:	4618      	mov	r0, r3
 800210e:	370c      	adds	r7, #12
 8002110:	46bd      	mov	sp, r7
 8002112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002116:	4770      	bx	lr

08002118 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8002118:	b480      	push	{r7}
 800211a:	b085      	sub	sp, #20
 800211c:	af00      	add	r7, sp, #0
 800211e:	60f8      	str	r0, [r7, #12]
 8002120:	60b9      	str	r1, [r7, #8]
 8002122:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8002124:	2300      	movs	r3, #0
}
 8002126:	4618      	mov	r0, r3
 8002128:	3714      	adds	r7, #20
 800212a:	46bd      	mov	sp, r7
 800212c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002130:	4770      	bx	lr
	...

08002134 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002134:	b580      	push	{r7, lr}
 8002136:	b086      	sub	sp, #24
 8002138:	af00      	add	r7, sp, #0
 800213a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800213c:	4a14      	ldr	r2, [pc, #80]	@ (8002190 <_sbrk+0x5c>)
 800213e:	4b15      	ldr	r3, [pc, #84]	@ (8002194 <_sbrk+0x60>)
 8002140:	1ad3      	subs	r3, r2, r3
 8002142:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8002148:	4b13      	ldr	r3, [pc, #76]	@ (8002198 <_sbrk+0x64>)
 800214a:	681b      	ldr	r3, [r3, #0]
 800214c:	2b00      	cmp	r3, #0
 800214e:	d102      	bne.n	8002156 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002150:	4b11      	ldr	r3, [pc, #68]	@ (8002198 <_sbrk+0x64>)
 8002152:	4a12      	ldr	r2, [pc, #72]	@ (800219c <_sbrk+0x68>)
 8002154:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8002156:	4b10      	ldr	r3, [pc, #64]	@ (8002198 <_sbrk+0x64>)
 8002158:	681a      	ldr	r2, [r3, #0]
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	4413      	add	r3, r2
 800215e:	693a      	ldr	r2, [r7, #16]
 8002160:	429a      	cmp	r2, r3
 8002162:	d207      	bcs.n	8002174 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002164:	f005 ff0c 	bl	8007f80 <__errno>
 8002168:	4603      	mov	r3, r0
 800216a:	220c      	movs	r2, #12
 800216c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800216e:	f04f 33ff 	mov.w	r3, #4294967295
 8002172:	e009      	b.n	8002188 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002174:	4b08      	ldr	r3, [pc, #32]	@ (8002198 <_sbrk+0x64>)
 8002176:	681b      	ldr	r3, [r3, #0]
 8002178:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800217a:	4b07      	ldr	r3, [pc, #28]	@ (8002198 <_sbrk+0x64>)
 800217c:	681a      	ldr	r2, [r3, #0]
 800217e:	687b      	ldr	r3, [r7, #4]
 8002180:	4413      	add	r3, r2
 8002182:	4a05      	ldr	r2, [pc, #20]	@ (8002198 <_sbrk+0x64>)
 8002184:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002186:	68fb      	ldr	r3, [r7, #12]
}
 8002188:	4618      	mov	r0, r3
 800218a:	3718      	adds	r7, #24
 800218c:	46bd      	mov	sp, r7
 800218e:	bd80      	pop	{r7, pc}
 8002190:	20018000 	.word	0x20018000
 8002194:	00000400 	.word	0x00000400
 8002198:	200005b0 	.word	0x200005b0
 800219c:	20000708 	.word	0x20000708

080021a0 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @retval None
  */

void SystemInit(void)
{
 80021a0:	b480      	push	{r7}
 80021a2:	af00      	add	r7, sp, #0
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
#endif

  /* FPU settings ------------------------------------------------------------*/
#if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
  SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
 80021a4:	4b06      	ldr	r3, [pc, #24]	@ (80021c0 <SystemInit+0x20>)
 80021a6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80021aa:	4a05      	ldr	r2, [pc, #20]	@ (80021c0 <SystemInit+0x20>)
 80021ac:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 80021b0:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
#endif
}
 80021b4:	bf00      	nop
 80021b6:	46bd      	mov	sp, r7
 80021b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021bc:	4770      	bx	lr
 80021be:	bf00      	nop
 80021c0:	e000ed00 	.word	0xe000ed00

080021c4 <Reset_Handler>:
 80021c4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80021fc <LoopForever+0x2>
 80021c8:	f7ff ffea 	bl	80021a0 <SystemInit>
 80021cc:	480c      	ldr	r0, [pc, #48]	@ (8002200 <LoopForever+0x6>)
 80021ce:	490d      	ldr	r1, [pc, #52]	@ (8002204 <LoopForever+0xa>)
 80021d0:	4a0d      	ldr	r2, [pc, #52]	@ (8002208 <LoopForever+0xe>)
 80021d2:	2300      	movs	r3, #0
 80021d4:	e002      	b.n	80021dc <LoopCopyDataInit>

080021d6 <CopyDataInit>:
 80021d6:	58d4      	ldr	r4, [r2, r3]
 80021d8:	50c4      	str	r4, [r0, r3]
 80021da:	3304      	adds	r3, #4

080021dc <LoopCopyDataInit>:
 80021dc:	18c4      	adds	r4, r0, r3
 80021de:	428c      	cmp	r4, r1
 80021e0:	d3f9      	bcc.n	80021d6 <CopyDataInit>
 80021e2:	4a0a      	ldr	r2, [pc, #40]	@ (800220c <LoopForever+0x12>)
 80021e4:	4c0a      	ldr	r4, [pc, #40]	@ (8002210 <LoopForever+0x16>)
 80021e6:	2300      	movs	r3, #0
 80021e8:	e001      	b.n	80021ee <LoopFillZerobss>

080021ea <FillZerobss>:
 80021ea:	6013      	str	r3, [r2, #0]
 80021ec:	3204      	adds	r2, #4

080021ee <LoopFillZerobss>:
 80021ee:	42a2      	cmp	r2, r4
 80021f0:	d3fb      	bcc.n	80021ea <FillZerobss>
 80021f2:	f005 fecb 	bl	8007f8c <__libc_init_array>
 80021f6:	f7fe fa55 	bl	80006a4 <main>

080021fa <LoopForever>:
 80021fa:	e7fe      	b.n	80021fa <LoopForever>
 80021fc:	20018000 	.word	0x20018000
 8002200:	20000000 	.word	0x20000000
 8002204:	20000068 	.word	0x20000068
 8002208:	08008be8 	.word	0x08008be8
 800220c:	20000068 	.word	0x20000068
 8002210:	20000704 	.word	0x20000704

08002214 <ADC1_2_IRQHandler>:
 8002214:	e7fe      	b.n	8002214 <ADC1_2_IRQHandler>

08002216 <HAL_Init>:
 8002216:	b580      	push	{r7, lr}
 8002218:	b082      	sub	sp, #8
 800221a:	af00      	add	r7, sp, #0
 800221c:	2300      	movs	r3, #0
 800221e:	71fb      	strb	r3, [r7, #7]
 8002220:	2003      	movs	r0, #3
 8002222:	f001 fa57 	bl	80036d4 <HAL_NVIC_SetPriorityGrouping>
 8002226:	200f      	movs	r0, #15
 8002228:	f000 f80e 	bl	8002248 <HAL_InitTick>
 800222c:	4603      	mov	r3, r0
 800222e:	2b00      	cmp	r3, #0
 8002230:	d002      	beq.n	8002238 <HAL_Init+0x22>
 8002232:	2301      	movs	r3, #1
 8002234:	71fb      	strb	r3, [r7, #7]
 8002236:	e001      	b.n	800223c <HAL_Init+0x26>
 8002238:	f7ff faf6 	bl	8001828 <HAL_MspInit>
 800223c:	79fb      	ldrb	r3, [r7, #7]
 800223e:	4618      	mov	r0, r3
 8002240:	3708      	adds	r7, #8
 8002242:	46bd      	mov	sp, r7
 8002244:	bd80      	pop	{r7, pc}
	...

08002248 <HAL_InitTick>:
 8002248:	b580      	push	{r7, lr}
 800224a:	b084      	sub	sp, #16
 800224c:	af00      	add	r7, sp, #0
 800224e:	6078      	str	r0, [r7, #4]
 8002250:	2300      	movs	r3, #0
 8002252:	73fb      	strb	r3, [r7, #15]
 8002254:	4b17      	ldr	r3, [pc, #92]	@ (80022b4 <HAL_InitTick+0x6c>)
 8002256:	781b      	ldrb	r3, [r3, #0]
 8002258:	2b00      	cmp	r3, #0
 800225a:	d023      	beq.n	80022a4 <HAL_InitTick+0x5c>
 800225c:	4b16      	ldr	r3, [pc, #88]	@ (80022b8 <HAL_InitTick+0x70>)
 800225e:	681a      	ldr	r2, [r3, #0]
 8002260:	4b14      	ldr	r3, [pc, #80]	@ (80022b4 <HAL_InitTick+0x6c>)
 8002262:	781b      	ldrb	r3, [r3, #0]
 8002264:	4619      	mov	r1, r3
 8002266:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800226a:	fbb3 f3f1 	udiv	r3, r3, r1
 800226e:	fbb2 f3f3 	udiv	r3, r2, r3
 8002272:	4618      	mov	r0, r3
 8002274:	f001 fa63 	bl	800373e <HAL_SYSTICK_Config>
 8002278:	4603      	mov	r3, r0
 800227a:	2b00      	cmp	r3, #0
 800227c:	d10f      	bne.n	800229e <HAL_InitTick+0x56>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	2b0f      	cmp	r3, #15
 8002282:	d809      	bhi.n	8002298 <HAL_InitTick+0x50>
 8002284:	2200      	movs	r2, #0
 8002286:	6879      	ldr	r1, [r7, #4]
 8002288:	f04f 30ff 	mov.w	r0, #4294967295
 800228c:	f001 fa2d 	bl	80036ea <HAL_NVIC_SetPriority>
 8002290:	4a0a      	ldr	r2, [pc, #40]	@ (80022bc <HAL_InitTick+0x74>)
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	6013      	str	r3, [r2, #0]
 8002296:	e007      	b.n	80022a8 <HAL_InitTick+0x60>
 8002298:	2301      	movs	r3, #1
 800229a:	73fb      	strb	r3, [r7, #15]
 800229c:	e004      	b.n	80022a8 <HAL_InitTick+0x60>
 800229e:	2301      	movs	r3, #1
 80022a0:	73fb      	strb	r3, [r7, #15]
 80022a2:	e001      	b.n	80022a8 <HAL_InitTick+0x60>
 80022a4:	2301      	movs	r3, #1
 80022a6:	73fb      	strb	r3, [r7, #15]
 80022a8:	7bfb      	ldrb	r3, [r7, #15]
 80022aa:	4618      	mov	r0, r3
 80022ac:	3710      	adds	r7, #16
 80022ae:	46bd      	mov	sp, r7
 80022b0:	bd80      	pop	{r7, pc}
 80022b2:	bf00      	nop
 80022b4:	20000008 	.word	0x20000008
 80022b8:	20000000 	.word	0x20000000
 80022bc:	20000004 	.word	0x20000004

080022c0 <HAL_IncTick>:
 80022c0:	b480      	push	{r7}
 80022c2:	af00      	add	r7, sp, #0
 80022c4:	4b06      	ldr	r3, [pc, #24]	@ (80022e0 <HAL_IncTick+0x20>)
 80022c6:	781b      	ldrb	r3, [r3, #0]
 80022c8:	461a      	mov	r2, r3
 80022ca:	4b06      	ldr	r3, [pc, #24]	@ (80022e4 <HAL_IncTick+0x24>)
 80022cc:	681b      	ldr	r3, [r3, #0]
 80022ce:	4413      	add	r3, r2
 80022d0:	4a04      	ldr	r2, [pc, #16]	@ (80022e4 <HAL_IncTick+0x24>)
 80022d2:	6013      	str	r3, [r2, #0]
 80022d4:	bf00      	nop
 80022d6:	46bd      	mov	sp, r7
 80022d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022dc:	4770      	bx	lr
 80022de:	bf00      	nop
 80022e0:	20000008 	.word	0x20000008
 80022e4:	200005b4 	.word	0x200005b4

080022e8 <HAL_GetTick>:
 80022e8:	b480      	push	{r7}
 80022ea:	af00      	add	r7, sp, #0
 80022ec:	4b03      	ldr	r3, [pc, #12]	@ (80022fc <HAL_GetTick+0x14>)
 80022ee:	681b      	ldr	r3, [r3, #0]
 80022f0:	4618      	mov	r0, r3
 80022f2:	46bd      	mov	sp, r7
 80022f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022f8:	4770      	bx	lr
 80022fa:	bf00      	nop
 80022fc:	200005b4 	.word	0x200005b4

08002300 <LL_ADC_SetCommonClock>:
 8002300:	b480      	push	{r7}
 8002302:	b083      	sub	sp, #12
 8002304:	af00      	add	r7, sp, #0
 8002306:	6078      	str	r0, [r7, #4]
 8002308:	6039      	str	r1, [r7, #0]
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	689b      	ldr	r3, [r3, #8]
 800230e:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 8002312:	683b      	ldr	r3, [r7, #0]
 8002314:	431a      	orrs	r2, r3
 8002316:	687b      	ldr	r3, [r7, #4]
 8002318:	609a      	str	r2, [r3, #8]
 800231a:	bf00      	nop
 800231c:	370c      	adds	r7, #12
 800231e:	46bd      	mov	sp, r7
 8002320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002324:	4770      	bx	lr

08002326 <LL_ADC_SetCommonPathInternalCh>:
 8002326:	b480      	push	{r7}
 8002328:	b083      	sub	sp, #12
 800232a:	af00      	add	r7, sp, #0
 800232c:	6078      	str	r0, [r7, #4]
 800232e:	6039      	str	r1, [r7, #0]
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	689b      	ldr	r3, [r3, #8]
 8002334:	f023 72e0 	bic.w	r2, r3, #29360128	@ 0x1c00000
 8002338:	683b      	ldr	r3, [r7, #0]
 800233a:	431a      	orrs	r2, r3
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	609a      	str	r2, [r3, #8]
 8002340:	bf00      	nop
 8002342:	370c      	adds	r7, #12
 8002344:	46bd      	mov	sp, r7
 8002346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800234a:	4770      	bx	lr

0800234c <LL_ADC_GetCommonPathInternalCh>:
 800234c:	b480      	push	{r7}
 800234e:	b083      	sub	sp, #12
 8002350:	af00      	add	r7, sp, #0
 8002352:	6078      	str	r0, [r7, #4]
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	689b      	ldr	r3, [r3, #8]
 8002358:	f003 73e0 	and.w	r3, r3, #29360128	@ 0x1c00000
 800235c:	4618      	mov	r0, r3
 800235e:	370c      	adds	r7, #12
 8002360:	46bd      	mov	sp, r7
 8002362:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002366:	4770      	bx	lr

08002368 <LL_ADC_SetOffset>:
 8002368:	b480      	push	{r7}
 800236a:	b087      	sub	sp, #28
 800236c:	af00      	add	r7, sp, #0
 800236e:	60f8      	str	r0, [r7, #12]
 8002370:	60b9      	str	r1, [r7, #8]
 8002372:	607a      	str	r2, [r7, #4]
 8002374:	603b      	str	r3, [r7, #0]
 8002376:	68fb      	ldr	r3, [r7, #12]
 8002378:	3360      	adds	r3, #96	@ 0x60
 800237a:	461a      	mov	r2, r3
 800237c:	68bb      	ldr	r3, [r7, #8]
 800237e:	009b      	lsls	r3, r3, #2
 8002380:	4413      	add	r3, r2
 8002382:	617b      	str	r3, [r7, #20]
 8002384:	697b      	ldr	r3, [r7, #20]
 8002386:	681a      	ldr	r2, [r3, #0]
 8002388:	4b08      	ldr	r3, [pc, #32]	@ (80023ac <LL_ADC_SetOffset+0x44>)
 800238a:	4013      	ands	r3, r2
 800238c:	687a      	ldr	r2, [r7, #4]
 800238e:	f002 41f8 	and.w	r1, r2, #2080374784	@ 0x7c000000
 8002392:	683a      	ldr	r2, [r7, #0]
 8002394:	430a      	orrs	r2, r1
 8002396:	4313      	orrs	r3, r2
 8002398:	f043 4200 	orr.w	r2, r3, #2147483648	@ 0x80000000
 800239c:	697b      	ldr	r3, [r7, #20]
 800239e:	601a      	str	r2, [r3, #0]
 80023a0:	bf00      	nop
 80023a2:	371c      	adds	r7, #28
 80023a4:	46bd      	mov	sp, r7
 80023a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023aa:	4770      	bx	lr
 80023ac:	03fff000 	.word	0x03fff000

080023b0 <LL_ADC_GetOffsetChannel>:
 80023b0:	b480      	push	{r7}
 80023b2:	b085      	sub	sp, #20
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	6078      	str	r0, [r7, #4]
 80023b8:	6039      	str	r1, [r7, #0]
 80023ba:	687b      	ldr	r3, [r7, #4]
 80023bc:	3360      	adds	r3, #96	@ 0x60
 80023be:	461a      	mov	r2, r3
 80023c0:	683b      	ldr	r3, [r7, #0]
 80023c2:	009b      	lsls	r3, r3, #2
 80023c4:	4413      	add	r3, r2
 80023c6:	60fb      	str	r3, [r7, #12]
 80023c8:	68fb      	ldr	r3, [r7, #12]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	f003 43f8 	and.w	r3, r3, #2080374784	@ 0x7c000000
 80023d0:	4618      	mov	r0, r3
 80023d2:	3714      	adds	r7, #20
 80023d4:	46bd      	mov	sp, r7
 80023d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023da:	4770      	bx	lr

080023dc <LL_ADC_SetOffsetState>:
 80023dc:	b480      	push	{r7}
 80023de:	b087      	sub	sp, #28
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	60f8      	str	r0, [r7, #12]
 80023e4:	60b9      	str	r1, [r7, #8]
 80023e6:	607a      	str	r2, [r7, #4]
 80023e8:	68fb      	ldr	r3, [r7, #12]
 80023ea:	3360      	adds	r3, #96	@ 0x60
 80023ec:	461a      	mov	r2, r3
 80023ee:	68bb      	ldr	r3, [r7, #8]
 80023f0:	009b      	lsls	r3, r3, #2
 80023f2:	4413      	add	r3, r2
 80023f4:	617b      	str	r3, [r7, #20]
 80023f6:	697b      	ldr	r3, [r7, #20]
 80023f8:	681b      	ldr	r3, [r3, #0]
 80023fa:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 80023fe:	687b      	ldr	r3, [r7, #4]
 8002400:	431a      	orrs	r2, r3
 8002402:	697b      	ldr	r3, [r7, #20]
 8002404:	601a      	str	r2, [r3, #0]
 8002406:	bf00      	nop
 8002408:	371c      	adds	r7, #28
 800240a:	46bd      	mov	sp, r7
 800240c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002410:	4770      	bx	lr

08002412 <LL_ADC_REG_SetSequencerRanks>:
 8002412:	b480      	push	{r7}
 8002414:	b087      	sub	sp, #28
 8002416:	af00      	add	r7, sp, #0
 8002418:	60f8      	str	r0, [r7, #12]
 800241a:	60b9      	str	r1, [r7, #8]
 800241c:	607a      	str	r2, [r7, #4]
 800241e:	68fb      	ldr	r3, [r7, #12]
 8002420:	3330      	adds	r3, #48	@ 0x30
 8002422:	461a      	mov	r2, r3
 8002424:	68bb      	ldr	r3, [r7, #8]
 8002426:	0a1b      	lsrs	r3, r3, #8
 8002428:	009b      	lsls	r3, r3, #2
 800242a:	f003 030c 	and.w	r3, r3, #12
 800242e:	4413      	add	r3, r2
 8002430:	617b      	str	r3, [r7, #20]
 8002432:	697b      	ldr	r3, [r7, #20]
 8002434:	681a      	ldr	r2, [r3, #0]
 8002436:	68bb      	ldr	r3, [r7, #8]
 8002438:	f003 031f 	and.w	r3, r3, #31
 800243c:	211f      	movs	r1, #31
 800243e:	fa01 f303 	lsl.w	r3, r1, r3
 8002442:	43db      	mvns	r3, r3
 8002444:	401a      	ands	r2, r3
 8002446:	687b      	ldr	r3, [r7, #4]
 8002448:	0e9b      	lsrs	r3, r3, #26
 800244a:	f003 011f 	and.w	r1, r3, #31
 800244e:	68bb      	ldr	r3, [r7, #8]
 8002450:	f003 031f 	and.w	r3, r3, #31
 8002454:	fa01 f303 	lsl.w	r3, r1, r3
 8002458:	431a      	orrs	r2, r3
 800245a:	697b      	ldr	r3, [r7, #20]
 800245c:	601a      	str	r2, [r3, #0]
 800245e:	bf00      	nop
 8002460:	371c      	adds	r7, #28
 8002462:	46bd      	mov	sp, r7
 8002464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002468:	4770      	bx	lr

0800246a <LL_ADC_SetChannelSamplingTime>:
 800246a:	b480      	push	{r7}
 800246c:	b087      	sub	sp, #28
 800246e:	af00      	add	r7, sp, #0
 8002470:	60f8      	str	r0, [r7, #12]
 8002472:	60b9      	str	r1, [r7, #8]
 8002474:	607a      	str	r2, [r7, #4]
 8002476:	68fb      	ldr	r3, [r7, #12]
 8002478:	3314      	adds	r3, #20
 800247a:	461a      	mov	r2, r3
 800247c:	68bb      	ldr	r3, [r7, #8]
 800247e:	0e5b      	lsrs	r3, r3, #25
 8002480:	009b      	lsls	r3, r3, #2
 8002482:	f003 0304 	and.w	r3, r3, #4
 8002486:	4413      	add	r3, r2
 8002488:	617b      	str	r3, [r7, #20]
 800248a:	697b      	ldr	r3, [r7, #20]
 800248c:	681a      	ldr	r2, [r3, #0]
 800248e:	68bb      	ldr	r3, [r7, #8]
 8002490:	0d1b      	lsrs	r3, r3, #20
 8002492:	f003 031f 	and.w	r3, r3, #31
 8002496:	2107      	movs	r1, #7
 8002498:	fa01 f303 	lsl.w	r3, r1, r3
 800249c:	43db      	mvns	r3, r3
 800249e:	401a      	ands	r2, r3
 80024a0:	68bb      	ldr	r3, [r7, #8]
 80024a2:	0d1b      	lsrs	r3, r3, #20
 80024a4:	f003 031f 	and.w	r3, r3, #31
 80024a8:	6879      	ldr	r1, [r7, #4]
 80024aa:	fa01 f303 	lsl.w	r3, r1, r3
 80024ae:	431a      	orrs	r2, r3
 80024b0:	697b      	ldr	r3, [r7, #20]
 80024b2:	601a      	str	r2, [r3, #0]
 80024b4:	bf00      	nop
 80024b6:	371c      	adds	r7, #28
 80024b8:	46bd      	mov	sp, r7
 80024ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024be:	4770      	bx	lr

080024c0 <LL_ADC_SetChannelSingleDiff>:
 80024c0:	b480      	push	{r7}
 80024c2:	b085      	sub	sp, #20
 80024c4:	af00      	add	r7, sp, #0
 80024c6:	60f8      	str	r0, [r7, #12]
 80024c8:	60b9      	str	r1, [r7, #8]
 80024ca:	607a      	str	r2, [r7, #4]
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	f8d3 20b0 	ldr.w	r2, [r3, #176]	@ 0xb0
 80024d2:	68bb      	ldr	r3, [r7, #8]
 80024d4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80024d8:	43db      	mvns	r3, r3
 80024da:	401a      	ands	r2, r3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	f003 0318 	and.w	r3, r3, #24
 80024e2:	4908      	ldr	r1, [pc, #32]	@ (8002504 <LL_ADC_SetChannelSingleDiff+0x44>)
 80024e4:	40d9      	lsrs	r1, r3
 80024e6:	68bb      	ldr	r3, [r7, #8]
 80024e8:	400b      	ands	r3, r1
 80024ea:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80024ee:	431a      	orrs	r2, r3
 80024f0:	68fb      	ldr	r3, [r7, #12]
 80024f2:	f8c3 20b0 	str.w	r2, [r3, #176]	@ 0xb0
 80024f6:	bf00      	nop
 80024f8:	3714      	adds	r7, #20
 80024fa:	46bd      	mov	sp, r7
 80024fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002500:	4770      	bx	lr
 8002502:	bf00      	nop
 8002504:	0007ffff 	.word	0x0007ffff

08002508 <LL_ADC_GetMultimode>:
 8002508:	b480      	push	{r7}
 800250a:	b083      	sub	sp, #12
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	689b      	ldr	r3, [r3, #8]
 8002514:	f003 031f 	and.w	r3, r3, #31
 8002518:	4618      	mov	r0, r3
 800251a:	370c      	adds	r7, #12
 800251c:	46bd      	mov	sp, r7
 800251e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002522:	4770      	bx	lr

08002524 <LL_ADC_DisableDeepPowerDown>:
 8002524:	b480      	push	{r7}
 8002526:	b083      	sub	sp, #12
 8002528:	af00      	add	r7, sp, #0
 800252a:	6078      	str	r0, [r7, #4]
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	689b      	ldr	r3, [r3, #8]
 8002530:	f023 4320 	bic.w	r3, r3, #2684354560	@ 0xa0000000
 8002534:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002538:	687a      	ldr	r2, [r7, #4]
 800253a:	6093      	str	r3, [r2, #8]
 800253c:	bf00      	nop
 800253e:	370c      	adds	r7, #12
 8002540:	46bd      	mov	sp, r7
 8002542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002546:	4770      	bx	lr

08002548 <LL_ADC_IsDeepPowerDownEnabled>:
 8002548:	b480      	push	{r7}
 800254a:	b083      	sub	sp, #12
 800254c:	af00      	add	r7, sp, #0
 800254e:	6078      	str	r0, [r7, #4]
 8002550:	687b      	ldr	r3, [r7, #4]
 8002552:	689b      	ldr	r3, [r3, #8]
 8002554:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8002558:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800255c:	d101      	bne.n	8002562 <LL_ADC_IsDeepPowerDownEnabled+0x1a>
 800255e:	2301      	movs	r3, #1
 8002560:	e000      	b.n	8002564 <LL_ADC_IsDeepPowerDownEnabled+0x1c>
 8002562:	2300      	movs	r3, #0
 8002564:	4618      	mov	r0, r3
 8002566:	370c      	adds	r7, #12
 8002568:	46bd      	mov	sp, r7
 800256a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800256e:	4770      	bx	lr

08002570 <LL_ADC_EnableInternalRegulator>:
 8002570:	b480      	push	{r7}
 8002572:	b083      	sub	sp, #12
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	689b      	ldr	r3, [r3, #8]
 800257c:	f023 4310 	bic.w	r3, r3, #2415919104	@ 0x90000000
 8002580:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002584:	f043 5280 	orr.w	r2, r3, #268435456	@ 0x10000000
 8002588:	687b      	ldr	r3, [r7, #4]
 800258a:	609a      	str	r2, [r3, #8]
 800258c:	bf00      	nop
 800258e:	370c      	adds	r7, #12
 8002590:	46bd      	mov	sp, r7
 8002592:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002596:	4770      	bx	lr

08002598 <LL_ADC_IsInternalRegulatorEnabled>:
 8002598:	b480      	push	{r7}
 800259a:	b083      	sub	sp, #12
 800259c:	af00      	add	r7, sp, #0
 800259e:	6078      	str	r0, [r7, #4]
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	689b      	ldr	r3, [r3, #8]
 80025a4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80025a8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80025ac:	d101      	bne.n	80025b2 <LL_ADC_IsInternalRegulatorEnabled+0x1a>
 80025ae:	2301      	movs	r3, #1
 80025b0:	e000      	b.n	80025b4 <LL_ADC_IsInternalRegulatorEnabled+0x1c>
 80025b2:	2300      	movs	r3, #0
 80025b4:	4618      	mov	r0, r3
 80025b6:	370c      	adds	r7, #12
 80025b8:	46bd      	mov	sp, r7
 80025ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025be:	4770      	bx	lr

080025c0 <LL_ADC_Enable>:
 80025c0:	b480      	push	{r7}
 80025c2:	b083      	sub	sp, #12
 80025c4:	af00      	add	r7, sp, #0
 80025c6:	6078      	str	r0, [r7, #4]
 80025c8:	687b      	ldr	r3, [r7, #4]
 80025ca:	689b      	ldr	r3, [r3, #8]
 80025cc:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 80025d0:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 80025d4:	f043 0201 	orr.w	r2, r3, #1
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	609a      	str	r2, [r3, #8]
 80025dc:	bf00      	nop
 80025de:	370c      	adds	r7, #12
 80025e0:	46bd      	mov	sp, r7
 80025e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025e6:	4770      	bx	lr

080025e8 <LL_ADC_IsEnabled>:
 80025e8:	b480      	push	{r7}
 80025ea:	b083      	sub	sp, #12
 80025ec:	af00      	add	r7, sp, #0
 80025ee:	6078      	str	r0, [r7, #4]
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	689b      	ldr	r3, [r3, #8]
 80025f4:	f003 0301 	and.w	r3, r3, #1
 80025f8:	2b01      	cmp	r3, #1
 80025fa:	d101      	bne.n	8002600 <LL_ADC_IsEnabled+0x18>
 80025fc:	2301      	movs	r3, #1
 80025fe:	e000      	b.n	8002602 <LL_ADC_IsEnabled+0x1a>
 8002600:	2300      	movs	r3, #0
 8002602:	4618      	mov	r0, r3
 8002604:	370c      	adds	r7, #12
 8002606:	46bd      	mov	sp, r7
 8002608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800260c:	4770      	bx	lr

0800260e <LL_ADC_REG_StartConversion>:
 800260e:	b480      	push	{r7}
 8002610:	b083      	sub	sp, #12
 8002612:	af00      	add	r7, sp, #0
 8002614:	6078      	str	r0, [r7, #4]
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	689b      	ldr	r3, [r3, #8]
 800261a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800261e:	f023 033f 	bic.w	r3, r3, #63	@ 0x3f
 8002622:	f043 0204 	orr.w	r2, r3, #4
 8002626:	687b      	ldr	r3, [r7, #4]
 8002628:	609a      	str	r2, [r3, #8]
 800262a:	bf00      	nop
 800262c:	370c      	adds	r7, #12
 800262e:	46bd      	mov	sp, r7
 8002630:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002634:	4770      	bx	lr

08002636 <LL_ADC_REG_IsConversionOngoing>:
 8002636:	b480      	push	{r7}
 8002638:	b083      	sub	sp, #12
 800263a:	af00      	add	r7, sp, #0
 800263c:	6078      	str	r0, [r7, #4]
 800263e:	687b      	ldr	r3, [r7, #4]
 8002640:	689b      	ldr	r3, [r3, #8]
 8002642:	f003 0304 	and.w	r3, r3, #4
 8002646:	2b04      	cmp	r3, #4
 8002648:	d101      	bne.n	800264e <LL_ADC_REG_IsConversionOngoing+0x18>
 800264a:	2301      	movs	r3, #1
 800264c:	e000      	b.n	8002650 <LL_ADC_REG_IsConversionOngoing+0x1a>
 800264e:	2300      	movs	r3, #0
 8002650:	4618      	mov	r0, r3
 8002652:	370c      	adds	r7, #12
 8002654:	46bd      	mov	sp, r7
 8002656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800265a:	4770      	bx	lr

0800265c <LL_ADC_INJ_IsConversionOngoing>:
 800265c:	b480      	push	{r7}
 800265e:	b083      	sub	sp, #12
 8002660:	af00      	add	r7, sp, #0
 8002662:	6078      	str	r0, [r7, #4]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	689b      	ldr	r3, [r3, #8]
 8002668:	f003 0308 	and.w	r3, r3, #8
 800266c:	2b08      	cmp	r3, #8
 800266e:	d101      	bne.n	8002674 <LL_ADC_INJ_IsConversionOngoing+0x18>
 8002670:	2301      	movs	r3, #1
 8002672:	e000      	b.n	8002676 <LL_ADC_INJ_IsConversionOngoing+0x1a>
 8002674:	2300      	movs	r3, #0
 8002676:	4618      	mov	r0, r3
 8002678:	370c      	adds	r7, #12
 800267a:	46bd      	mov	sp, r7
 800267c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002680:	4770      	bx	lr
	...

08002684 <HAL_ADC_Init>:
 8002684:	b590      	push	{r4, r7, lr}
 8002686:	b089      	sub	sp, #36	@ 0x24
 8002688:	af00      	add	r7, sp, #0
 800268a:	6078      	str	r0, [r7, #4]
 800268c:	2300      	movs	r3, #0
 800268e:	77fb      	strb	r3, [r7, #31]
 8002690:	2300      	movs	r3, #0
 8002692:	60fb      	str	r3, [r7, #12]
 8002694:	687b      	ldr	r3, [r7, #4]
 8002696:	2b00      	cmp	r3, #0
 8002698:	d101      	bne.n	800269e <HAL_ADC_Init+0x1a>
 800269a:	2301      	movs	r3, #1
 800269c:	e130      	b.n	8002900 <HAL_ADC_Init+0x27c>
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	691b      	ldr	r3, [r3, #16]
 80026a2:	2b00      	cmp	r3, #0
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80026a8:	2b00      	cmp	r3, #0
 80026aa:	d109      	bne.n	80026c0 <HAL_ADC_Init+0x3c>
 80026ac:	6878      	ldr	r0, [r7, #4]
 80026ae:	f7ff f8e5 	bl	800187c <HAL_ADC_MspInit>
 80026b2:	687b      	ldr	r3, [r7, #4]
 80026b4:	2200      	movs	r2, #0
 80026b6:	659a      	str	r2, [r3, #88]	@ 0x58
 80026b8:	687b      	ldr	r3, [r7, #4]
 80026ba:	2200      	movs	r2, #0
 80026bc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	4618      	mov	r0, r3
 80026c6:	f7ff ff3f 	bl	8002548 <LL_ADC_IsDeepPowerDownEnabled>
 80026ca:	4603      	mov	r3, r0
 80026cc:	2b00      	cmp	r3, #0
 80026ce:	d004      	beq.n	80026da <HAL_ADC_Init+0x56>
 80026d0:	687b      	ldr	r3, [r7, #4]
 80026d2:	681b      	ldr	r3, [r3, #0]
 80026d4:	4618      	mov	r0, r3
 80026d6:	f7ff ff25 	bl	8002524 <LL_ADC_DisableDeepPowerDown>
 80026da:	687b      	ldr	r3, [r7, #4]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	4618      	mov	r0, r3
 80026e0:	f7ff ff5a 	bl	8002598 <LL_ADC_IsInternalRegulatorEnabled>
 80026e4:	4603      	mov	r3, r0
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d115      	bne.n	8002716 <HAL_ADC_Init+0x92>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	4618      	mov	r0, r3
 80026f0:	f7ff ff3e 	bl	8002570 <LL_ADC_EnableInternalRegulator>
 80026f4:	4b84      	ldr	r3, [pc, #528]	@ (8002908 <HAL_ADC_Init+0x284>)
 80026f6:	681b      	ldr	r3, [r3, #0]
 80026f8:	099b      	lsrs	r3, r3, #6
 80026fa:	4a84      	ldr	r2, [pc, #528]	@ (800290c <HAL_ADC_Init+0x288>)
 80026fc:	fba2 2303 	umull	r2, r3, r2, r3
 8002700:	099b      	lsrs	r3, r3, #6
 8002702:	3301      	adds	r3, #1
 8002704:	005b      	lsls	r3, r3, #1
 8002706:	60fb      	str	r3, [r7, #12]
 8002708:	e002      	b.n	8002710 <HAL_ADC_Init+0x8c>
 800270a:	68fb      	ldr	r3, [r7, #12]
 800270c:	3b01      	subs	r3, #1
 800270e:	60fb      	str	r3, [r7, #12]
 8002710:	68fb      	ldr	r3, [r7, #12]
 8002712:	2b00      	cmp	r3, #0
 8002714:	d1f9      	bne.n	800270a <HAL_ADC_Init+0x86>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	681b      	ldr	r3, [r3, #0]
 800271a:	4618      	mov	r0, r3
 800271c:	f7ff ff3c 	bl	8002598 <LL_ADC_IsInternalRegulatorEnabled>
 8002720:	4603      	mov	r3, r0
 8002722:	2b00      	cmp	r3, #0
 8002724:	d10d      	bne.n	8002742 <HAL_ADC_Init+0xbe>
 8002726:	687b      	ldr	r3, [r7, #4]
 8002728:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800272a:	f043 0210 	orr.w	r2, r3, #16
 800272e:	687b      	ldr	r3, [r7, #4]
 8002730:	655a      	str	r2, [r3, #84]	@ 0x54
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8002736:	f043 0201 	orr.w	r2, r3, #1
 800273a:	687b      	ldr	r3, [r7, #4]
 800273c:	659a      	str	r2, [r3, #88]	@ 0x58
 800273e:	2301      	movs	r3, #1
 8002740:	77fb      	strb	r3, [r7, #31]
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	4618      	mov	r0, r3
 8002748:	f7ff ff75 	bl	8002636 <LL_ADC_REG_IsConversionOngoing>
 800274c:	6178      	str	r0, [r7, #20]
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002752:	f003 0310 	and.w	r3, r3, #16
 8002756:	2b00      	cmp	r3, #0
 8002758:	f040 80c9 	bne.w	80028ee <HAL_ADC_Init+0x26a>
 800275c:	697b      	ldr	r3, [r7, #20]
 800275e:	2b00      	cmp	r3, #0
 8002760:	f040 80c5 	bne.w	80028ee <HAL_ADC_Init+0x26a>
 8002764:	687b      	ldr	r3, [r7, #4]
 8002766:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002768:	f423 7381 	bic.w	r3, r3, #258	@ 0x102
 800276c:	f043 0202 	orr.w	r2, r3, #2
 8002770:	687b      	ldr	r3, [r7, #4]
 8002772:	655a      	str	r2, [r3, #84]	@ 0x54
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	4618      	mov	r0, r3
 800277a:	f7ff ff35 	bl	80025e8 <LL_ADC_IsEnabled>
 800277e:	4603      	mov	r3, r0
 8002780:	2b00      	cmp	r3, #0
 8002782:	d115      	bne.n	80027b0 <HAL_ADC_Init+0x12c>
 8002784:	4862      	ldr	r0, [pc, #392]	@ (8002910 <HAL_ADC_Init+0x28c>)
 8002786:	f7ff ff2f 	bl	80025e8 <LL_ADC_IsEnabled>
 800278a:	4604      	mov	r4, r0
 800278c:	4861      	ldr	r0, [pc, #388]	@ (8002914 <HAL_ADC_Init+0x290>)
 800278e:	f7ff ff2b 	bl	80025e8 <LL_ADC_IsEnabled>
 8002792:	4603      	mov	r3, r0
 8002794:	431c      	orrs	r4, r3
 8002796:	4860      	ldr	r0, [pc, #384]	@ (8002918 <HAL_ADC_Init+0x294>)
 8002798:	f7ff ff26 	bl	80025e8 <LL_ADC_IsEnabled>
 800279c:	4603      	mov	r3, r0
 800279e:	4323      	orrs	r3, r4
 80027a0:	2b00      	cmp	r3, #0
 80027a2:	d105      	bne.n	80027b0 <HAL_ADC_Init+0x12c>
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	685b      	ldr	r3, [r3, #4]
 80027a8:	4619      	mov	r1, r3
 80027aa:	485c      	ldr	r0, [pc, #368]	@ (800291c <HAL_ADC_Init+0x298>)
 80027ac:	f7ff fda8 	bl	8002300 <LL_ADC_SetCommonClock>
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	7e5b      	ldrb	r3, [r3, #25]
 80027b4:	035a      	lsls	r2, r3, #13
 80027b6:	687b      	ldr	r3, [r7, #4]
 80027b8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80027ba:	431a      	orrs	r2, r3
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	68db      	ldr	r3, [r3, #12]
 80027c0:	431a      	orrs	r2, r3
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	689b      	ldr	r3, [r3, #8]
 80027c6:	431a      	orrs	r2, r3
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	f893 3020 	ldrb.w	r3, [r3, #32]
 80027ce:	041b      	lsls	r3, r3, #16
 80027d0:	4313      	orrs	r3, r2
 80027d2:	61bb      	str	r3, [r7, #24]
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	f893 3020 	ldrb.w	r3, [r3, #32]
 80027da:	2b01      	cmp	r3, #1
 80027dc:	d106      	bne.n	80027ec <HAL_ADC_Init+0x168>
 80027de:	687b      	ldr	r3, [r7, #4]
 80027e0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80027e2:	3b01      	subs	r3, #1
 80027e4:	045b      	lsls	r3, r3, #17
 80027e6:	69ba      	ldr	r2, [r7, #24]
 80027e8:	4313      	orrs	r3, r2
 80027ea:	61bb      	str	r3, [r7, #24]
 80027ec:	687b      	ldr	r3, [r7, #4]
 80027ee:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80027f0:	2b00      	cmp	r3, #0
 80027f2:	d009      	beq.n	8002808 <HAL_ADC_Init+0x184>
 80027f4:	687b      	ldr	r3, [r7, #4]
 80027f6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80027f8:	f403 7270 	and.w	r2, r3, #960	@ 0x3c0
 80027fc:	687b      	ldr	r3, [r7, #4]
 80027fe:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002800:	4313      	orrs	r3, r2
 8002802:	69ba      	ldr	r2, [r7, #24]
 8002804:	4313      	orrs	r3, r2
 8002806:	61bb      	str	r3, [r7, #24]
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	681b      	ldr	r3, [r3, #0]
 800280c:	68da      	ldr	r2, [r3, #12]
 800280e:	4b44      	ldr	r3, [pc, #272]	@ (8002920 <HAL_ADC_Init+0x29c>)
 8002810:	4013      	ands	r3, r2
 8002812:	687a      	ldr	r2, [r7, #4]
 8002814:	6812      	ldr	r2, [r2, #0]
 8002816:	69b9      	ldr	r1, [r7, #24]
 8002818:	430b      	orrs	r3, r1
 800281a:	60d3      	str	r3, [r2, #12]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	681b      	ldr	r3, [r3, #0]
 8002820:	4618      	mov	r0, r3
 8002822:	f7ff ff1b 	bl	800265c <LL_ADC_INJ_IsConversionOngoing>
 8002826:	6138      	str	r0, [r7, #16]
 8002828:	697b      	ldr	r3, [r7, #20]
 800282a:	2b00      	cmp	r3, #0
 800282c:	d13d      	bne.n	80028aa <HAL_ADC_Init+0x226>
 800282e:	693b      	ldr	r3, [r7, #16]
 8002830:	2b00      	cmp	r3, #0
 8002832:	d13a      	bne.n	80028aa <HAL_ADC_Init+0x226>
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	7e1b      	ldrb	r3, [r3, #24]
 8002838:	039a      	lsls	r2, r3, #14
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8002840:	005b      	lsls	r3, r3, #1
 8002842:	4313      	orrs	r3, r2
 8002844:	61bb      	str	r3, [r7, #24]
 8002846:	687b      	ldr	r3, [r7, #4]
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	68db      	ldr	r3, [r3, #12]
 800284c:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8002850:	f023 0302 	bic.w	r3, r3, #2
 8002854:	687a      	ldr	r2, [r7, #4]
 8002856:	6812      	ldr	r2, [r2, #0]
 8002858:	69b9      	ldr	r1, [r7, #24]
 800285a:	430b      	orrs	r3, r1
 800285c:	60d3      	str	r3, [r2, #12]
 800285e:	687b      	ldr	r3, [r7, #4]
 8002860:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
 8002864:	2b01      	cmp	r3, #1
 8002866:	d118      	bne.n	800289a <HAL_ADC_Init+0x216>
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	691b      	ldr	r3, [r3, #16]
 800286e:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8002872:	f023 0304 	bic.w	r3, r3, #4
 8002876:	687a      	ldr	r2, [r7, #4]
 8002878:	6bd1      	ldr	r1, [r2, #60]	@ 0x3c
 800287a:	687a      	ldr	r2, [r7, #4]
 800287c:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 800287e:	4311      	orrs	r1, r2
 8002880:	687a      	ldr	r2, [r7, #4]
 8002882:	6c52      	ldr	r2, [r2, #68]	@ 0x44
 8002884:	4311      	orrs	r1, r2
 8002886:	687a      	ldr	r2, [r7, #4]
 8002888:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800288a:	430a      	orrs	r2, r1
 800288c:	431a      	orrs	r2, r3
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	f042 0201 	orr.w	r2, r2, #1
 8002896:	611a      	str	r2, [r3, #16]
 8002898:	e007      	b.n	80028aa <HAL_ADC_Init+0x226>
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	691a      	ldr	r2, [r3, #16]
 80028a0:	687b      	ldr	r3, [r7, #4]
 80028a2:	681b      	ldr	r3, [r3, #0]
 80028a4:	f022 0201 	bic.w	r2, r2, #1
 80028a8:	611a      	str	r2, [r3, #16]
 80028aa:	687b      	ldr	r3, [r7, #4]
 80028ac:	691b      	ldr	r3, [r3, #16]
 80028ae:	2b01      	cmp	r3, #1
 80028b0:	d10c      	bne.n	80028cc <HAL_ADC_Init+0x248>
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028b8:	f023 010f 	bic.w	r1, r3, #15
 80028bc:	687b      	ldr	r3, [r7, #4]
 80028be:	69db      	ldr	r3, [r3, #28]
 80028c0:	1e5a      	subs	r2, r3, #1
 80028c2:	687b      	ldr	r3, [r7, #4]
 80028c4:	681b      	ldr	r3, [r3, #0]
 80028c6:	430a      	orrs	r2, r1
 80028c8:	631a      	str	r2, [r3, #48]	@ 0x30
 80028ca:	e007      	b.n	80028dc <HAL_ADC_Init+0x258>
 80028cc:	687b      	ldr	r3, [r7, #4]
 80028ce:	681b      	ldr	r3, [r3, #0]
 80028d0:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	f022 020f 	bic.w	r2, r2, #15
 80028da:	631a      	str	r2, [r3, #48]	@ 0x30
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80028e0:	f023 0303 	bic.w	r3, r3, #3
 80028e4:	f043 0201 	orr.w	r2, r3, #1
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	655a      	str	r2, [r3, #84]	@ 0x54
 80028ec:	e007      	b.n	80028fe <HAL_ADC_Init+0x27a>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80028f2:	f043 0210 	orr.w	r2, r3, #16
 80028f6:	687b      	ldr	r3, [r7, #4]
 80028f8:	655a      	str	r2, [r3, #84]	@ 0x54
 80028fa:	2301      	movs	r3, #1
 80028fc:	77fb      	strb	r3, [r7, #31]
 80028fe:	7ffb      	ldrb	r3, [r7, #31]
 8002900:	4618      	mov	r0, r3
 8002902:	3724      	adds	r7, #36	@ 0x24
 8002904:	46bd      	mov	sp, r7
 8002906:	bd90      	pop	{r4, r7, pc}
 8002908:	20000000 	.word	0x20000000
 800290c:	053e2d63 	.word	0x053e2d63
 8002910:	50040000 	.word	0x50040000
 8002914:	50040100 	.word	0x50040100
 8002918:	50040200 	.word	0x50040200
 800291c:	50040300 	.word	0x50040300
 8002920:	fff0c007 	.word	0xfff0c007

08002924 <HAL_ADC_Start>:
 8002924:	b580      	push	{r7, lr}
 8002926:	b086      	sub	sp, #24
 8002928:	af00      	add	r7, sp, #0
 800292a:	6078      	str	r0, [r7, #4]
 800292c:	4857      	ldr	r0, [pc, #348]	@ (8002a8c <HAL_ADC_Start+0x168>)
 800292e:	f7ff fdeb 	bl	8002508 <LL_ADC_GetMultimode>
 8002932:	6138      	str	r0, [r7, #16]
 8002934:	687b      	ldr	r3, [r7, #4]
 8002936:	681b      	ldr	r3, [r3, #0]
 8002938:	4618      	mov	r0, r3
 800293a:	f7ff fe7c 	bl	8002636 <LL_ADC_REG_IsConversionOngoing>
 800293e:	4603      	mov	r3, r0
 8002940:	2b00      	cmp	r3, #0
 8002942:	f040 809c 	bne.w	8002a7e <HAL_ADC_Start+0x15a>
 8002946:	687b      	ldr	r3, [r7, #4]
 8002948:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800294c:	2b01      	cmp	r3, #1
 800294e:	d101      	bne.n	8002954 <HAL_ADC_Start+0x30>
 8002950:	2302      	movs	r3, #2
 8002952:	e097      	b.n	8002a84 <HAL_ADC_Start+0x160>
 8002954:	687b      	ldr	r3, [r7, #4]
 8002956:	2201      	movs	r2, #1
 8002958:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800295c:	6878      	ldr	r0, [r7, #4]
 800295e:	f000 fc8d 	bl	800327c <ADC_Enable>
 8002962:	4603      	mov	r3, r0
 8002964:	75fb      	strb	r3, [r7, #23]
 8002966:	7dfb      	ldrb	r3, [r7, #23]
 8002968:	2b00      	cmp	r3, #0
 800296a:	f040 8083 	bne.w	8002a74 <HAL_ADC_Start+0x150>
 800296e:	687b      	ldr	r3, [r7, #4]
 8002970:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002972:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8002976:	f023 0301 	bic.w	r3, r3, #1
 800297a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	655a      	str	r2, [r3, #84]	@ 0x54
 8002982:	687b      	ldr	r3, [r7, #4]
 8002984:	681b      	ldr	r3, [r3, #0]
 8002986:	4a42      	ldr	r2, [pc, #264]	@ (8002a90 <HAL_ADC_Start+0x16c>)
 8002988:	4293      	cmp	r3, r2
 800298a:	d002      	beq.n	8002992 <HAL_ADC_Start+0x6e>
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	e000      	b.n	8002994 <HAL_ADC_Start+0x70>
 8002992:	4b40      	ldr	r3, [pc, #256]	@ (8002a94 <HAL_ADC_Start+0x170>)
 8002994:	687a      	ldr	r2, [r7, #4]
 8002996:	6812      	ldr	r2, [r2, #0]
 8002998:	4293      	cmp	r3, r2
 800299a:	d002      	beq.n	80029a2 <HAL_ADC_Start+0x7e>
 800299c:	693b      	ldr	r3, [r7, #16]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d105      	bne.n	80029ae <HAL_ADC_Start+0x8a>
 80029a2:	687b      	ldr	r3, [r7, #4]
 80029a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80029a6:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 80029aa:	687b      	ldr	r3, [r7, #4]
 80029ac:	655a      	str	r2, [r3, #84]	@ 0x54
 80029ae:	687b      	ldr	r3, [r7, #4]
 80029b0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80029b2:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80029b6:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80029ba:	d106      	bne.n	80029ca <HAL_ADC_Start+0xa6>
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80029c0:	f023 0206 	bic.w	r2, r3, #6
 80029c4:	687b      	ldr	r3, [r7, #4]
 80029c6:	659a      	str	r2, [r3, #88]	@ 0x58
 80029c8:	e002      	b.n	80029d0 <HAL_ADC_Start+0xac>
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	2200      	movs	r2, #0
 80029ce:	659a      	str	r2, [r3, #88]	@ 0x58
 80029d0:	687b      	ldr	r3, [r7, #4]
 80029d2:	681b      	ldr	r3, [r3, #0]
 80029d4:	221c      	movs	r2, #28
 80029d6:	601a      	str	r2, [r3, #0]
 80029d8:	687b      	ldr	r3, [r7, #4]
 80029da:	2200      	movs	r2, #0
 80029dc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80029e0:	687b      	ldr	r3, [r7, #4]
 80029e2:	681b      	ldr	r3, [r3, #0]
 80029e4:	4a2a      	ldr	r2, [pc, #168]	@ (8002a90 <HAL_ADC_Start+0x16c>)
 80029e6:	4293      	cmp	r3, r2
 80029e8:	d002      	beq.n	80029f0 <HAL_ADC_Start+0xcc>
 80029ea:	687b      	ldr	r3, [r7, #4]
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	e000      	b.n	80029f2 <HAL_ADC_Start+0xce>
 80029f0:	4b28      	ldr	r3, [pc, #160]	@ (8002a94 <HAL_ADC_Start+0x170>)
 80029f2:	687a      	ldr	r2, [r7, #4]
 80029f4:	6812      	ldr	r2, [r2, #0]
 80029f6:	4293      	cmp	r3, r2
 80029f8:	d008      	beq.n	8002a0c <HAL_ADC_Start+0xe8>
 80029fa:	693b      	ldr	r3, [r7, #16]
 80029fc:	2b00      	cmp	r3, #0
 80029fe:	d005      	beq.n	8002a0c <HAL_ADC_Start+0xe8>
 8002a00:	693b      	ldr	r3, [r7, #16]
 8002a02:	2b05      	cmp	r3, #5
 8002a04:	d002      	beq.n	8002a0c <HAL_ADC_Start+0xe8>
 8002a06:	693b      	ldr	r3, [r7, #16]
 8002a08:	2b09      	cmp	r3, #9
 8002a0a:	d114      	bne.n	8002a36 <HAL_ADC_Start+0x112>
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	68db      	ldr	r3, [r3, #12]
 8002a12:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a16:	2b00      	cmp	r3, #0
 8002a18:	d007      	beq.n	8002a2a <HAL_ADC_Start+0x106>
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a1e:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002a22:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	681b      	ldr	r3, [r3, #0]
 8002a2e:	4618      	mov	r0, r3
 8002a30:	f7ff fded 	bl	800260e <LL_ADC_REG_StartConversion>
 8002a34:	e025      	b.n	8002a82 <HAL_ADC_Start+0x15e>
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a3a:	f443 1280 	orr.w	r2, r3, #1048576	@ 0x100000
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	4a12      	ldr	r2, [pc, #72]	@ (8002a90 <HAL_ADC_Start+0x16c>)
 8002a48:	4293      	cmp	r3, r2
 8002a4a:	d002      	beq.n	8002a52 <HAL_ADC_Start+0x12e>
 8002a4c:	687b      	ldr	r3, [r7, #4]
 8002a4e:	681b      	ldr	r3, [r3, #0]
 8002a50:	e000      	b.n	8002a54 <HAL_ADC_Start+0x130>
 8002a52:	4b10      	ldr	r3, [pc, #64]	@ (8002a94 <HAL_ADC_Start+0x170>)
 8002a54:	60fb      	str	r3, [r7, #12]
 8002a56:	68fb      	ldr	r3, [r7, #12]
 8002a58:	68db      	ldr	r3, [r3, #12]
 8002a5a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002a5e:	2b00      	cmp	r3, #0
 8002a60:	d00f      	beq.n	8002a82 <HAL_ADC_Start+0x15e>
 8002a62:	687b      	ldr	r3, [r7, #4]
 8002a64:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8002a66:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002a6a:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	655a      	str	r2, [r3, #84]	@ 0x54
 8002a72:	e006      	b.n	8002a82 <HAL_ADC_Start+0x15e>
 8002a74:	687b      	ldr	r3, [r7, #4]
 8002a76:	2200      	movs	r2, #0
 8002a78:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002a7c:	e001      	b.n	8002a82 <HAL_ADC_Start+0x15e>
 8002a7e:	2302      	movs	r3, #2
 8002a80:	75fb      	strb	r3, [r7, #23]
 8002a82:	7dfb      	ldrb	r3, [r7, #23]
 8002a84:	4618      	mov	r0, r3
 8002a86:	3718      	adds	r7, #24
 8002a88:	46bd      	mov	sp, r7
 8002a8a:	bd80      	pop	{r7, pc}
 8002a8c:	50040300 	.word	0x50040300
 8002a90:	50040100 	.word	0x50040100
 8002a94:	50040000 	.word	0x50040000

08002a98 <HAL_ADC_ConfigChannel>:
 8002a98:	b580      	push	{r7, lr}
 8002a9a:	b0b6      	sub	sp, #216	@ 0xd8
 8002a9c:	af00      	add	r7, sp, #0
 8002a9e:	6078      	str	r0, [r7, #4]
 8002aa0:	6039      	str	r1, [r7, #0]
 8002aa2:	2300      	movs	r3, #0
 8002aa4:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 8002aa8:	2300      	movs	r3, #0
 8002aaa:	60bb      	str	r3, [r7, #8]
 8002aac:	687b      	ldr	r3, [r7, #4]
 8002aae:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8002ab2:	2b01      	cmp	r3, #1
 8002ab4:	d101      	bne.n	8002aba <HAL_ADC_ConfigChannel+0x22>
 8002ab6:	2302      	movs	r3, #2
 8002ab8:	e3c9      	b.n	800324e <HAL_ADC_ConfigChannel+0x7b6>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	2201      	movs	r2, #1
 8002abe:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8002ac2:	687b      	ldr	r3, [r7, #4]
 8002ac4:	681b      	ldr	r3, [r3, #0]
 8002ac6:	4618      	mov	r0, r3
 8002ac8:	f7ff fdb5 	bl	8002636 <LL_ADC_REG_IsConversionOngoing>
 8002acc:	4603      	mov	r3, r0
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	f040 83aa 	bne.w	8003228 <HAL_ADC_ConfigChannel+0x790>
 8002ad4:	683b      	ldr	r3, [r7, #0]
 8002ad6:	685b      	ldr	r3, [r3, #4]
 8002ad8:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002adc:	683b      	ldr	r3, [r7, #0]
 8002ade:	685b      	ldr	r3, [r3, #4]
 8002ae0:	2b05      	cmp	r3, #5
 8002ae2:	d824      	bhi.n	8002b2e <HAL_ADC_ConfigChannel+0x96>
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	685b      	ldr	r3, [r3, #4]
 8002ae8:	3b02      	subs	r3, #2
 8002aea:	2b03      	cmp	r3, #3
 8002aec:	d81b      	bhi.n	8002b26 <HAL_ADC_ConfigChannel+0x8e>
 8002aee:	a201      	add	r2, pc, #4	@ (adr r2, 8002af4 <HAL_ADC_ConfigChannel+0x5c>)
 8002af0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002af4:	08002b05 	.word	0x08002b05
 8002af8:	08002b0d 	.word	0x08002b0d
 8002afc:	08002b15 	.word	0x08002b15
 8002b00:	08002b1d 	.word	0x08002b1d
 8002b04:	230c      	movs	r3, #12
 8002b06:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002b0a:	e010      	b.n	8002b2e <HAL_ADC_ConfigChannel+0x96>
 8002b0c:	2312      	movs	r3, #18
 8002b0e:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002b12:	e00c      	b.n	8002b2e <HAL_ADC_ConfigChannel+0x96>
 8002b14:	2318      	movs	r3, #24
 8002b16:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002b1a:	e008      	b.n	8002b2e <HAL_ADC_ConfigChannel+0x96>
 8002b1c:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002b20:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002b24:	e003      	b.n	8002b2e <HAL_ADC_ConfigChannel+0x96>
 8002b26:	2306      	movs	r3, #6
 8002b28:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8002b2c:	bf00      	nop
 8002b2e:	687b      	ldr	r3, [r7, #4]
 8002b30:	6818      	ldr	r0, [r3, #0]
 8002b32:	683b      	ldr	r3, [r7, #0]
 8002b34:	681b      	ldr	r3, [r3, #0]
 8002b36:	461a      	mov	r2, r3
 8002b38:	f8d7 10d0 	ldr.w	r1, [r7, #208]	@ 0xd0
 8002b3c:	f7ff fc69 	bl	8002412 <LL_ADC_REG_SetSequencerRanks>
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	681b      	ldr	r3, [r3, #0]
 8002b44:	4618      	mov	r0, r3
 8002b46:	f7ff fd76 	bl	8002636 <LL_ADC_REG_IsConversionOngoing>
 8002b4a:	f8c7 00cc 	str.w	r0, [r7, #204]	@ 0xcc
 8002b4e:	687b      	ldr	r3, [r7, #4]
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	4618      	mov	r0, r3
 8002b54:	f7ff fd82 	bl	800265c <LL_ADC_INJ_IsConversionOngoing>
 8002b58:	f8c7 00c8 	str.w	r0, [r7, #200]	@ 0xc8
 8002b5c:	f8d7 30cc 	ldr.w	r3, [r7, #204]	@ 0xcc
 8002b60:	2b00      	cmp	r3, #0
 8002b62:	f040 81a4 	bne.w	8002eae <HAL_ADC_ConfigChannel+0x416>
 8002b66:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8002b6a:	2b00      	cmp	r3, #0
 8002b6c:	f040 819f 	bne.w	8002eae <HAL_ADC_ConfigChannel+0x416>
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	6818      	ldr	r0, [r3, #0]
 8002b74:	683b      	ldr	r3, [r7, #0]
 8002b76:	6819      	ldr	r1, [r3, #0]
 8002b78:	683b      	ldr	r3, [r7, #0]
 8002b7a:	689b      	ldr	r3, [r3, #8]
 8002b7c:	461a      	mov	r2, r3
 8002b7e:	f7ff fc74 	bl	800246a <LL_ADC_SetChannelSamplingTime>
 8002b82:	683b      	ldr	r3, [r7, #0]
 8002b84:	695a      	ldr	r2, [r3, #20]
 8002b86:	687b      	ldr	r3, [r7, #4]
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	68db      	ldr	r3, [r3, #12]
 8002b8c:	08db      	lsrs	r3, r3, #3
 8002b8e:	f003 0303 	and.w	r3, r3, #3
 8002b92:	005b      	lsls	r3, r3, #1
 8002b94:	fa02 f303 	lsl.w	r3, r2, r3
 8002b98:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8002b9c:	683b      	ldr	r3, [r7, #0]
 8002b9e:	691b      	ldr	r3, [r3, #16]
 8002ba0:	2b04      	cmp	r3, #4
 8002ba2:	d00a      	beq.n	8002bba <HAL_ADC_ConfigChannel+0x122>
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	6818      	ldr	r0, [r3, #0]
 8002ba8:	683b      	ldr	r3, [r7, #0]
 8002baa:	6919      	ldr	r1, [r3, #16]
 8002bac:	683b      	ldr	r3, [r7, #0]
 8002bae:	681a      	ldr	r2, [r3, #0]
 8002bb0:	f8d7 30c4 	ldr.w	r3, [r7, #196]	@ 0xc4
 8002bb4:	f7ff fbd8 	bl	8002368 <LL_ADC_SetOffset>
 8002bb8:	e179      	b.n	8002eae <HAL_ADC_ConfigChannel+0x416>
 8002bba:	687b      	ldr	r3, [r7, #4]
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	2100      	movs	r1, #0
 8002bc0:	4618      	mov	r0, r3
 8002bc2:	f7ff fbf5 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002bcc:	2b00      	cmp	r3, #0
 8002bce:	d10a      	bne.n	8002be6 <HAL_ADC_ConfigChannel+0x14e>
 8002bd0:	687b      	ldr	r3, [r7, #4]
 8002bd2:	681b      	ldr	r3, [r3, #0]
 8002bd4:	2100      	movs	r1, #0
 8002bd6:	4618      	mov	r0, r3
 8002bd8:	f7ff fbea 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002bdc:	4603      	mov	r3, r0
 8002bde:	0e9b      	lsrs	r3, r3, #26
 8002be0:	f003 021f 	and.w	r2, r3, #31
 8002be4:	e01e      	b.n	8002c24 <HAL_ADC_ConfigChannel+0x18c>
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	2100      	movs	r1, #0
 8002bec:	4618      	mov	r0, r3
 8002bee:	f7ff fbdf 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002bf2:	4603      	mov	r3, r0
 8002bf4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8002bf8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8002bfc:	fa93 f3a3 	rbit	r3, r3
 8002c00:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8002c04:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 8002c08:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 8002c0c:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002c10:	2b00      	cmp	r3, #0
 8002c12:	d101      	bne.n	8002c18 <HAL_ADC_ConfigChannel+0x180>
 8002c14:	2320      	movs	r3, #32
 8002c16:	e004      	b.n	8002c22 <HAL_ADC_ConfigChannel+0x18a>
 8002c18:	f8d7 30bc 	ldr.w	r3, [r7, #188]	@ 0xbc
 8002c1c:	fab3 f383 	clz	r3, r3
 8002c20:	b2db      	uxtb	r3, r3
 8002c22:	461a      	mov	r2, r3
 8002c24:	683b      	ldr	r3, [r7, #0]
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c2c:	2b00      	cmp	r3, #0
 8002c2e:	d105      	bne.n	8002c3c <HAL_ADC_ConfigChannel+0x1a4>
 8002c30:	683b      	ldr	r3, [r7, #0]
 8002c32:	681b      	ldr	r3, [r3, #0]
 8002c34:	0e9b      	lsrs	r3, r3, #26
 8002c36:	f003 031f 	and.w	r3, r3, #31
 8002c3a:	e018      	b.n	8002c6e <HAL_ADC_ConfigChannel+0x1d6>
 8002c3c:	683b      	ldr	r3, [r7, #0]
 8002c3e:	681b      	ldr	r3, [r3, #0]
 8002c40:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8002c44:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8002c48:	fa93 f3a3 	rbit	r3, r3
 8002c4c:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8002c50:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8002c54:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8002c58:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d101      	bne.n	8002c64 <HAL_ADC_ConfigChannel+0x1cc>
 8002c60:	2320      	movs	r3, #32
 8002c62:	e004      	b.n	8002c6e <HAL_ADC_ConfigChannel+0x1d6>
 8002c64:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8002c68:	fab3 f383 	clz	r3, r3
 8002c6c:	b2db      	uxtb	r3, r3
 8002c6e:	429a      	cmp	r2, r3
 8002c70:	d106      	bne.n	8002c80 <HAL_ADC_ConfigChannel+0x1e8>
 8002c72:	687b      	ldr	r3, [r7, #4]
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	2200      	movs	r2, #0
 8002c78:	2100      	movs	r1, #0
 8002c7a:	4618      	mov	r0, r3
 8002c7c:	f7ff fbae 	bl	80023dc <LL_ADC_SetOffsetState>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	2101      	movs	r1, #1
 8002c86:	4618      	mov	r0, r3
 8002c88:	f7ff fb92 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002c8c:	4603      	mov	r3, r0
 8002c8e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002c92:	2b00      	cmp	r3, #0
 8002c94:	d10a      	bne.n	8002cac <HAL_ADC_ConfigChannel+0x214>
 8002c96:	687b      	ldr	r3, [r7, #4]
 8002c98:	681b      	ldr	r3, [r3, #0]
 8002c9a:	2101      	movs	r1, #1
 8002c9c:	4618      	mov	r0, r3
 8002c9e:	f7ff fb87 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002ca2:	4603      	mov	r3, r0
 8002ca4:	0e9b      	lsrs	r3, r3, #26
 8002ca6:	f003 021f 	and.w	r2, r3, #31
 8002caa:	e01e      	b.n	8002cea <HAL_ADC_ConfigChannel+0x252>
 8002cac:	687b      	ldr	r3, [r7, #4]
 8002cae:	681b      	ldr	r3, [r3, #0]
 8002cb0:	2101      	movs	r1, #1
 8002cb2:	4618      	mov	r0, r3
 8002cb4:	f7ff fb7c 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002cb8:	4603      	mov	r3, r0
 8002cba:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8002cbe:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 8002cc2:	fa93 f3a3 	rbit	r3, r3
 8002cc6:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8002cca:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8002cce:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8002cd2:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002cd6:	2b00      	cmp	r3, #0
 8002cd8:	d101      	bne.n	8002cde <HAL_ADC_ConfigChannel+0x246>
 8002cda:	2320      	movs	r3, #32
 8002cdc:	e004      	b.n	8002ce8 <HAL_ADC_ConfigChannel+0x250>
 8002cde:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8002ce2:	fab3 f383 	clz	r3, r3
 8002ce6:	b2db      	uxtb	r3, r3
 8002ce8:	461a      	mov	r2, r3
 8002cea:	683b      	ldr	r3, [r7, #0]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002cf2:	2b00      	cmp	r3, #0
 8002cf4:	d105      	bne.n	8002d02 <HAL_ADC_ConfigChannel+0x26a>
 8002cf6:	683b      	ldr	r3, [r7, #0]
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	0e9b      	lsrs	r3, r3, #26
 8002cfc:	f003 031f 	and.w	r3, r3, #31
 8002d00:	e018      	b.n	8002d34 <HAL_ADC_ConfigChannel+0x29c>
 8002d02:	683b      	ldr	r3, [r7, #0]
 8002d04:	681b      	ldr	r3, [r3, #0]
 8002d06:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8002d0a:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 8002d0e:	fa93 f3a3 	rbit	r3, r3
 8002d12:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8002d16:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8002d1a:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8002d1e:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002d22:	2b00      	cmp	r3, #0
 8002d24:	d101      	bne.n	8002d2a <HAL_ADC_ConfigChannel+0x292>
 8002d26:	2320      	movs	r3, #32
 8002d28:	e004      	b.n	8002d34 <HAL_ADC_ConfigChannel+0x29c>
 8002d2a:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8002d2e:	fab3 f383 	clz	r3, r3
 8002d32:	b2db      	uxtb	r3, r3
 8002d34:	429a      	cmp	r2, r3
 8002d36:	d106      	bne.n	8002d46 <HAL_ADC_ConfigChannel+0x2ae>
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	681b      	ldr	r3, [r3, #0]
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	2101      	movs	r1, #1
 8002d40:	4618      	mov	r0, r3
 8002d42:	f7ff fb4b 	bl	80023dc <LL_ADC_SetOffsetState>
 8002d46:	687b      	ldr	r3, [r7, #4]
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	2102      	movs	r1, #2
 8002d4c:	4618      	mov	r0, r3
 8002d4e:	f7ff fb2f 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002d52:	4603      	mov	r3, r0
 8002d54:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	d10a      	bne.n	8002d72 <HAL_ADC_ConfigChannel+0x2da>
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	681b      	ldr	r3, [r3, #0]
 8002d60:	2102      	movs	r1, #2
 8002d62:	4618      	mov	r0, r3
 8002d64:	f7ff fb24 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002d68:	4603      	mov	r3, r0
 8002d6a:	0e9b      	lsrs	r3, r3, #26
 8002d6c:	f003 021f 	and.w	r2, r3, #31
 8002d70:	e01e      	b.n	8002db0 <HAL_ADC_ConfigChannel+0x318>
 8002d72:	687b      	ldr	r3, [r7, #4]
 8002d74:	681b      	ldr	r3, [r3, #0]
 8002d76:	2102      	movs	r1, #2
 8002d78:	4618      	mov	r0, r3
 8002d7a:	f7ff fb19 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002d7e:	4603      	mov	r3, r0
 8002d80:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8002d84:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8002d88:	fa93 f3a3 	rbit	r3, r3
 8002d8c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8002d90:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8002d94:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8002d98:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002d9c:	2b00      	cmp	r3, #0
 8002d9e:	d101      	bne.n	8002da4 <HAL_ADC_ConfigChannel+0x30c>
 8002da0:	2320      	movs	r3, #32
 8002da2:	e004      	b.n	8002dae <HAL_ADC_ConfigChannel+0x316>
 8002da4:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8002da8:	fab3 f383 	clz	r3, r3
 8002dac:	b2db      	uxtb	r3, r3
 8002dae:	461a      	mov	r2, r3
 8002db0:	683b      	ldr	r3, [r7, #0]
 8002db2:	681b      	ldr	r3, [r3, #0]
 8002db4:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d105      	bne.n	8002dc8 <HAL_ADC_ConfigChannel+0x330>
 8002dbc:	683b      	ldr	r3, [r7, #0]
 8002dbe:	681b      	ldr	r3, [r3, #0]
 8002dc0:	0e9b      	lsrs	r3, r3, #26
 8002dc2:	f003 031f 	and.w	r3, r3, #31
 8002dc6:	e014      	b.n	8002df2 <HAL_ADC_ConfigChannel+0x35a>
 8002dc8:	683b      	ldr	r3, [r7, #0]
 8002dca:	681b      	ldr	r3, [r3, #0]
 8002dcc:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8002dce:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 8002dd0:	fa93 f3a3 	rbit	r3, r3
 8002dd4:	67bb      	str	r3, [r7, #120]	@ 0x78
 8002dd6:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8002dd8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8002ddc:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d101      	bne.n	8002de8 <HAL_ADC_ConfigChannel+0x350>
 8002de4:	2320      	movs	r3, #32
 8002de6:	e004      	b.n	8002df2 <HAL_ADC_ConfigChannel+0x35a>
 8002de8:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8002dec:	fab3 f383 	clz	r3, r3
 8002df0:	b2db      	uxtb	r3, r3
 8002df2:	429a      	cmp	r2, r3
 8002df4:	d106      	bne.n	8002e04 <HAL_ADC_ConfigChannel+0x36c>
 8002df6:	687b      	ldr	r3, [r7, #4]
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	2200      	movs	r2, #0
 8002dfc:	2102      	movs	r1, #2
 8002dfe:	4618      	mov	r0, r3
 8002e00:	f7ff faec 	bl	80023dc <LL_ADC_SetOffsetState>
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	681b      	ldr	r3, [r3, #0]
 8002e08:	2103      	movs	r1, #3
 8002e0a:	4618      	mov	r0, r3
 8002e0c:	f7ff fad0 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002e10:	4603      	mov	r3, r0
 8002e12:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002e16:	2b00      	cmp	r3, #0
 8002e18:	d10a      	bne.n	8002e30 <HAL_ADC_ConfigChannel+0x398>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	2103      	movs	r1, #3
 8002e20:	4618      	mov	r0, r3
 8002e22:	f7ff fac5 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002e26:	4603      	mov	r3, r0
 8002e28:	0e9b      	lsrs	r3, r3, #26
 8002e2a:	f003 021f 	and.w	r2, r3, #31
 8002e2e:	e017      	b.n	8002e60 <HAL_ADC_ConfigChannel+0x3c8>
 8002e30:	687b      	ldr	r3, [r7, #4]
 8002e32:	681b      	ldr	r3, [r3, #0]
 8002e34:	2103      	movs	r1, #3
 8002e36:	4618      	mov	r0, r3
 8002e38:	f7ff faba 	bl	80023b0 <LL_ADC_GetOffsetChannel>
 8002e3c:	4603      	mov	r3, r0
 8002e3e:	673b      	str	r3, [r7, #112]	@ 0x70
 8002e40:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8002e42:	fa93 f3a3 	rbit	r3, r3
 8002e46:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8002e48:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8002e4a:	677b      	str	r3, [r7, #116]	@ 0x74
 8002e4c:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8002e4e:	2b00      	cmp	r3, #0
 8002e50:	d101      	bne.n	8002e56 <HAL_ADC_ConfigChannel+0x3be>
 8002e52:	2320      	movs	r3, #32
 8002e54:	e003      	b.n	8002e5e <HAL_ADC_ConfigChannel+0x3c6>
 8002e56:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8002e58:	fab3 f383 	clz	r3, r3
 8002e5c:	b2db      	uxtb	r3, r3
 8002e5e:	461a      	mov	r2, r3
 8002e60:	683b      	ldr	r3, [r7, #0]
 8002e62:	681b      	ldr	r3, [r3, #0]
 8002e64:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	d105      	bne.n	8002e78 <HAL_ADC_ConfigChannel+0x3e0>
 8002e6c:	683b      	ldr	r3, [r7, #0]
 8002e6e:	681b      	ldr	r3, [r3, #0]
 8002e70:	0e9b      	lsrs	r3, r3, #26
 8002e72:	f003 031f 	and.w	r3, r3, #31
 8002e76:	e011      	b.n	8002e9c <HAL_ADC_ConfigChannel+0x404>
 8002e78:	683b      	ldr	r3, [r7, #0]
 8002e7a:	681b      	ldr	r3, [r3, #0]
 8002e7c:	667b      	str	r3, [r7, #100]	@ 0x64
 8002e7e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8002e80:	fa93 f3a3 	rbit	r3, r3
 8002e84:	663b      	str	r3, [r7, #96]	@ 0x60
 8002e86:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8002e88:	66bb      	str	r3, [r7, #104]	@ 0x68
 8002e8a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8002e8c:	2b00      	cmp	r3, #0
 8002e8e:	d101      	bne.n	8002e94 <HAL_ADC_ConfigChannel+0x3fc>
 8002e90:	2320      	movs	r3, #32
 8002e92:	e003      	b.n	8002e9c <HAL_ADC_ConfigChannel+0x404>
 8002e94:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8002e96:	fab3 f383 	clz	r3, r3
 8002e9a:	b2db      	uxtb	r3, r3
 8002e9c:	429a      	cmp	r2, r3
 8002e9e:	d106      	bne.n	8002eae <HAL_ADC_ConfigChannel+0x416>
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	681b      	ldr	r3, [r3, #0]
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	2103      	movs	r1, #3
 8002ea8:	4618      	mov	r0, r3
 8002eaa:	f7ff fa97 	bl	80023dc <LL_ADC_SetOffsetState>
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	681b      	ldr	r3, [r3, #0]
 8002eb2:	4618      	mov	r0, r3
 8002eb4:	f7ff fb98 	bl	80025e8 <LL_ADC_IsEnabled>
 8002eb8:	4603      	mov	r3, r0
 8002eba:	2b00      	cmp	r3, #0
 8002ebc:	f040 8140 	bne.w	8003140 <HAL_ADC_ConfigChannel+0x6a8>
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	6818      	ldr	r0, [r3, #0]
 8002ec4:	683b      	ldr	r3, [r7, #0]
 8002ec6:	6819      	ldr	r1, [r3, #0]
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	68db      	ldr	r3, [r3, #12]
 8002ecc:	461a      	mov	r2, r3
 8002ece:	f7ff faf7 	bl	80024c0 <LL_ADC_SetChannelSingleDiff>
 8002ed2:	683b      	ldr	r3, [r7, #0]
 8002ed4:	68db      	ldr	r3, [r3, #12]
 8002ed6:	4a8f      	ldr	r2, [pc, #572]	@ (8003114 <HAL_ADC_ConfigChannel+0x67c>)
 8002ed8:	4293      	cmp	r3, r2
 8002eda:	f040 8131 	bne.w	8003140 <HAL_ADC_ConfigChannel+0x6a8>
 8002ede:	687b      	ldr	r3, [r7, #4]
 8002ee0:	6818      	ldr	r0, [r3, #0]
 8002ee2:	683b      	ldr	r3, [r7, #0]
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002eea:	2b00      	cmp	r3, #0
 8002eec:	d10b      	bne.n	8002f06 <HAL_ADC_ConfigChannel+0x46e>
 8002eee:	683b      	ldr	r3, [r7, #0]
 8002ef0:	681b      	ldr	r3, [r3, #0]
 8002ef2:	0e9b      	lsrs	r3, r3, #26
 8002ef4:	3301      	adds	r3, #1
 8002ef6:	f003 031f 	and.w	r3, r3, #31
 8002efa:	2b09      	cmp	r3, #9
 8002efc:	bf94      	ite	ls
 8002efe:	2301      	movls	r3, #1
 8002f00:	2300      	movhi	r3, #0
 8002f02:	b2db      	uxtb	r3, r3
 8002f04:	e019      	b.n	8002f3a <HAL_ADC_ConfigChannel+0x4a2>
 8002f06:	683b      	ldr	r3, [r7, #0]
 8002f08:	681b      	ldr	r3, [r3, #0]
 8002f0a:	65bb      	str	r3, [r7, #88]	@ 0x58
 8002f0c:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 8002f0e:	fa93 f3a3 	rbit	r3, r3
 8002f12:	657b      	str	r3, [r7, #84]	@ 0x54
 8002f14:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8002f16:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8002f18:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002f1a:	2b00      	cmp	r3, #0
 8002f1c:	d101      	bne.n	8002f22 <HAL_ADC_ConfigChannel+0x48a>
 8002f1e:	2320      	movs	r3, #32
 8002f20:	e003      	b.n	8002f2a <HAL_ADC_ConfigChannel+0x492>
 8002f22:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8002f24:	fab3 f383 	clz	r3, r3
 8002f28:	b2db      	uxtb	r3, r3
 8002f2a:	3301      	adds	r3, #1
 8002f2c:	f003 031f 	and.w	r3, r3, #31
 8002f30:	2b09      	cmp	r3, #9
 8002f32:	bf94      	ite	ls
 8002f34:	2301      	movls	r3, #1
 8002f36:	2300      	movhi	r3, #0
 8002f38:	b2db      	uxtb	r3, r3
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d079      	beq.n	8003032 <HAL_ADC_ConfigChannel+0x59a>
 8002f3e:	683b      	ldr	r3, [r7, #0]
 8002f40:	681b      	ldr	r3, [r3, #0]
 8002f42:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f46:	2b00      	cmp	r3, #0
 8002f48:	d107      	bne.n	8002f5a <HAL_ADC_ConfigChannel+0x4c2>
 8002f4a:	683b      	ldr	r3, [r7, #0]
 8002f4c:	681b      	ldr	r3, [r3, #0]
 8002f4e:	0e9b      	lsrs	r3, r3, #26
 8002f50:	3301      	adds	r3, #1
 8002f52:	069b      	lsls	r3, r3, #26
 8002f54:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002f58:	e015      	b.n	8002f86 <HAL_ADC_ConfigChannel+0x4ee>
 8002f5a:	683b      	ldr	r3, [r7, #0]
 8002f5c:	681b      	ldr	r3, [r3, #0]
 8002f5e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8002f60:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8002f62:	fa93 f3a3 	rbit	r3, r3
 8002f66:	64bb      	str	r3, [r7, #72]	@ 0x48
 8002f68:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8002f6a:	653b      	str	r3, [r7, #80]	@ 0x50
 8002f6c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	d101      	bne.n	8002f76 <HAL_ADC_ConfigChannel+0x4de>
 8002f72:	2320      	movs	r3, #32
 8002f74:	e003      	b.n	8002f7e <HAL_ADC_ConfigChannel+0x4e6>
 8002f76:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8002f78:	fab3 f383 	clz	r3, r3
 8002f7c:	b2db      	uxtb	r3, r3
 8002f7e:	3301      	adds	r3, #1
 8002f80:	069b      	lsls	r3, r3, #26
 8002f82:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 8002f86:	683b      	ldr	r3, [r7, #0]
 8002f88:	681b      	ldr	r3, [r3, #0]
 8002f8a:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002f8e:	2b00      	cmp	r3, #0
 8002f90:	d109      	bne.n	8002fa6 <HAL_ADC_ConfigChannel+0x50e>
 8002f92:	683b      	ldr	r3, [r7, #0]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	0e9b      	lsrs	r3, r3, #26
 8002f98:	3301      	adds	r3, #1
 8002f9a:	f003 031f 	and.w	r3, r3, #31
 8002f9e:	2101      	movs	r1, #1
 8002fa0:	fa01 f303 	lsl.w	r3, r1, r3
 8002fa4:	e017      	b.n	8002fd6 <HAL_ADC_ConfigChannel+0x53e>
 8002fa6:	683b      	ldr	r3, [r7, #0]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	643b      	str	r3, [r7, #64]	@ 0x40
 8002fac:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8002fae:	fa93 f3a3 	rbit	r3, r3
 8002fb2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8002fb4:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8002fb6:	647b      	str	r3, [r7, #68]	@ 0x44
 8002fb8:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d101      	bne.n	8002fc2 <HAL_ADC_ConfigChannel+0x52a>
 8002fbe:	2320      	movs	r3, #32
 8002fc0:	e003      	b.n	8002fca <HAL_ADC_ConfigChannel+0x532>
 8002fc2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8002fc4:	fab3 f383 	clz	r3, r3
 8002fc8:	b2db      	uxtb	r3, r3
 8002fca:	3301      	adds	r3, #1
 8002fcc:	f003 031f 	and.w	r3, r3, #31
 8002fd0:	2101      	movs	r1, #1
 8002fd2:	fa01 f303 	lsl.w	r3, r1, r3
 8002fd6:	ea42 0103 	orr.w	r1, r2, r3
 8002fda:	683b      	ldr	r3, [r7, #0]
 8002fdc:	681b      	ldr	r3, [r3, #0]
 8002fde:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8002fe2:	2b00      	cmp	r3, #0
 8002fe4:	d10a      	bne.n	8002ffc <HAL_ADC_ConfigChannel+0x564>
 8002fe6:	683b      	ldr	r3, [r7, #0]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	0e9b      	lsrs	r3, r3, #26
 8002fec:	3301      	adds	r3, #1
 8002fee:	f003 021f 	and.w	r2, r3, #31
 8002ff2:	4613      	mov	r3, r2
 8002ff4:	005b      	lsls	r3, r3, #1
 8002ff6:	4413      	add	r3, r2
 8002ff8:	051b      	lsls	r3, r3, #20
 8002ffa:	e018      	b.n	800302e <HAL_ADC_ConfigChannel+0x596>
 8002ffc:	683b      	ldr	r3, [r7, #0]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	637b      	str	r3, [r7, #52]	@ 0x34
 8003002:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8003004:	fa93 f3a3 	rbit	r3, r3
 8003008:	633b      	str	r3, [r7, #48]	@ 0x30
 800300a:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800300c:	63bb      	str	r3, [r7, #56]	@ 0x38
 800300e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003010:	2b00      	cmp	r3, #0
 8003012:	d101      	bne.n	8003018 <HAL_ADC_ConfigChannel+0x580>
 8003014:	2320      	movs	r3, #32
 8003016:	e003      	b.n	8003020 <HAL_ADC_ConfigChannel+0x588>
 8003018:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800301a:	fab3 f383 	clz	r3, r3
 800301e:	b2db      	uxtb	r3, r3
 8003020:	3301      	adds	r3, #1
 8003022:	f003 021f 	and.w	r2, r3, #31
 8003026:	4613      	mov	r3, r2
 8003028:	005b      	lsls	r3, r3, #1
 800302a:	4413      	add	r3, r2
 800302c:	051b      	lsls	r3, r3, #20
 800302e:	430b      	orrs	r3, r1
 8003030:	e081      	b.n	8003136 <HAL_ADC_ConfigChannel+0x69e>
 8003032:	683b      	ldr	r3, [r7, #0]
 8003034:	681b      	ldr	r3, [r3, #0]
 8003036:	f3c3 0312 	ubfx	r3, r3, #0, #19
 800303a:	2b00      	cmp	r3, #0
 800303c:	d107      	bne.n	800304e <HAL_ADC_ConfigChannel+0x5b6>
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	0e9b      	lsrs	r3, r3, #26
 8003044:	3301      	adds	r3, #1
 8003046:	069b      	lsls	r3, r3, #26
 8003048:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800304c:	e015      	b.n	800307a <HAL_ADC_ConfigChannel+0x5e2>
 800304e:	683b      	ldr	r3, [r7, #0]
 8003050:	681b      	ldr	r3, [r3, #0]
 8003052:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003054:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003056:	fa93 f3a3 	rbit	r3, r3
 800305a:	627b      	str	r3, [r7, #36]	@ 0x24
 800305c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800305e:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8003060:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8003062:	2b00      	cmp	r3, #0
 8003064:	d101      	bne.n	800306a <HAL_ADC_ConfigChannel+0x5d2>
 8003066:	2320      	movs	r3, #32
 8003068:	e003      	b.n	8003072 <HAL_ADC_ConfigChannel+0x5da>
 800306a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800306c:	fab3 f383 	clz	r3, r3
 8003070:	b2db      	uxtb	r3, r3
 8003072:	3301      	adds	r3, #1
 8003074:	069b      	lsls	r3, r3, #26
 8003076:	f003 42f8 	and.w	r2, r3, #2080374784	@ 0x7c000000
 800307a:	683b      	ldr	r3, [r7, #0]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	f3c3 0312 	ubfx	r3, r3, #0, #19
 8003082:	2b00      	cmp	r3, #0
 8003084:	d109      	bne.n	800309a <HAL_ADC_ConfigChannel+0x602>
 8003086:	683b      	ldr	r3, [r7, #0]
 8003088:	681b      	ldr	r3, [r3, #0]
 800308a:	0e9b      	lsrs	r3, r3, #26
 800308c:	3301      	adds	r3, #1
 800308e:	f003 031f 	and.w	r3, r3, #31
 8003092:	2101      	movs	r1, #1
 8003094:	fa01 f303 	lsl.w	r3, r1, r3
 8003098:	e017      	b.n	80030ca <HAL_ADC_ConfigChannel+0x632>
 800309a:	683b      	ldr	r3, [r7, #0]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	61fb      	str	r3, [r7, #28]
 80030a0:	69fb      	ldr	r3, [r7, #28]
 80030a2:	fa93 f3a3 	rbit	r3, r3
 80030a6:	61bb      	str	r3, [r7, #24]
 80030a8:	69bb      	ldr	r3, [r7, #24]
 80030aa:	623b      	str	r3, [r7, #32]
 80030ac:	6a3b      	ldr	r3, [r7, #32]
 80030ae:	2b00      	cmp	r3, #0
 80030b0:	d101      	bne.n	80030b6 <HAL_ADC_ConfigChannel+0x61e>
 80030b2:	2320      	movs	r3, #32
 80030b4:	e003      	b.n	80030be <HAL_ADC_ConfigChannel+0x626>
 80030b6:	6a3b      	ldr	r3, [r7, #32]
 80030b8:	fab3 f383 	clz	r3, r3
 80030bc:	b2db      	uxtb	r3, r3
 80030be:	3301      	adds	r3, #1
 80030c0:	f003 031f 	and.w	r3, r3, #31
 80030c4:	2101      	movs	r1, #1
 80030c6:	fa01 f303 	lsl.w	r3, r1, r3
 80030ca:	ea42 0103 	orr.w	r1, r2, r3
 80030ce:	683b      	ldr	r3, [r7, #0]
 80030d0:	681b      	ldr	r3, [r3, #0]
 80030d2:	f3c3 0312 	ubfx	r3, r3, #0, #19
 80030d6:	2b00      	cmp	r3, #0
 80030d8:	d10d      	bne.n	80030f6 <HAL_ADC_ConfigChannel+0x65e>
 80030da:	683b      	ldr	r3, [r7, #0]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	0e9b      	lsrs	r3, r3, #26
 80030e0:	3301      	adds	r3, #1
 80030e2:	f003 021f 	and.w	r2, r3, #31
 80030e6:	4613      	mov	r3, r2
 80030e8:	005b      	lsls	r3, r3, #1
 80030ea:	4413      	add	r3, r2
 80030ec:	3b1e      	subs	r3, #30
 80030ee:	051b      	lsls	r3, r3, #20
 80030f0:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 80030f4:	e01e      	b.n	8003134 <HAL_ADC_ConfigChannel+0x69c>
 80030f6:	683b      	ldr	r3, [r7, #0]
 80030f8:	681b      	ldr	r3, [r3, #0]
 80030fa:	613b      	str	r3, [r7, #16]
 80030fc:	693b      	ldr	r3, [r7, #16]
 80030fe:	fa93 f3a3 	rbit	r3, r3
 8003102:	60fb      	str	r3, [r7, #12]
 8003104:	68fb      	ldr	r3, [r7, #12]
 8003106:	617b      	str	r3, [r7, #20]
 8003108:	697b      	ldr	r3, [r7, #20]
 800310a:	2b00      	cmp	r3, #0
 800310c:	d104      	bne.n	8003118 <HAL_ADC_ConfigChannel+0x680>
 800310e:	2320      	movs	r3, #32
 8003110:	e006      	b.n	8003120 <HAL_ADC_ConfigChannel+0x688>
 8003112:	bf00      	nop
 8003114:	407f0000 	.word	0x407f0000
 8003118:	697b      	ldr	r3, [r7, #20]
 800311a:	fab3 f383 	clz	r3, r3
 800311e:	b2db      	uxtb	r3, r3
 8003120:	3301      	adds	r3, #1
 8003122:	f003 021f 	and.w	r2, r3, #31
 8003126:	4613      	mov	r3, r2
 8003128:	005b      	lsls	r3, r3, #1
 800312a:	4413      	add	r3, r2
 800312c:	3b1e      	subs	r3, #30
 800312e:	051b      	lsls	r3, r3, #20
 8003130:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003134:	430b      	orrs	r3, r1
 8003136:	683a      	ldr	r2, [r7, #0]
 8003138:	6892      	ldr	r2, [r2, #8]
 800313a:	4619      	mov	r1, r3
 800313c:	f7ff f995 	bl	800246a <LL_ADC_SetChannelSamplingTime>
 8003140:	683b      	ldr	r3, [r7, #0]
 8003142:	681a      	ldr	r2, [r3, #0]
 8003144:	4b44      	ldr	r3, [pc, #272]	@ (8003258 <HAL_ADC_ConfigChannel+0x7c0>)
 8003146:	4013      	ands	r3, r2
 8003148:	2b00      	cmp	r3, #0
 800314a:	d07a      	beq.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 800314c:	4843      	ldr	r0, [pc, #268]	@ (800325c <HAL_ADC_ConfigChannel+0x7c4>)
 800314e:	f7ff f8fd 	bl	800234c <LL_ADC_GetCommonPathInternalCh>
 8003152:	f8c7 00c0 	str.w	r0, [r7, #192]	@ 0xc0
 8003156:	683b      	ldr	r3, [r7, #0]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	4a41      	ldr	r2, [pc, #260]	@ (8003260 <HAL_ADC_ConfigChannel+0x7c8>)
 800315c:	4293      	cmp	r3, r2
 800315e:	d12c      	bne.n	80031ba <HAL_ADC_ConfigChannel+0x722>
 8003160:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003164:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8003168:	2b00      	cmp	r3, #0
 800316a:	d126      	bne.n	80031ba <HAL_ADC_ConfigChannel+0x722>
 800316c:	687b      	ldr	r3, [r7, #4]
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	4a3c      	ldr	r2, [pc, #240]	@ (8003264 <HAL_ADC_ConfigChannel+0x7cc>)
 8003172:	4293      	cmp	r3, r2
 8003174:	d004      	beq.n	8003180 <HAL_ADC_ConfigChannel+0x6e8>
 8003176:	687b      	ldr	r3, [r7, #4]
 8003178:	681b      	ldr	r3, [r3, #0]
 800317a:	4a3b      	ldr	r2, [pc, #236]	@ (8003268 <HAL_ADC_ConfigChannel+0x7d0>)
 800317c:	4293      	cmp	r3, r2
 800317e:	d15d      	bne.n	800323c <HAL_ADC_ConfigChannel+0x7a4>
 8003180:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003184:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 8003188:	4619      	mov	r1, r3
 800318a:	4834      	ldr	r0, [pc, #208]	@ (800325c <HAL_ADC_ConfigChannel+0x7c4>)
 800318c:	f7ff f8cb 	bl	8002326 <LL_ADC_SetCommonPathInternalCh>
 8003190:	4b36      	ldr	r3, [pc, #216]	@ (800326c <HAL_ADC_ConfigChannel+0x7d4>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	099b      	lsrs	r3, r3, #6
 8003196:	4a36      	ldr	r2, [pc, #216]	@ (8003270 <HAL_ADC_ConfigChannel+0x7d8>)
 8003198:	fba2 2303 	umull	r2, r3, r2, r3
 800319c:	099b      	lsrs	r3, r3, #6
 800319e:	1c5a      	adds	r2, r3, #1
 80031a0:	4613      	mov	r3, r2
 80031a2:	005b      	lsls	r3, r3, #1
 80031a4:	4413      	add	r3, r2
 80031a6:	009b      	lsls	r3, r3, #2
 80031a8:	60bb      	str	r3, [r7, #8]
 80031aa:	e002      	b.n	80031b2 <HAL_ADC_ConfigChannel+0x71a>
 80031ac:	68bb      	ldr	r3, [r7, #8]
 80031ae:	3b01      	subs	r3, #1
 80031b0:	60bb      	str	r3, [r7, #8]
 80031b2:	68bb      	ldr	r3, [r7, #8]
 80031b4:	2b00      	cmp	r3, #0
 80031b6:	d1f9      	bne.n	80031ac <HAL_ADC_ConfigChannel+0x714>
 80031b8:	e040      	b.n	800323c <HAL_ADC_ConfigChannel+0x7a4>
 80031ba:	683b      	ldr	r3, [r7, #0]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	4a2d      	ldr	r2, [pc, #180]	@ (8003274 <HAL_ADC_ConfigChannel+0x7dc>)
 80031c0:	4293      	cmp	r3, r2
 80031c2:	d118      	bne.n	80031f6 <HAL_ADC_ConfigChannel+0x75e>
 80031c4:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80031c8:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80031cc:	2b00      	cmp	r3, #0
 80031ce:	d112      	bne.n	80031f6 <HAL_ADC_ConfigChannel+0x75e>
 80031d0:	687b      	ldr	r3, [r7, #4]
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	4a23      	ldr	r2, [pc, #140]	@ (8003264 <HAL_ADC_ConfigChannel+0x7cc>)
 80031d6:	4293      	cmp	r3, r2
 80031d8:	d004      	beq.n	80031e4 <HAL_ADC_ConfigChannel+0x74c>
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	681b      	ldr	r3, [r3, #0]
 80031de:	4a22      	ldr	r2, [pc, #136]	@ (8003268 <HAL_ADC_ConfigChannel+0x7d0>)
 80031e0:	4293      	cmp	r3, r2
 80031e2:	d12d      	bne.n	8003240 <HAL_ADC_ConfigChannel+0x7a8>
 80031e4:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 80031e8:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80031ec:	4619      	mov	r1, r3
 80031ee:	481b      	ldr	r0, [pc, #108]	@ (800325c <HAL_ADC_ConfigChannel+0x7c4>)
 80031f0:	f7ff f899 	bl	8002326 <LL_ADC_SetCommonPathInternalCh>
 80031f4:	e024      	b.n	8003240 <HAL_ADC_ConfigChannel+0x7a8>
 80031f6:	683b      	ldr	r3, [r7, #0]
 80031f8:	681b      	ldr	r3, [r3, #0]
 80031fa:	4a1f      	ldr	r2, [pc, #124]	@ (8003278 <HAL_ADC_ConfigChannel+0x7e0>)
 80031fc:	4293      	cmp	r3, r2
 80031fe:	d120      	bne.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 8003200:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8003204:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003208:	2b00      	cmp	r3, #0
 800320a:	d11a      	bne.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 800320c:	687b      	ldr	r3, [r7, #4]
 800320e:	681b      	ldr	r3, [r3, #0]
 8003210:	4a14      	ldr	r2, [pc, #80]	@ (8003264 <HAL_ADC_ConfigChannel+0x7cc>)
 8003212:	4293      	cmp	r3, r2
 8003214:	d115      	bne.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 8003216:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800321a:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 800321e:	4619      	mov	r1, r3
 8003220:	480e      	ldr	r0, [pc, #56]	@ (800325c <HAL_ADC_ConfigChannel+0x7c4>)
 8003222:	f7ff f880 	bl	8002326 <LL_ADC_SetCommonPathInternalCh>
 8003226:	e00c      	b.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 8003228:	687b      	ldr	r3, [r7, #4]
 800322a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800322c:	f043 0220 	orr.w	r2, r3, #32
 8003230:	687b      	ldr	r3, [r7, #4]
 8003232:	655a      	str	r2, [r3, #84]	@ 0x54
 8003234:	2301      	movs	r3, #1
 8003236:	f887 30d7 	strb.w	r3, [r7, #215]	@ 0xd7
 800323a:	e002      	b.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 800323c:	bf00      	nop
 800323e:	e000      	b.n	8003242 <HAL_ADC_ConfigChannel+0x7aa>
 8003240:	bf00      	nop
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	2200      	movs	r2, #0
 8003246:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800324a:	f897 30d7 	ldrb.w	r3, [r7, #215]	@ 0xd7
 800324e:	4618      	mov	r0, r3
 8003250:	37d8      	adds	r7, #216	@ 0xd8
 8003252:	46bd      	mov	sp, r7
 8003254:	bd80      	pop	{r7, pc}
 8003256:	bf00      	nop
 8003258:	80080000 	.word	0x80080000
 800325c:	50040300 	.word	0x50040300
 8003260:	c7520000 	.word	0xc7520000
 8003264:	50040000 	.word	0x50040000
 8003268:	50040200 	.word	0x50040200
 800326c:	20000000 	.word	0x20000000
 8003270:	053e2d63 	.word	0x053e2d63
 8003274:	cb840000 	.word	0xcb840000
 8003278:	80000001 	.word	0x80000001

0800327c <ADC_Enable>:
 800327c:	b580      	push	{r7, lr}
 800327e:	b084      	sub	sp, #16
 8003280:	af00      	add	r7, sp, #0
 8003282:	6078      	str	r0, [r7, #4]
 8003284:	2300      	movs	r3, #0
 8003286:	60bb      	str	r3, [r7, #8]
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	681b      	ldr	r3, [r3, #0]
 800328c:	4618      	mov	r0, r3
 800328e:	f7ff f9ab 	bl	80025e8 <LL_ADC_IsEnabled>
 8003292:	4603      	mov	r3, r0
 8003294:	2b00      	cmp	r3, #0
 8003296:	d169      	bne.n	800336c <ADC_Enable+0xf0>
 8003298:	687b      	ldr	r3, [r7, #4]
 800329a:	681b      	ldr	r3, [r3, #0]
 800329c:	689a      	ldr	r2, [r3, #8]
 800329e:	4b36      	ldr	r3, [pc, #216]	@ (8003378 <ADC_Enable+0xfc>)
 80032a0:	4013      	ands	r3, r2
 80032a2:	2b00      	cmp	r3, #0
 80032a4:	d00d      	beq.n	80032c2 <ADC_Enable+0x46>
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80032aa:	f043 0210 	orr.w	r2, r3, #16
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	655a      	str	r2, [r3, #84]	@ 0x54
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80032b6:	f043 0201 	orr.w	r2, r3, #1
 80032ba:	687b      	ldr	r3, [r7, #4]
 80032bc:	659a      	str	r2, [r3, #88]	@ 0x58
 80032be:	2301      	movs	r3, #1
 80032c0:	e055      	b.n	800336e <ADC_Enable+0xf2>
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	4618      	mov	r0, r3
 80032c8:	f7ff f97a 	bl	80025c0 <LL_ADC_Enable>
 80032cc:	482b      	ldr	r0, [pc, #172]	@ (800337c <ADC_Enable+0x100>)
 80032ce:	f7ff f83d 	bl	800234c <LL_ADC_GetCommonPathInternalCh>
 80032d2:	4603      	mov	r3, r0
 80032d4:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 80032d8:	2b00      	cmp	r3, #0
 80032da:	d013      	beq.n	8003304 <ADC_Enable+0x88>
 80032dc:	4b28      	ldr	r3, [pc, #160]	@ (8003380 <ADC_Enable+0x104>)
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	099b      	lsrs	r3, r3, #6
 80032e2:	4a28      	ldr	r2, [pc, #160]	@ (8003384 <ADC_Enable+0x108>)
 80032e4:	fba2 2303 	umull	r2, r3, r2, r3
 80032e8:	099b      	lsrs	r3, r3, #6
 80032ea:	1c5a      	adds	r2, r3, #1
 80032ec:	4613      	mov	r3, r2
 80032ee:	005b      	lsls	r3, r3, #1
 80032f0:	4413      	add	r3, r2
 80032f2:	009b      	lsls	r3, r3, #2
 80032f4:	60bb      	str	r3, [r7, #8]
 80032f6:	e002      	b.n	80032fe <ADC_Enable+0x82>
 80032f8:	68bb      	ldr	r3, [r7, #8]
 80032fa:	3b01      	subs	r3, #1
 80032fc:	60bb      	str	r3, [r7, #8]
 80032fe:	68bb      	ldr	r3, [r7, #8]
 8003300:	2b00      	cmp	r3, #0
 8003302:	d1f9      	bne.n	80032f8 <ADC_Enable+0x7c>
 8003304:	f7fe fff0 	bl	80022e8 <HAL_GetTick>
 8003308:	60f8      	str	r0, [r7, #12]
 800330a:	e028      	b.n	800335e <ADC_Enable+0xe2>
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	681b      	ldr	r3, [r3, #0]
 8003310:	4618      	mov	r0, r3
 8003312:	f7ff f969 	bl	80025e8 <LL_ADC_IsEnabled>
 8003316:	4603      	mov	r3, r0
 8003318:	2b00      	cmp	r3, #0
 800331a:	d104      	bne.n	8003326 <ADC_Enable+0xaa>
 800331c:	687b      	ldr	r3, [r7, #4]
 800331e:	681b      	ldr	r3, [r3, #0]
 8003320:	4618      	mov	r0, r3
 8003322:	f7ff f94d 	bl	80025c0 <LL_ADC_Enable>
 8003326:	f7fe ffdf 	bl	80022e8 <HAL_GetTick>
 800332a:	4602      	mov	r2, r0
 800332c:	68fb      	ldr	r3, [r7, #12]
 800332e:	1ad3      	subs	r3, r2, r3
 8003330:	2b02      	cmp	r3, #2
 8003332:	d914      	bls.n	800335e <ADC_Enable+0xe2>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	681b      	ldr	r3, [r3, #0]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	f003 0301 	and.w	r3, r3, #1
 800333e:	2b01      	cmp	r3, #1
 8003340:	d00d      	beq.n	800335e <ADC_Enable+0xe2>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003346:	f043 0210 	orr.w	r2, r3, #16
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	655a      	str	r2, [r3, #84]	@ 0x54
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003352:	f043 0201 	orr.w	r2, r3, #1
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	659a      	str	r2, [r3, #88]	@ 0x58
 800335a:	2301      	movs	r3, #1
 800335c:	e007      	b.n	800336e <ADC_Enable+0xf2>
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	681b      	ldr	r3, [r3, #0]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	f003 0301 	and.w	r3, r3, #1
 8003368:	2b01      	cmp	r3, #1
 800336a:	d1cf      	bne.n	800330c <ADC_Enable+0x90>
 800336c:	2300      	movs	r3, #0
 800336e:	4618      	mov	r0, r3
 8003370:	3710      	adds	r7, #16
 8003372:	46bd      	mov	sp, r7
 8003374:	bd80      	pop	{r7, pc}
 8003376:	bf00      	nop
 8003378:	8000003f 	.word	0x8000003f
 800337c:	50040300 	.word	0x50040300
 8003380:	20000000 	.word	0x20000000
 8003384:	053e2d63 	.word	0x053e2d63

08003388 <LL_ADC_IsEnabled>:
 8003388:	b480      	push	{r7}
 800338a:	b083      	sub	sp, #12
 800338c:	af00      	add	r7, sp, #0
 800338e:	6078      	str	r0, [r7, #4]
 8003390:	687b      	ldr	r3, [r7, #4]
 8003392:	689b      	ldr	r3, [r3, #8]
 8003394:	f003 0301 	and.w	r3, r3, #1
 8003398:	2b01      	cmp	r3, #1
 800339a:	d101      	bne.n	80033a0 <LL_ADC_IsEnabled+0x18>
 800339c:	2301      	movs	r3, #1
 800339e:	e000      	b.n	80033a2 <LL_ADC_IsEnabled+0x1a>
 80033a0:	2300      	movs	r3, #0
 80033a2:	4618      	mov	r0, r3
 80033a4:	370c      	adds	r7, #12
 80033a6:	46bd      	mov	sp, r7
 80033a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033ac:	4770      	bx	lr

080033ae <LL_ADC_REG_IsConversionOngoing>:
 80033ae:	b480      	push	{r7}
 80033b0:	b083      	sub	sp, #12
 80033b2:	af00      	add	r7, sp, #0
 80033b4:	6078      	str	r0, [r7, #4]
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	689b      	ldr	r3, [r3, #8]
 80033ba:	f003 0304 	and.w	r3, r3, #4
 80033be:	2b04      	cmp	r3, #4
 80033c0:	d101      	bne.n	80033c6 <LL_ADC_REG_IsConversionOngoing+0x18>
 80033c2:	2301      	movs	r3, #1
 80033c4:	e000      	b.n	80033c8 <LL_ADC_REG_IsConversionOngoing+0x1a>
 80033c6:	2300      	movs	r3, #0
 80033c8:	4618      	mov	r0, r3
 80033ca:	370c      	adds	r7, #12
 80033cc:	46bd      	mov	sp, r7
 80033ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033d2:	4770      	bx	lr

080033d4 <HAL_ADCEx_MultiModeConfigChannel>:
 80033d4:	b590      	push	{r4, r7, lr}
 80033d6:	b09f      	sub	sp, #124	@ 0x7c
 80033d8:	af00      	add	r7, sp, #0
 80033da:	6078      	str	r0, [r7, #4]
 80033dc:	6039      	str	r1, [r7, #0]
 80033de:	2300      	movs	r3, #0
 80033e0:	f887 3077 	strb.w	r3, [r7, #119]	@ 0x77
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80033ea:	2b01      	cmp	r3, #1
 80033ec:	d101      	bne.n	80033f2 <HAL_ADCEx_MultiModeConfigChannel+0x1e>
 80033ee:	2302      	movs	r3, #2
 80033f0:	e093      	b.n	800351a <HAL_ADCEx_MultiModeConfigChannel+0x146>
 80033f2:	687b      	ldr	r3, [r7, #4]
 80033f4:	2201      	movs	r2, #1
 80033f6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80033fa:	2300      	movs	r3, #0
 80033fc:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80033fe:	2300      	movs	r3, #0
 8003400:	663b      	str	r3, [r7, #96]	@ 0x60
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	4a47      	ldr	r2, [pc, #284]	@ (8003524 <HAL_ADCEx_MultiModeConfigChannel+0x150>)
 8003408:	4293      	cmp	r3, r2
 800340a:	d102      	bne.n	8003412 <HAL_ADCEx_MultiModeConfigChannel+0x3e>
 800340c:	4b46      	ldr	r3, [pc, #280]	@ (8003528 <HAL_ADCEx_MultiModeConfigChannel+0x154>)
 800340e:	60bb      	str	r3, [r7, #8]
 8003410:	e001      	b.n	8003416 <HAL_ADCEx_MultiModeConfigChannel+0x42>
 8003412:	2300      	movs	r3, #0
 8003414:	60bb      	str	r3, [r7, #8]
 8003416:	68bb      	ldr	r3, [r7, #8]
 8003418:	2b00      	cmp	r3, #0
 800341a:	d10b      	bne.n	8003434 <HAL_ADCEx_MultiModeConfigChannel+0x60>
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003420:	f043 0220 	orr.w	r2, r3, #32
 8003424:	687b      	ldr	r3, [r7, #4]
 8003426:	655a      	str	r2, [r3, #84]	@ 0x54
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2200      	movs	r2, #0
 800342c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003430:	2301      	movs	r3, #1
 8003432:	e072      	b.n	800351a <HAL_ADCEx_MultiModeConfigChannel+0x146>
 8003434:	68bb      	ldr	r3, [r7, #8]
 8003436:	4618      	mov	r0, r3
 8003438:	f7ff ffb9 	bl	80033ae <LL_ADC_REG_IsConversionOngoing>
 800343c:	6738      	str	r0, [r7, #112]	@ 0x70
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	4618      	mov	r0, r3
 8003444:	f7ff ffb3 	bl	80033ae <LL_ADC_REG_IsConversionOngoing>
 8003448:	4603      	mov	r3, r0
 800344a:	2b00      	cmp	r3, #0
 800344c:	d154      	bne.n	80034f8 <HAL_ADCEx_MultiModeConfigChannel+0x124>
 800344e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8003450:	2b00      	cmp	r3, #0
 8003452:	d151      	bne.n	80034f8 <HAL_ADCEx_MultiModeConfigChannel+0x124>
 8003454:	4b35      	ldr	r3, [pc, #212]	@ (800352c <HAL_ADCEx_MultiModeConfigChannel+0x158>)
 8003456:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8003458:	683b      	ldr	r3, [r7, #0]
 800345a:	681b      	ldr	r3, [r3, #0]
 800345c:	2b00      	cmp	r3, #0
 800345e:	d02c      	beq.n	80034ba <HAL_ADCEx_MultiModeConfigChannel+0xe6>
 8003460:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 8003462:	689b      	ldr	r3, [r3, #8]
 8003464:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003468:	683b      	ldr	r3, [r7, #0]
 800346a:	6859      	ldr	r1, [r3, #4]
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8003472:	035b      	lsls	r3, r3, #13
 8003474:	430b      	orrs	r3, r1
 8003476:	431a      	orrs	r2, r3
 8003478:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800347a:	609a      	str	r2, [r3, #8]
 800347c:	4829      	ldr	r0, [pc, #164]	@ (8003524 <HAL_ADCEx_MultiModeConfigChannel+0x150>)
 800347e:	f7ff ff83 	bl	8003388 <LL_ADC_IsEnabled>
 8003482:	4604      	mov	r4, r0
 8003484:	4828      	ldr	r0, [pc, #160]	@ (8003528 <HAL_ADCEx_MultiModeConfigChannel+0x154>)
 8003486:	f7ff ff7f 	bl	8003388 <LL_ADC_IsEnabled>
 800348a:	4603      	mov	r3, r0
 800348c:	431c      	orrs	r4, r3
 800348e:	4828      	ldr	r0, [pc, #160]	@ (8003530 <HAL_ADCEx_MultiModeConfigChannel+0x15c>)
 8003490:	f7ff ff7a 	bl	8003388 <LL_ADC_IsEnabled>
 8003494:	4603      	mov	r3, r0
 8003496:	4323      	orrs	r3, r4
 8003498:	2b00      	cmp	r3, #0
 800349a:	d137      	bne.n	800350c <HAL_ADCEx_MultiModeConfigChannel+0x138>
 800349c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800349e:	689b      	ldr	r3, [r3, #8]
 80034a0:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 80034a4:	f023 030f 	bic.w	r3, r3, #15
 80034a8:	683a      	ldr	r2, [r7, #0]
 80034aa:	6811      	ldr	r1, [r2, #0]
 80034ac:	683a      	ldr	r2, [r7, #0]
 80034ae:	6892      	ldr	r2, [r2, #8]
 80034b0:	430a      	orrs	r2, r1
 80034b2:	431a      	orrs	r2, r3
 80034b4:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80034b6:	609a      	str	r2, [r3, #8]
 80034b8:	e028      	b.n	800350c <HAL_ADCEx_MultiModeConfigChannel+0x138>
 80034ba:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80034bc:	689b      	ldr	r3, [r3, #8]
 80034be:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 80034c2:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80034c4:	609a      	str	r2, [r3, #8]
 80034c6:	4817      	ldr	r0, [pc, #92]	@ (8003524 <HAL_ADCEx_MultiModeConfigChannel+0x150>)
 80034c8:	f7ff ff5e 	bl	8003388 <LL_ADC_IsEnabled>
 80034cc:	4604      	mov	r4, r0
 80034ce:	4816      	ldr	r0, [pc, #88]	@ (8003528 <HAL_ADCEx_MultiModeConfigChannel+0x154>)
 80034d0:	f7ff ff5a 	bl	8003388 <LL_ADC_IsEnabled>
 80034d4:	4603      	mov	r3, r0
 80034d6:	431c      	orrs	r4, r3
 80034d8:	4815      	ldr	r0, [pc, #84]	@ (8003530 <HAL_ADCEx_MultiModeConfigChannel+0x15c>)
 80034da:	f7ff ff55 	bl	8003388 <LL_ADC_IsEnabled>
 80034de:	4603      	mov	r3, r0
 80034e0:	4323      	orrs	r3, r4
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d112      	bne.n	800350c <HAL_ADCEx_MultiModeConfigChannel+0x138>
 80034e6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 80034e8:	689b      	ldr	r3, [r3, #8]
 80034ea:	f423 6371 	bic.w	r3, r3, #3856	@ 0xf10
 80034ee:	f023 030f 	bic.w	r3, r3, #15
 80034f2:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 80034f4:	6093      	str	r3, [r2, #8]
 80034f6:	e009      	b.n	800350c <HAL_ADCEx_MultiModeConfigChannel+0x138>
 80034f8:	687b      	ldr	r3, [r7, #4]
 80034fa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80034fc:	f043 0220 	orr.w	r2, r3, #32
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	655a      	str	r2, [r3, #84]	@ 0x54
 8003504:	2301      	movs	r3, #1
 8003506:	f887 3077 	strb.w	r3, [r7, #119]	@ 0x77
 800350a:	e000      	b.n	800350e <HAL_ADCEx_MultiModeConfigChannel+0x13a>
 800350c:	bf00      	nop
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	2200      	movs	r2, #0
 8003512:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8003516:	f897 3077 	ldrb.w	r3, [r7, #119]	@ 0x77
 800351a:	4618      	mov	r0, r3
 800351c:	377c      	adds	r7, #124	@ 0x7c
 800351e:	46bd      	mov	sp, r7
 8003520:	bd90      	pop	{r4, r7, pc}
 8003522:	bf00      	nop
 8003524:	50040000 	.word	0x50040000
 8003528:	50040100 	.word	0x50040100
 800352c:	50040300 	.word	0x50040300
 8003530:	50040200 	.word	0x50040200

08003534 <__NVIC_SetPriorityGrouping>:
 8003534:	b480      	push	{r7}
 8003536:	b085      	sub	sp, #20
 8003538:	af00      	add	r7, sp, #0
 800353a:	6078      	str	r0, [r7, #4]
 800353c:	687b      	ldr	r3, [r7, #4]
 800353e:	f003 0307 	and.w	r3, r3, #7
 8003542:	60fb      	str	r3, [r7, #12]
 8003544:	4b0c      	ldr	r3, [pc, #48]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003546:	68db      	ldr	r3, [r3, #12]
 8003548:	60bb      	str	r3, [r7, #8]
 800354a:	68ba      	ldr	r2, [r7, #8]
 800354c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003550:	4013      	ands	r3, r2
 8003552:	60bb      	str	r3, [r7, #8]
 8003554:	68fb      	ldr	r3, [r7, #12]
 8003556:	021a      	lsls	r2, r3, #8
 8003558:	68bb      	ldr	r3, [r7, #8]
 800355a:	4313      	orrs	r3, r2
 800355c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003560:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003564:	60bb      	str	r3, [r7, #8]
 8003566:	4a04      	ldr	r2, [pc, #16]	@ (8003578 <__NVIC_SetPriorityGrouping+0x44>)
 8003568:	68bb      	ldr	r3, [r7, #8]
 800356a:	60d3      	str	r3, [r2, #12]
 800356c:	bf00      	nop
 800356e:	3714      	adds	r7, #20
 8003570:	46bd      	mov	sp, r7
 8003572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003576:	4770      	bx	lr
 8003578:	e000ed00 	.word	0xe000ed00

0800357c <__NVIC_GetPriorityGrouping>:
 800357c:	b480      	push	{r7}
 800357e:	af00      	add	r7, sp, #0
 8003580:	4b04      	ldr	r3, [pc, #16]	@ (8003594 <__NVIC_GetPriorityGrouping+0x18>)
 8003582:	68db      	ldr	r3, [r3, #12]
 8003584:	0a1b      	lsrs	r3, r3, #8
 8003586:	f003 0307 	and.w	r3, r3, #7
 800358a:	4618      	mov	r0, r3
 800358c:	46bd      	mov	sp, r7
 800358e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003592:	4770      	bx	lr
 8003594:	e000ed00 	.word	0xe000ed00

08003598 <__NVIC_EnableIRQ>:
 8003598:	b480      	push	{r7}
 800359a:	b083      	sub	sp, #12
 800359c:	af00      	add	r7, sp, #0
 800359e:	4603      	mov	r3, r0
 80035a0:	71fb      	strb	r3, [r7, #7]
 80035a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035a6:	2b00      	cmp	r3, #0
 80035a8:	db0b      	blt.n	80035c2 <__NVIC_EnableIRQ+0x2a>
 80035aa:	79fb      	ldrb	r3, [r7, #7]
 80035ac:	f003 021f 	and.w	r2, r3, #31
 80035b0:	4907      	ldr	r1, [pc, #28]	@ (80035d0 <__NVIC_EnableIRQ+0x38>)
 80035b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035b6:	095b      	lsrs	r3, r3, #5
 80035b8:	2001      	movs	r0, #1
 80035ba:	fa00 f202 	lsl.w	r2, r0, r2
 80035be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80035c2:	bf00      	nop
 80035c4:	370c      	adds	r7, #12
 80035c6:	46bd      	mov	sp, r7
 80035c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035cc:	4770      	bx	lr
 80035ce:	bf00      	nop
 80035d0:	e000e100 	.word	0xe000e100

080035d4 <__NVIC_SetPriority>:
 80035d4:	b480      	push	{r7}
 80035d6:	b083      	sub	sp, #12
 80035d8:	af00      	add	r7, sp, #0
 80035da:	4603      	mov	r3, r0
 80035dc:	6039      	str	r1, [r7, #0]
 80035de:	71fb      	strb	r3, [r7, #7]
 80035e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035e4:	2b00      	cmp	r3, #0
 80035e6:	db0a      	blt.n	80035fe <__NVIC_SetPriority+0x2a>
 80035e8:	683b      	ldr	r3, [r7, #0]
 80035ea:	b2da      	uxtb	r2, r3
 80035ec:	490c      	ldr	r1, [pc, #48]	@ (8003620 <__NVIC_SetPriority+0x4c>)
 80035ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035f2:	0112      	lsls	r2, r2, #4
 80035f4:	b2d2      	uxtb	r2, r2
 80035f6:	440b      	add	r3, r1
 80035f8:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80035fc:	e00a      	b.n	8003614 <__NVIC_SetPriority+0x40>
 80035fe:	683b      	ldr	r3, [r7, #0]
 8003600:	b2da      	uxtb	r2, r3
 8003602:	4908      	ldr	r1, [pc, #32]	@ (8003624 <__NVIC_SetPriority+0x50>)
 8003604:	79fb      	ldrb	r3, [r7, #7]
 8003606:	f003 030f 	and.w	r3, r3, #15
 800360a:	3b04      	subs	r3, #4
 800360c:	0112      	lsls	r2, r2, #4
 800360e:	b2d2      	uxtb	r2, r2
 8003610:	440b      	add	r3, r1
 8003612:	761a      	strb	r2, [r3, #24]
 8003614:	bf00      	nop
 8003616:	370c      	adds	r7, #12
 8003618:	46bd      	mov	sp, r7
 800361a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800361e:	4770      	bx	lr
 8003620:	e000e100 	.word	0xe000e100
 8003624:	e000ed00 	.word	0xe000ed00

08003628 <NVIC_EncodePriority>:
 8003628:	b480      	push	{r7}
 800362a:	b089      	sub	sp, #36	@ 0x24
 800362c:	af00      	add	r7, sp, #0
 800362e:	60f8      	str	r0, [r7, #12]
 8003630:	60b9      	str	r1, [r7, #8]
 8003632:	607a      	str	r2, [r7, #4]
 8003634:	68fb      	ldr	r3, [r7, #12]
 8003636:	f003 0307 	and.w	r3, r3, #7
 800363a:	61fb      	str	r3, [r7, #28]
 800363c:	69fb      	ldr	r3, [r7, #28]
 800363e:	f1c3 0307 	rsb	r3, r3, #7
 8003642:	2b04      	cmp	r3, #4
 8003644:	bf28      	it	cs
 8003646:	2304      	movcs	r3, #4
 8003648:	61bb      	str	r3, [r7, #24]
 800364a:	69fb      	ldr	r3, [r7, #28]
 800364c:	3304      	adds	r3, #4
 800364e:	2b06      	cmp	r3, #6
 8003650:	d902      	bls.n	8003658 <NVIC_EncodePriority+0x30>
 8003652:	69fb      	ldr	r3, [r7, #28]
 8003654:	3b03      	subs	r3, #3
 8003656:	e000      	b.n	800365a <NVIC_EncodePriority+0x32>
 8003658:	2300      	movs	r3, #0
 800365a:	617b      	str	r3, [r7, #20]
 800365c:	f04f 32ff 	mov.w	r2, #4294967295
 8003660:	69bb      	ldr	r3, [r7, #24]
 8003662:	fa02 f303 	lsl.w	r3, r2, r3
 8003666:	43da      	mvns	r2, r3
 8003668:	68bb      	ldr	r3, [r7, #8]
 800366a:	401a      	ands	r2, r3
 800366c:	697b      	ldr	r3, [r7, #20]
 800366e:	409a      	lsls	r2, r3
 8003670:	f04f 31ff 	mov.w	r1, #4294967295
 8003674:	697b      	ldr	r3, [r7, #20]
 8003676:	fa01 f303 	lsl.w	r3, r1, r3
 800367a:	43d9      	mvns	r1, r3
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	400b      	ands	r3, r1
 8003680:	4313      	orrs	r3, r2
 8003682:	4618      	mov	r0, r3
 8003684:	3724      	adds	r7, #36	@ 0x24
 8003686:	46bd      	mov	sp, r7
 8003688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800368c:	4770      	bx	lr
	...

08003690 <SysTick_Config>:
 8003690:	b580      	push	{r7, lr}
 8003692:	b082      	sub	sp, #8
 8003694:	af00      	add	r7, sp, #0
 8003696:	6078      	str	r0, [r7, #4]
 8003698:	687b      	ldr	r3, [r7, #4]
 800369a:	3b01      	subs	r3, #1
 800369c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 80036a0:	d301      	bcc.n	80036a6 <SysTick_Config+0x16>
 80036a2:	2301      	movs	r3, #1
 80036a4:	e00f      	b.n	80036c6 <SysTick_Config+0x36>
 80036a6:	4a0a      	ldr	r2, [pc, #40]	@ (80036d0 <SysTick_Config+0x40>)
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	3b01      	subs	r3, #1
 80036ac:	6053      	str	r3, [r2, #4]
 80036ae:	210f      	movs	r1, #15
 80036b0:	f04f 30ff 	mov.w	r0, #4294967295
 80036b4:	f7ff ff8e 	bl	80035d4 <__NVIC_SetPriority>
 80036b8:	4b05      	ldr	r3, [pc, #20]	@ (80036d0 <SysTick_Config+0x40>)
 80036ba:	2200      	movs	r2, #0
 80036bc:	609a      	str	r2, [r3, #8]
 80036be:	4b04      	ldr	r3, [pc, #16]	@ (80036d0 <SysTick_Config+0x40>)
 80036c0:	2207      	movs	r2, #7
 80036c2:	601a      	str	r2, [r3, #0]
 80036c4:	2300      	movs	r3, #0
 80036c6:	4618      	mov	r0, r3
 80036c8:	3708      	adds	r7, #8
 80036ca:	46bd      	mov	sp, r7
 80036cc:	bd80      	pop	{r7, pc}
 80036ce:	bf00      	nop
 80036d0:	e000e010 	.word	0xe000e010

080036d4 <HAL_NVIC_SetPriorityGrouping>:
 80036d4:	b580      	push	{r7, lr}
 80036d6:	b082      	sub	sp, #8
 80036d8:	af00      	add	r7, sp, #0
 80036da:	6078      	str	r0, [r7, #4]
 80036dc:	6878      	ldr	r0, [r7, #4]
 80036de:	f7ff ff29 	bl	8003534 <__NVIC_SetPriorityGrouping>
 80036e2:	bf00      	nop
 80036e4:	3708      	adds	r7, #8
 80036e6:	46bd      	mov	sp, r7
 80036e8:	bd80      	pop	{r7, pc}

080036ea <HAL_NVIC_SetPriority>:
 80036ea:	b580      	push	{r7, lr}
 80036ec:	b086      	sub	sp, #24
 80036ee:	af00      	add	r7, sp, #0
 80036f0:	4603      	mov	r3, r0
 80036f2:	60b9      	str	r1, [r7, #8]
 80036f4:	607a      	str	r2, [r7, #4]
 80036f6:	73fb      	strb	r3, [r7, #15]
 80036f8:	2300      	movs	r3, #0
 80036fa:	617b      	str	r3, [r7, #20]
 80036fc:	f7ff ff3e 	bl	800357c <__NVIC_GetPriorityGrouping>
 8003700:	6178      	str	r0, [r7, #20]
 8003702:	687a      	ldr	r2, [r7, #4]
 8003704:	68b9      	ldr	r1, [r7, #8]
 8003706:	6978      	ldr	r0, [r7, #20]
 8003708:	f7ff ff8e 	bl	8003628 <NVIC_EncodePriority>
 800370c:	4602      	mov	r2, r0
 800370e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003712:	4611      	mov	r1, r2
 8003714:	4618      	mov	r0, r3
 8003716:	f7ff ff5d 	bl	80035d4 <__NVIC_SetPriority>
 800371a:	bf00      	nop
 800371c:	3718      	adds	r7, #24
 800371e:	46bd      	mov	sp, r7
 8003720:	bd80      	pop	{r7, pc}

08003722 <HAL_NVIC_EnableIRQ>:
 8003722:	b580      	push	{r7, lr}
 8003724:	b082      	sub	sp, #8
 8003726:	af00      	add	r7, sp, #0
 8003728:	4603      	mov	r3, r0
 800372a:	71fb      	strb	r3, [r7, #7]
 800372c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003730:	4618      	mov	r0, r3
 8003732:	f7ff ff31 	bl	8003598 <__NVIC_EnableIRQ>
 8003736:	bf00      	nop
 8003738:	3708      	adds	r7, #8
 800373a:	46bd      	mov	sp, r7
 800373c:	bd80      	pop	{r7, pc}

0800373e <HAL_SYSTICK_Config>:
 800373e:	b580      	push	{r7, lr}
 8003740:	b082      	sub	sp, #8
 8003742:	af00      	add	r7, sp, #0
 8003744:	6078      	str	r0, [r7, #4]
 8003746:	6878      	ldr	r0, [r7, #4]
 8003748:	f7ff ffa2 	bl	8003690 <SysTick_Config>
 800374c:	4603      	mov	r3, r0
 800374e:	4618      	mov	r0, r3
 8003750:	3708      	adds	r7, #8
 8003752:	46bd      	mov	sp, r7
 8003754:	bd80      	pop	{r7, pc}
	...

08003758 <HAL_GPIO_Init>:
 8003758:	b480      	push	{r7}
 800375a:	b087      	sub	sp, #28
 800375c:	af00      	add	r7, sp, #0
 800375e:	6078      	str	r0, [r7, #4]
 8003760:	6039      	str	r1, [r7, #0]
 8003762:	2300      	movs	r3, #0
 8003764:	617b      	str	r3, [r7, #20]
 8003766:	e17f      	b.n	8003a68 <HAL_GPIO_Init+0x310>
 8003768:	683b      	ldr	r3, [r7, #0]
 800376a:	681a      	ldr	r2, [r3, #0]
 800376c:	2101      	movs	r1, #1
 800376e:	697b      	ldr	r3, [r7, #20]
 8003770:	fa01 f303 	lsl.w	r3, r1, r3
 8003774:	4013      	ands	r3, r2
 8003776:	60fb      	str	r3, [r7, #12]
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	2b00      	cmp	r3, #0
 800377c:	f000 8171 	beq.w	8003a62 <HAL_GPIO_Init+0x30a>
 8003780:	683b      	ldr	r3, [r7, #0]
 8003782:	685b      	ldr	r3, [r3, #4]
 8003784:	f003 0303 	and.w	r3, r3, #3
 8003788:	2b01      	cmp	r3, #1
 800378a:	d005      	beq.n	8003798 <HAL_GPIO_Init+0x40>
 800378c:	683b      	ldr	r3, [r7, #0]
 800378e:	685b      	ldr	r3, [r3, #4]
 8003790:	f003 0303 	and.w	r3, r3, #3
 8003794:	2b02      	cmp	r3, #2
 8003796:	d130      	bne.n	80037fa <HAL_GPIO_Init+0xa2>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	689b      	ldr	r3, [r3, #8]
 800379c:	613b      	str	r3, [r7, #16]
 800379e:	697b      	ldr	r3, [r7, #20]
 80037a0:	005b      	lsls	r3, r3, #1
 80037a2:	2203      	movs	r2, #3
 80037a4:	fa02 f303 	lsl.w	r3, r2, r3
 80037a8:	43db      	mvns	r3, r3
 80037aa:	693a      	ldr	r2, [r7, #16]
 80037ac:	4013      	ands	r3, r2
 80037ae:	613b      	str	r3, [r7, #16]
 80037b0:	683b      	ldr	r3, [r7, #0]
 80037b2:	68da      	ldr	r2, [r3, #12]
 80037b4:	697b      	ldr	r3, [r7, #20]
 80037b6:	005b      	lsls	r3, r3, #1
 80037b8:	fa02 f303 	lsl.w	r3, r2, r3
 80037bc:	693a      	ldr	r2, [r7, #16]
 80037be:	4313      	orrs	r3, r2
 80037c0:	613b      	str	r3, [r7, #16]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	693a      	ldr	r2, [r7, #16]
 80037c6:	609a      	str	r2, [r3, #8]
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	685b      	ldr	r3, [r3, #4]
 80037cc:	613b      	str	r3, [r7, #16]
 80037ce:	2201      	movs	r2, #1
 80037d0:	697b      	ldr	r3, [r7, #20]
 80037d2:	fa02 f303 	lsl.w	r3, r2, r3
 80037d6:	43db      	mvns	r3, r3
 80037d8:	693a      	ldr	r2, [r7, #16]
 80037da:	4013      	ands	r3, r2
 80037dc:	613b      	str	r3, [r7, #16]
 80037de:	683b      	ldr	r3, [r7, #0]
 80037e0:	685b      	ldr	r3, [r3, #4]
 80037e2:	091b      	lsrs	r3, r3, #4
 80037e4:	f003 0201 	and.w	r2, r3, #1
 80037e8:	697b      	ldr	r3, [r7, #20]
 80037ea:	fa02 f303 	lsl.w	r3, r2, r3
 80037ee:	693a      	ldr	r2, [r7, #16]
 80037f0:	4313      	orrs	r3, r2
 80037f2:	613b      	str	r3, [r7, #16]
 80037f4:	687b      	ldr	r3, [r7, #4]
 80037f6:	693a      	ldr	r2, [r7, #16]
 80037f8:	605a      	str	r2, [r3, #4]
 80037fa:	683b      	ldr	r3, [r7, #0]
 80037fc:	685b      	ldr	r3, [r3, #4]
 80037fe:	f003 0303 	and.w	r3, r3, #3
 8003802:	2b03      	cmp	r3, #3
 8003804:	d118      	bne.n	8003838 <HAL_GPIO_Init+0xe0>
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800380a:	613b      	str	r3, [r7, #16]
 800380c:	2201      	movs	r2, #1
 800380e:	697b      	ldr	r3, [r7, #20]
 8003810:	fa02 f303 	lsl.w	r3, r2, r3
 8003814:	43db      	mvns	r3, r3
 8003816:	693a      	ldr	r2, [r7, #16]
 8003818:	4013      	ands	r3, r2
 800381a:	613b      	str	r3, [r7, #16]
 800381c:	683b      	ldr	r3, [r7, #0]
 800381e:	685b      	ldr	r3, [r3, #4]
 8003820:	08db      	lsrs	r3, r3, #3
 8003822:	f003 0201 	and.w	r2, r3, #1
 8003826:	697b      	ldr	r3, [r7, #20]
 8003828:	fa02 f303 	lsl.w	r3, r2, r3
 800382c:	693a      	ldr	r2, [r7, #16]
 800382e:	4313      	orrs	r3, r2
 8003830:	613b      	str	r3, [r7, #16]
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	693a      	ldr	r2, [r7, #16]
 8003836:	62da      	str	r2, [r3, #44]	@ 0x2c
 8003838:	683b      	ldr	r3, [r7, #0]
 800383a:	685b      	ldr	r3, [r3, #4]
 800383c:	f003 0303 	and.w	r3, r3, #3
 8003840:	2b03      	cmp	r3, #3
 8003842:	d017      	beq.n	8003874 <HAL_GPIO_Init+0x11c>
 8003844:	687b      	ldr	r3, [r7, #4]
 8003846:	68db      	ldr	r3, [r3, #12]
 8003848:	613b      	str	r3, [r7, #16]
 800384a:	697b      	ldr	r3, [r7, #20]
 800384c:	005b      	lsls	r3, r3, #1
 800384e:	2203      	movs	r2, #3
 8003850:	fa02 f303 	lsl.w	r3, r2, r3
 8003854:	43db      	mvns	r3, r3
 8003856:	693a      	ldr	r2, [r7, #16]
 8003858:	4013      	ands	r3, r2
 800385a:	613b      	str	r3, [r7, #16]
 800385c:	683b      	ldr	r3, [r7, #0]
 800385e:	689a      	ldr	r2, [r3, #8]
 8003860:	697b      	ldr	r3, [r7, #20]
 8003862:	005b      	lsls	r3, r3, #1
 8003864:	fa02 f303 	lsl.w	r3, r2, r3
 8003868:	693a      	ldr	r2, [r7, #16]
 800386a:	4313      	orrs	r3, r2
 800386c:	613b      	str	r3, [r7, #16]
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	693a      	ldr	r2, [r7, #16]
 8003872:	60da      	str	r2, [r3, #12]
 8003874:	683b      	ldr	r3, [r7, #0]
 8003876:	685b      	ldr	r3, [r3, #4]
 8003878:	f003 0303 	and.w	r3, r3, #3
 800387c:	2b02      	cmp	r3, #2
 800387e:	d123      	bne.n	80038c8 <HAL_GPIO_Init+0x170>
 8003880:	697b      	ldr	r3, [r7, #20]
 8003882:	08da      	lsrs	r2, r3, #3
 8003884:	687b      	ldr	r3, [r7, #4]
 8003886:	3208      	adds	r2, #8
 8003888:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800388c:	613b      	str	r3, [r7, #16]
 800388e:	697b      	ldr	r3, [r7, #20]
 8003890:	f003 0307 	and.w	r3, r3, #7
 8003894:	009b      	lsls	r3, r3, #2
 8003896:	220f      	movs	r2, #15
 8003898:	fa02 f303 	lsl.w	r3, r2, r3
 800389c:	43db      	mvns	r3, r3
 800389e:	693a      	ldr	r2, [r7, #16]
 80038a0:	4013      	ands	r3, r2
 80038a2:	613b      	str	r3, [r7, #16]
 80038a4:	683b      	ldr	r3, [r7, #0]
 80038a6:	691a      	ldr	r2, [r3, #16]
 80038a8:	697b      	ldr	r3, [r7, #20]
 80038aa:	f003 0307 	and.w	r3, r3, #7
 80038ae:	009b      	lsls	r3, r3, #2
 80038b0:	fa02 f303 	lsl.w	r3, r2, r3
 80038b4:	693a      	ldr	r2, [r7, #16]
 80038b6:	4313      	orrs	r3, r2
 80038b8:	613b      	str	r3, [r7, #16]
 80038ba:	697b      	ldr	r3, [r7, #20]
 80038bc:	08da      	lsrs	r2, r3, #3
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	3208      	adds	r2, #8
 80038c2:	6939      	ldr	r1, [r7, #16]
 80038c4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80038c8:	687b      	ldr	r3, [r7, #4]
 80038ca:	681b      	ldr	r3, [r3, #0]
 80038cc:	613b      	str	r3, [r7, #16]
 80038ce:	697b      	ldr	r3, [r7, #20]
 80038d0:	005b      	lsls	r3, r3, #1
 80038d2:	2203      	movs	r2, #3
 80038d4:	fa02 f303 	lsl.w	r3, r2, r3
 80038d8:	43db      	mvns	r3, r3
 80038da:	693a      	ldr	r2, [r7, #16]
 80038dc:	4013      	ands	r3, r2
 80038de:	613b      	str	r3, [r7, #16]
 80038e0:	683b      	ldr	r3, [r7, #0]
 80038e2:	685b      	ldr	r3, [r3, #4]
 80038e4:	f003 0203 	and.w	r2, r3, #3
 80038e8:	697b      	ldr	r3, [r7, #20]
 80038ea:	005b      	lsls	r3, r3, #1
 80038ec:	fa02 f303 	lsl.w	r3, r2, r3
 80038f0:	693a      	ldr	r2, [r7, #16]
 80038f2:	4313      	orrs	r3, r2
 80038f4:	613b      	str	r3, [r7, #16]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	693a      	ldr	r2, [r7, #16]
 80038fa:	601a      	str	r2, [r3, #0]
 80038fc:	683b      	ldr	r3, [r7, #0]
 80038fe:	685b      	ldr	r3, [r3, #4]
 8003900:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003904:	2b00      	cmp	r3, #0
 8003906:	f000 80ac 	beq.w	8003a62 <HAL_GPIO_Init+0x30a>
 800390a:	4b5f      	ldr	r3, [pc, #380]	@ (8003a88 <HAL_GPIO_Init+0x330>)
 800390c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800390e:	4a5e      	ldr	r2, [pc, #376]	@ (8003a88 <HAL_GPIO_Init+0x330>)
 8003910:	f043 0301 	orr.w	r3, r3, #1
 8003914:	6613      	str	r3, [r2, #96]	@ 0x60
 8003916:	4b5c      	ldr	r3, [pc, #368]	@ (8003a88 <HAL_GPIO_Init+0x330>)
 8003918:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800391a:	f003 0301 	and.w	r3, r3, #1
 800391e:	60bb      	str	r3, [r7, #8]
 8003920:	68bb      	ldr	r3, [r7, #8]
 8003922:	4a5a      	ldr	r2, [pc, #360]	@ (8003a8c <HAL_GPIO_Init+0x334>)
 8003924:	697b      	ldr	r3, [r7, #20]
 8003926:	089b      	lsrs	r3, r3, #2
 8003928:	3302      	adds	r3, #2
 800392a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800392e:	613b      	str	r3, [r7, #16]
 8003930:	697b      	ldr	r3, [r7, #20]
 8003932:	f003 0303 	and.w	r3, r3, #3
 8003936:	009b      	lsls	r3, r3, #2
 8003938:	220f      	movs	r2, #15
 800393a:	fa02 f303 	lsl.w	r3, r2, r3
 800393e:	43db      	mvns	r3, r3
 8003940:	693a      	ldr	r2, [r7, #16]
 8003942:	4013      	ands	r3, r2
 8003944:	613b      	str	r3, [r7, #16]
 8003946:	687b      	ldr	r3, [r7, #4]
 8003948:	f1b3 4f90 	cmp.w	r3, #1207959552	@ 0x48000000
 800394c:	d025      	beq.n	800399a <HAL_GPIO_Init+0x242>
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	4a4f      	ldr	r2, [pc, #316]	@ (8003a90 <HAL_GPIO_Init+0x338>)
 8003952:	4293      	cmp	r3, r2
 8003954:	d01f      	beq.n	8003996 <HAL_GPIO_Init+0x23e>
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	4a4e      	ldr	r2, [pc, #312]	@ (8003a94 <HAL_GPIO_Init+0x33c>)
 800395a:	4293      	cmp	r3, r2
 800395c:	d019      	beq.n	8003992 <HAL_GPIO_Init+0x23a>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	4a4d      	ldr	r2, [pc, #308]	@ (8003a98 <HAL_GPIO_Init+0x340>)
 8003962:	4293      	cmp	r3, r2
 8003964:	d013      	beq.n	800398e <HAL_GPIO_Init+0x236>
 8003966:	687b      	ldr	r3, [r7, #4]
 8003968:	4a4c      	ldr	r2, [pc, #304]	@ (8003a9c <HAL_GPIO_Init+0x344>)
 800396a:	4293      	cmp	r3, r2
 800396c:	d00d      	beq.n	800398a <HAL_GPIO_Init+0x232>
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	4a4b      	ldr	r2, [pc, #300]	@ (8003aa0 <HAL_GPIO_Init+0x348>)
 8003972:	4293      	cmp	r3, r2
 8003974:	d007      	beq.n	8003986 <HAL_GPIO_Init+0x22e>
 8003976:	687b      	ldr	r3, [r7, #4]
 8003978:	4a4a      	ldr	r2, [pc, #296]	@ (8003aa4 <HAL_GPIO_Init+0x34c>)
 800397a:	4293      	cmp	r3, r2
 800397c:	d101      	bne.n	8003982 <HAL_GPIO_Init+0x22a>
 800397e:	2306      	movs	r3, #6
 8003980:	e00c      	b.n	800399c <HAL_GPIO_Init+0x244>
 8003982:	2307      	movs	r3, #7
 8003984:	e00a      	b.n	800399c <HAL_GPIO_Init+0x244>
 8003986:	2305      	movs	r3, #5
 8003988:	e008      	b.n	800399c <HAL_GPIO_Init+0x244>
 800398a:	2304      	movs	r3, #4
 800398c:	e006      	b.n	800399c <HAL_GPIO_Init+0x244>
 800398e:	2303      	movs	r3, #3
 8003990:	e004      	b.n	800399c <HAL_GPIO_Init+0x244>
 8003992:	2302      	movs	r3, #2
 8003994:	e002      	b.n	800399c <HAL_GPIO_Init+0x244>
 8003996:	2301      	movs	r3, #1
 8003998:	e000      	b.n	800399c <HAL_GPIO_Init+0x244>
 800399a:	2300      	movs	r3, #0
 800399c:	697a      	ldr	r2, [r7, #20]
 800399e:	f002 0203 	and.w	r2, r2, #3
 80039a2:	0092      	lsls	r2, r2, #2
 80039a4:	4093      	lsls	r3, r2
 80039a6:	693a      	ldr	r2, [r7, #16]
 80039a8:	4313      	orrs	r3, r2
 80039aa:	613b      	str	r3, [r7, #16]
 80039ac:	4937      	ldr	r1, [pc, #220]	@ (8003a8c <HAL_GPIO_Init+0x334>)
 80039ae:	697b      	ldr	r3, [r7, #20]
 80039b0:	089b      	lsrs	r3, r3, #2
 80039b2:	3302      	adds	r3, #2
 80039b4:	693a      	ldr	r2, [r7, #16]
 80039b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80039ba:	4b3b      	ldr	r3, [pc, #236]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 80039bc:	689b      	ldr	r3, [r3, #8]
 80039be:	613b      	str	r3, [r7, #16]
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	43db      	mvns	r3, r3
 80039c4:	693a      	ldr	r2, [r7, #16]
 80039c6:	4013      	ands	r3, r2
 80039c8:	613b      	str	r3, [r7, #16]
 80039ca:	683b      	ldr	r3, [r7, #0]
 80039cc:	685b      	ldr	r3, [r3, #4]
 80039ce:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80039d2:	2b00      	cmp	r3, #0
 80039d4:	d003      	beq.n	80039de <HAL_GPIO_Init+0x286>
 80039d6:	693a      	ldr	r2, [r7, #16]
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	4313      	orrs	r3, r2
 80039dc:	613b      	str	r3, [r7, #16]
 80039de:	4a32      	ldr	r2, [pc, #200]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 80039e0:	693b      	ldr	r3, [r7, #16]
 80039e2:	6093      	str	r3, [r2, #8]
 80039e4:	4b30      	ldr	r3, [pc, #192]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 80039e6:	68db      	ldr	r3, [r3, #12]
 80039e8:	613b      	str	r3, [r7, #16]
 80039ea:	68fb      	ldr	r3, [r7, #12]
 80039ec:	43db      	mvns	r3, r3
 80039ee:	693a      	ldr	r2, [r7, #16]
 80039f0:	4013      	ands	r3, r2
 80039f2:	613b      	str	r3, [r7, #16]
 80039f4:	683b      	ldr	r3, [r7, #0]
 80039f6:	685b      	ldr	r3, [r3, #4]
 80039f8:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	d003      	beq.n	8003a08 <HAL_GPIO_Init+0x2b0>
 8003a00:	693a      	ldr	r2, [r7, #16]
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	4313      	orrs	r3, r2
 8003a06:	613b      	str	r3, [r7, #16]
 8003a08:	4a27      	ldr	r2, [pc, #156]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 8003a0a:	693b      	ldr	r3, [r7, #16]
 8003a0c:	60d3      	str	r3, [r2, #12]
 8003a0e:	4b26      	ldr	r3, [pc, #152]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 8003a10:	685b      	ldr	r3, [r3, #4]
 8003a12:	613b      	str	r3, [r7, #16]
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	43db      	mvns	r3, r3
 8003a18:	693a      	ldr	r2, [r7, #16]
 8003a1a:	4013      	ands	r3, r2
 8003a1c:	613b      	str	r3, [r7, #16]
 8003a1e:	683b      	ldr	r3, [r7, #0]
 8003a20:	685b      	ldr	r3, [r3, #4]
 8003a22:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d003      	beq.n	8003a32 <HAL_GPIO_Init+0x2da>
 8003a2a:	693a      	ldr	r2, [r7, #16]
 8003a2c:	68fb      	ldr	r3, [r7, #12]
 8003a2e:	4313      	orrs	r3, r2
 8003a30:	613b      	str	r3, [r7, #16]
 8003a32:	4a1d      	ldr	r2, [pc, #116]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 8003a34:	693b      	ldr	r3, [r7, #16]
 8003a36:	6053      	str	r3, [r2, #4]
 8003a38:	4b1b      	ldr	r3, [pc, #108]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	613b      	str	r3, [r7, #16]
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	43db      	mvns	r3, r3
 8003a42:	693a      	ldr	r2, [r7, #16]
 8003a44:	4013      	ands	r3, r2
 8003a46:	613b      	str	r3, [r7, #16]
 8003a48:	683b      	ldr	r3, [r7, #0]
 8003a4a:	685b      	ldr	r3, [r3, #4]
 8003a4c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003a50:	2b00      	cmp	r3, #0
 8003a52:	d003      	beq.n	8003a5c <HAL_GPIO_Init+0x304>
 8003a54:	693a      	ldr	r2, [r7, #16]
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	4313      	orrs	r3, r2
 8003a5a:	613b      	str	r3, [r7, #16]
 8003a5c:	4a12      	ldr	r2, [pc, #72]	@ (8003aa8 <HAL_GPIO_Init+0x350>)
 8003a5e:	693b      	ldr	r3, [r7, #16]
 8003a60:	6013      	str	r3, [r2, #0]
 8003a62:	697b      	ldr	r3, [r7, #20]
 8003a64:	3301      	adds	r3, #1
 8003a66:	617b      	str	r3, [r7, #20]
 8003a68:	683b      	ldr	r3, [r7, #0]
 8003a6a:	681a      	ldr	r2, [r3, #0]
 8003a6c:	697b      	ldr	r3, [r7, #20]
 8003a6e:	fa22 f303 	lsr.w	r3, r2, r3
 8003a72:	2b00      	cmp	r3, #0
 8003a74:	f47f ae78 	bne.w	8003768 <HAL_GPIO_Init+0x10>
 8003a78:	bf00      	nop
 8003a7a:	bf00      	nop
 8003a7c:	371c      	adds	r7, #28
 8003a7e:	46bd      	mov	sp, r7
 8003a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a84:	4770      	bx	lr
 8003a86:	bf00      	nop
 8003a88:	40021000 	.word	0x40021000
 8003a8c:	40010000 	.word	0x40010000
 8003a90:	48000400 	.word	0x48000400
 8003a94:	48000800 	.word	0x48000800
 8003a98:	48000c00 	.word	0x48000c00
 8003a9c:	48001000 	.word	0x48001000
 8003aa0:	48001400 	.word	0x48001400
 8003aa4:	48001800 	.word	0x48001800
 8003aa8:	40010400 	.word	0x40010400

08003aac <HAL_GPIO_WritePin>:
 8003aac:	b480      	push	{r7}
 8003aae:	b083      	sub	sp, #12
 8003ab0:	af00      	add	r7, sp, #0
 8003ab2:	6078      	str	r0, [r7, #4]
 8003ab4:	460b      	mov	r3, r1
 8003ab6:	807b      	strh	r3, [r7, #2]
 8003ab8:	4613      	mov	r3, r2
 8003aba:	707b      	strb	r3, [r7, #1]
 8003abc:	787b      	ldrb	r3, [r7, #1]
 8003abe:	2b00      	cmp	r3, #0
 8003ac0:	d003      	beq.n	8003aca <HAL_GPIO_WritePin+0x1e>
 8003ac2:	887a      	ldrh	r2, [r7, #2]
 8003ac4:	687b      	ldr	r3, [r7, #4]
 8003ac6:	619a      	str	r2, [r3, #24]
 8003ac8:	e002      	b.n	8003ad0 <HAL_GPIO_WritePin+0x24>
 8003aca:	887a      	ldrh	r2, [r7, #2]
 8003acc:	687b      	ldr	r3, [r7, #4]
 8003ace:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ad0:	bf00      	nop
 8003ad2:	370c      	adds	r7, #12
 8003ad4:	46bd      	mov	sp, r7
 8003ad6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ada:	4770      	bx	lr

08003adc <HAL_I2C_Init>:
 8003adc:	b580      	push	{r7, lr}
 8003ade:	b082      	sub	sp, #8
 8003ae0:	af00      	add	r7, sp, #0
 8003ae2:	6078      	str	r0, [r7, #4]
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d101      	bne.n	8003aee <HAL_I2C_Init+0x12>
 8003aea:	2301      	movs	r3, #1
 8003aec:	e08d      	b.n	8003c0a <HAL_I2C_Init+0x12e>
 8003aee:	687b      	ldr	r3, [r7, #4]
 8003af0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003af4:	b2db      	uxtb	r3, r3
 8003af6:	2b00      	cmp	r3, #0
 8003af8:	d106      	bne.n	8003b08 <HAL_I2C_Init+0x2c>
 8003afa:	687b      	ldr	r3, [r7, #4]
 8003afc:	2200      	movs	r2, #0
 8003afe:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003b02:	6878      	ldr	r0, [r7, #4]
 8003b04:	f7fd ff88 	bl	8001a18 <HAL_I2C_MspInit>
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	2224      	movs	r2, #36	@ 0x24
 8003b0c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003b10:	687b      	ldr	r3, [r7, #4]
 8003b12:	681b      	ldr	r3, [r3, #0]
 8003b14:	681a      	ldr	r2, [r3, #0]
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	681b      	ldr	r3, [r3, #0]
 8003b1a:	f022 0201 	bic.w	r2, r2, #1
 8003b1e:	601a      	str	r2, [r3, #0]
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	685a      	ldr	r2, [r3, #4]
 8003b24:	687b      	ldr	r3, [r7, #4]
 8003b26:	681b      	ldr	r3, [r3, #0]
 8003b28:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003b2c:	611a      	str	r2, [r3, #16]
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	689a      	ldr	r2, [r3, #8]
 8003b34:	687b      	ldr	r3, [r7, #4]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003b3c:	609a      	str	r2, [r3, #8]
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	68db      	ldr	r3, [r3, #12]
 8003b42:	2b01      	cmp	r3, #1
 8003b44:	d107      	bne.n	8003b56 <HAL_I2C_Init+0x7a>
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	689a      	ldr	r2, [r3, #8]
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	681b      	ldr	r3, [r3, #0]
 8003b4e:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003b52:	609a      	str	r2, [r3, #8]
 8003b54:	e006      	b.n	8003b64 <HAL_I2C_Init+0x88>
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	689a      	ldr	r2, [r3, #8]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	681b      	ldr	r3, [r3, #0]
 8003b5e:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8003b62:	609a      	str	r2, [r3, #8]
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	68db      	ldr	r3, [r3, #12]
 8003b68:	2b02      	cmp	r3, #2
 8003b6a:	d108      	bne.n	8003b7e <HAL_I2C_Init+0xa2>
 8003b6c:	687b      	ldr	r3, [r7, #4]
 8003b6e:	681b      	ldr	r3, [r3, #0]
 8003b70:	685a      	ldr	r2, [r3, #4]
 8003b72:	687b      	ldr	r3, [r7, #4]
 8003b74:	681b      	ldr	r3, [r3, #0]
 8003b76:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003b7a:	605a      	str	r2, [r3, #4]
 8003b7c:	e007      	b.n	8003b8e <HAL_I2C_Init+0xb2>
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	681b      	ldr	r3, [r3, #0]
 8003b82:	685a      	ldr	r2, [r3, #4]
 8003b84:	687b      	ldr	r3, [r7, #4]
 8003b86:	681b      	ldr	r3, [r3, #0]
 8003b88:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003b8c:	605a      	str	r2, [r3, #4]
 8003b8e:	687b      	ldr	r3, [r7, #4]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	685b      	ldr	r3, [r3, #4]
 8003b94:	687a      	ldr	r2, [r7, #4]
 8003b96:	6812      	ldr	r2, [r2, #0]
 8003b98:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8003b9c:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003ba0:	6053      	str	r3, [r2, #4]
 8003ba2:	687b      	ldr	r3, [r7, #4]
 8003ba4:	681b      	ldr	r3, [r3, #0]
 8003ba6:	68da      	ldr	r2, [r3, #12]
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003bb0:	60da      	str	r2, [r3, #12]
 8003bb2:	687b      	ldr	r3, [r7, #4]
 8003bb4:	691a      	ldr	r2, [r3, #16]
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	695b      	ldr	r3, [r3, #20]
 8003bba:	ea42 0103 	orr.w	r1, r2, r3
 8003bbe:	687b      	ldr	r3, [r7, #4]
 8003bc0:	699b      	ldr	r3, [r3, #24]
 8003bc2:	021a      	lsls	r2, r3, #8
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	430a      	orrs	r2, r1
 8003bca:	60da      	str	r2, [r3, #12]
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	69d9      	ldr	r1, [r3, #28]
 8003bd0:	687b      	ldr	r3, [r7, #4]
 8003bd2:	6a1a      	ldr	r2, [r3, #32]
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	681b      	ldr	r3, [r3, #0]
 8003bd8:	430a      	orrs	r2, r1
 8003bda:	601a      	str	r2, [r3, #0]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	681a      	ldr	r2, [r3, #0]
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	681b      	ldr	r3, [r3, #0]
 8003be6:	f042 0201 	orr.w	r2, r2, #1
 8003bea:	601a      	str	r2, [r3, #0]
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	2200      	movs	r2, #0
 8003bf0:	645a      	str	r2, [r3, #68]	@ 0x44
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	2220      	movs	r2, #32
 8003bf6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	2200      	movs	r2, #0
 8003bfe:	631a      	str	r2, [r3, #48]	@ 0x30
 8003c00:	687b      	ldr	r3, [r7, #4]
 8003c02:	2200      	movs	r2, #0
 8003c04:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003c08:	2300      	movs	r3, #0
 8003c0a:	4618      	mov	r0, r3
 8003c0c:	3708      	adds	r7, #8
 8003c0e:	46bd      	mov	sp, r7
 8003c10:	bd80      	pop	{r7, pc}

08003c12 <HAL_I2CEx_ConfigAnalogFilter>:
 8003c12:	b480      	push	{r7}
 8003c14:	b083      	sub	sp, #12
 8003c16:	af00      	add	r7, sp, #0
 8003c18:	6078      	str	r0, [r7, #4]
 8003c1a:	6039      	str	r1, [r7, #0]
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003c22:	b2db      	uxtb	r3, r3
 8003c24:	2b20      	cmp	r3, #32
 8003c26:	d138      	bne.n	8003c9a <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8003c28:	687b      	ldr	r3, [r7, #4]
 8003c2a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003c2e:	2b01      	cmp	r3, #1
 8003c30:	d101      	bne.n	8003c36 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8003c32:	2302      	movs	r3, #2
 8003c34:	e032      	b.n	8003c9c <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	2201      	movs	r2, #1
 8003c3a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	2224      	movs	r2, #36	@ 0x24
 8003c42:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	681b      	ldr	r3, [r3, #0]
 8003c4a:	681a      	ldr	r2, [r3, #0]
 8003c4c:	687b      	ldr	r3, [r7, #4]
 8003c4e:	681b      	ldr	r3, [r3, #0]
 8003c50:	f022 0201 	bic.w	r2, r2, #1
 8003c54:	601a      	str	r2, [r3, #0]
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	681b      	ldr	r3, [r3, #0]
 8003c5a:	681a      	ldr	r2, [r3, #0]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	681b      	ldr	r3, [r3, #0]
 8003c60:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8003c64:	601a      	str	r2, [r3, #0]
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	6819      	ldr	r1, [r3, #0]
 8003c6c:	687b      	ldr	r3, [r7, #4]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	683a      	ldr	r2, [r7, #0]
 8003c72:	430a      	orrs	r2, r1
 8003c74:	601a      	str	r2, [r3, #0]
 8003c76:	687b      	ldr	r3, [r7, #4]
 8003c78:	681b      	ldr	r3, [r3, #0]
 8003c7a:	681a      	ldr	r2, [r3, #0]
 8003c7c:	687b      	ldr	r3, [r7, #4]
 8003c7e:	681b      	ldr	r3, [r3, #0]
 8003c80:	f042 0201 	orr.w	r2, r2, #1
 8003c84:	601a      	str	r2, [r3, #0]
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	2220      	movs	r2, #32
 8003c8a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	2200      	movs	r2, #0
 8003c92:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003c96:	2300      	movs	r3, #0
 8003c98:	e000      	b.n	8003c9c <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8003c9a:	2302      	movs	r3, #2
 8003c9c:	4618      	mov	r0, r3
 8003c9e:	370c      	adds	r7, #12
 8003ca0:	46bd      	mov	sp, r7
 8003ca2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ca6:	4770      	bx	lr

08003ca8 <HAL_I2CEx_ConfigDigitalFilter>:
 8003ca8:	b480      	push	{r7}
 8003caa:	b085      	sub	sp, #20
 8003cac:	af00      	add	r7, sp, #0
 8003cae:	6078      	str	r0, [r7, #4]
 8003cb0:	6039      	str	r1, [r7, #0]
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003cb8:	b2db      	uxtb	r3, r3
 8003cba:	2b20      	cmp	r3, #32
 8003cbc:	d139      	bne.n	8003d32 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003cc4:	2b01      	cmp	r3, #1
 8003cc6:	d101      	bne.n	8003ccc <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8003cc8:	2302      	movs	r3, #2
 8003cca:	e033      	b.n	8003d34 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	2201      	movs	r2, #1
 8003cd0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2224      	movs	r2, #36	@ 0x24
 8003cd8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	681a      	ldr	r2, [r3, #0]
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	681b      	ldr	r3, [r3, #0]
 8003ce6:	f022 0201 	bic.w	r2, r2, #1
 8003cea:	601a      	str	r2, [r3, #0]
 8003cec:	687b      	ldr	r3, [r7, #4]
 8003cee:	681b      	ldr	r3, [r3, #0]
 8003cf0:	681b      	ldr	r3, [r3, #0]
 8003cf2:	60fb      	str	r3, [r7, #12]
 8003cf4:	68fb      	ldr	r3, [r7, #12]
 8003cf6:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8003cfa:	60fb      	str	r3, [r7, #12]
 8003cfc:	683b      	ldr	r3, [r7, #0]
 8003cfe:	021b      	lsls	r3, r3, #8
 8003d00:	68fa      	ldr	r2, [r7, #12]
 8003d02:	4313      	orrs	r3, r2
 8003d04:	60fb      	str	r3, [r7, #12]
 8003d06:	687b      	ldr	r3, [r7, #4]
 8003d08:	681b      	ldr	r3, [r3, #0]
 8003d0a:	68fa      	ldr	r2, [r7, #12]
 8003d0c:	601a      	str	r2, [r3, #0]
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	681a      	ldr	r2, [r3, #0]
 8003d14:	687b      	ldr	r3, [r7, #4]
 8003d16:	681b      	ldr	r3, [r3, #0]
 8003d18:	f042 0201 	orr.w	r2, r2, #1
 8003d1c:	601a      	str	r2, [r3, #0]
 8003d1e:	687b      	ldr	r3, [r7, #4]
 8003d20:	2220      	movs	r2, #32
 8003d22:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003d26:	687b      	ldr	r3, [r7, #4]
 8003d28:	2200      	movs	r2, #0
 8003d2a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003d2e:	2300      	movs	r3, #0
 8003d30:	e000      	b.n	8003d34 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8003d32:	2302      	movs	r3, #2
 8003d34:	4618      	mov	r0, r3
 8003d36:	3714      	adds	r7, #20
 8003d38:	46bd      	mov	sp, r7
 8003d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d3e:	4770      	bx	lr

08003d40 <HAL_PWREx_GetVoltageRange>:
 8003d40:	b480      	push	{r7}
 8003d42:	af00      	add	r7, sp, #0
 8003d44:	4b04      	ldr	r3, [pc, #16]	@ (8003d58 <HAL_PWREx_GetVoltageRange+0x18>)
 8003d46:	681b      	ldr	r3, [r3, #0]
 8003d48:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003d4c:	4618      	mov	r0, r3
 8003d4e:	46bd      	mov	sp, r7
 8003d50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d54:	4770      	bx	lr
 8003d56:	bf00      	nop
 8003d58:	40007000 	.word	0x40007000

08003d5c <HAL_PWREx_ControlVoltageScaling>:
 8003d5c:	b480      	push	{r7}
 8003d5e:	b085      	sub	sp, #20
 8003d60:	af00      	add	r7, sp, #0
 8003d62:	6078      	str	r0, [r7, #4]
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003d6a:	d130      	bne.n	8003dce <HAL_PWREx_ControlVoltageScaling+0x72>
 8003d6c:	4b23      	ldr	r3, [pc, #140]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003d6e:	681b      	ldr	r3, [r3, #0]
 8003d70:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003d74:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8003d78:	d038      	beq.n	8003dec <HAL_PWREx_ControlVoltageScaling+0x90>
 8003d7a:	4b20      	ldr	r3, [pc, #128]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003d7c:	681b      	ldr	r3, [r3, #0]
 8003d7e:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8003d82:	4a1e      	ldr	r2, [pc, #120]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003d84:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003d88:	6013      	str	r3, [r2, #0]
 8003d8a:	4b1d      	ldr	r3, [pc, #116]	@ (8003e00 <HAL_PWREx_ControlVoltageScaling+0xa4>)
 8003d8c:	681b      	ldr	r3, [r3, #0]
 8003d8e:	2232      	movs	r2, #50	@ 0x32
 8003d90:	fb02 f303 	mul.w	r3, r2, r3
 8003d94:	4a1b      	ldr	r2, [pc, #108]	@ (8003e04 <HAL_PWREx_ControlVoltageScaling+0xa8>)
 8003d96:	fba2 2303 	umull	r2, r3, r2, r3
 8003d9a:	0c9b      	lsrs	r3, r3, #18
 8003d9c:	3301      	adds	r3, #1
 8003d9e:	60fb      	str	r3, [r7, #12]
 8003da0:	e002      	b.n	8003da8 <HAL_PWREx_ControlVoltageScaling+0x4c>
 8003da2:	68fb      	ldr	r3, [r7, #12]
 8003da4:	3b01      	subs	r3, #1
 8003da6:	60fb      	str	r3, [r7, #12]
 8003da8:	4b14      	ldr	r3, [pc, #80]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003daa:	695b      	ldr	r3, [r3, #20]
 8003dac:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003db0:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003db4:	d102      	bne.n	8003dbc <HAL_PWREx_ControlVoltageScaling+0x60>
 8003db6:	68fb      	ldr	r3, [r7, #12]
 8003db8:	2b00      	cmp	r3, #0
 8003dba:	d1f2      	bne.n	8003da2 <HAL_PWREx_ControlVoltageScaling+0x46>
 8003dbc:	4b0f      	ldr	r3, [pc, #60]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003dbe:	695b      	ldr	r3, [r3, #20]
 8003dc0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003dc4:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003dc8:	d110      	bne.n	8003dec <HAL_PWREx_ControlVoltageScaling+0x90>
 8003dca:	2303      	movs	r3, #3
 8003dcc:	e00f      	b.n	8003dee <HAL_PWREx_ControlVoltageScaling+0x92>
 8003dce:	4b0b      	ldr	r3, [pc, #44]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003dd0:	681b      	ldr	r3, [r3, #0]
 8003dd2:	f403 63c0 	and.w	r3, r3, #1536	@ 0x600
 8003dd6:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003dda:	d007      	beq.n	8003dec <HAL_PWREx_ControlVoltageScaling+0x90>
 8003ddc:	4b07      	ldr	r3, [pc, #28]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	f423 63c0 	bic.w	r3, r3, #1536	@ 0x600
 8003de4:	4a05      	ldr	r2, [pc, #20]	@ (8003dfc <HAL_PWREx_ControlVoltageScaling+0xa0>)
 8003de6:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8003dea:	6013      	str	r3, [r2, #0]
 8003dec:	2300      	movs	r3, #0
 8003dee:	4618      	mov	r0, r3
 8003df0:	3714      	adds	r7, #20
 8003df2:	46bd      	mov	sp, r7
 8003df4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003df8:	4770      	bx	lr
 8003dfa:	bf00      	nop
 8003dfc:	40007000 	.word	0x40007000
 8003e00:	20000000 	.word	0x20000000
 8003e04:	431bde83 	.word	0x431bde83

08003e08 <HAL_RCC_OscConfig>:
 8003e08:	b580      	push	{r7, lr}
 8003e0a:	b088      	sub	sp, #32
 8003e0c:	af00      	add	r7, sp, #0
 8003e0e:	6078      	str	r0, [r7, #4]
 8003e10:	687b      	ldr	r3, [r7, #4]
 8003e12:	2b00      	cmp	r3, #0
 8003e14:	d101      	bne.n	8003e1a <HAL_RCC_OscConfig+0x12>
 8003e16:	2301      	movs	r3, #1
 8003e18:	e3ca      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003e1a:	4b97      	ldr	r3, [pc, #604]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e1c:	689b      	ldr	r3, [r3, #8]
 8003e1e:	f003 030c 	and.w	r3, r3, #12
 8003e22:	61bb      	str	r3, [r7, #24]
 8003e24:	4b94      	ldr	r3, [pc, #592]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e26:	68db      	ldr	r3, [r3, #12]
 8003e28:	f003 0303 	and.w	r3, r3, #3
 8003e2c:	617b      	str	r3, [r7, #20]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f003 0310 	and.w	r3, r3, #16
 8003e36:	2b00      	cmp	r3, #0
 8003e38:	f000 80e4 	beq.w	8004004 <HAL_RCC_OscConfig+0x1fc>
 8003e3c:	69bb      	ldr	r3, [r7, #24]
 8003e3e:	2b00      	cmp	r3, #0
 8003e40:	d007      	beq.n	8003e52 <HAL_RCC_OscConfig+0x4a>
 8003e42:	69bb      	ldr	r3, [r7, #24]
 8003e44:	2b0c      	cmp	r3, #12
 8003e46:	f040 808b 	bne.w	8003f60 <HAL_RCC_OscConfig+0x158>
 8003e4a:	697b      	ldr	r3, [r7, #20]
 8003e4c:	2b01      	cmp	r3, #1
 8003e4e:	f040 8087 	bne.w	8003f60 <HAL_RCC_OscConfig+0x158>
 8003e52:	4b89      	ldr	r3, [pc, #548]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	f003 0302 	and.w	r3, r3, #2
 8003e5a:	2b00      	cmp	r3, #0
 8003e5c:	d005      	beq.n	8003e6a <HAL_RCC_OscConfig+0x62>
 8003e5e:	687b      	ldr	r3, [r7, #4]
 8003e60:	699b      	ldr	r3, [r3, #24]
 8003e62:	2b00      	cmp	r3, #0
 8003e64:	d101      	bne.n	8003e6a <HAL_RCC_OscConfig+0x62>
 8003e66:	2301      	movs	r3, #1
 8003e68:	e3a2      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	6a1a      	ldr	r2, [r3, #32]
 8003e6e:	4b82      	ldr	r3, [pc, #520]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	f003 0308 	and.w	r3, r3, #8
 8003e76:	2b00      	cmp	r3, #0
 8003e78:	d004      	beq.n	8003e84 <HAL_RCC_OscConfig+0x7c>
 8003e7a:	4b7f      	ldr	r3, [pc, #508]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e7c:	681b      	ldr	r3, [r3, #0]
 8003e7e:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003e82:	e005      	b.n	8003e90 <HAL_RCC_OscConfig+0x88>
 8003e84:	4b7c      	ldr	r3, [pc, #496]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003e86:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8003e8a:	091b      	lsrs	r3, r3, #4
 8003e8c:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8003e90:	4293      	cmp	r3, r2
 8003e92:	d223      	bcs.n	8003edc <HAL_RCC_OscConfig+0xd4>
 8003e94:	687b      	ldr	r3, [r7, #4]
 8003e96:	6a1b      	ldr	r3, [r3, #32]
 8003e98:	4618      	mov	r0, r3
 8003e9a:	f000 fd55 	bl	8004948 <RCC_SetFlashLatencyFromMSIRange>
 8003e9e:	4603      	mov	r3, r0
 8003ea0:	2b00      	cmp	r3, #0
 8003ea2:	d001      	beq.n	8003ea8 <HAL_RCC_OscConfig+0xa0>
 8003ea4:	2301      	movs	r3, #1
 8003ea6:	e383      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003ea8:	4b73      	ldr	r3, [pc, #460]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	4a72      	ldr	r2, [pc, #456]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003eae:	f043 0308 	orr.w	r3, r3, #8
 8003eb2:	6013      	str	r3, [r2, #0]
 8003eb4:	4b70      	ldr	r3, [pc, #448]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	6a1b      	ldr	r3, [r3, #32]
 8003ec0:	496d      	ldr	r1, [pc, #436]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ec2:	4313      	orrs	r3, r2
 8003ec4:	600b      	str	r3, [r1, #0]
 8003ec6:	4b6c      	ldr	r3, [pc, #432]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ec8:	685b      	ldr	r3, [r3, #4]
 8003eca:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8003ece:	687b      	ldr	r3, [r7, #4]
 8003ed0:	69db      	ldr	r3, [r3, #28]
 8003ed2:	021b      	lsls	r3, r3, #8
 8003ed4:	4968      	ldr	r1, [pc, #416]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ed6:	4313      	orrs	r3, r2
 8003ed8:	604b      	str	r3, [r1, #4]
 8003eda:	e025      	b.n	8003f28 <HAL_RCC_OscConfig+0x120>
 8003edc:	4b66      	ldr	r3, [pc, #408]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ede:	681b      	ldr	r3, [r3, #0]
 8003ee0:	4a65      	ldr	r2, [pc, #404]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ee2:	f043 0308 	orr.w	r3, r3, #8
 8003ee6:	6013      	str	r3, [r2, #0]
 8003ee8:	4b63      	ldr	r3, [pc, #396]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003eea:	681b      	ldr	r3, [r3, #0]
 8003eec:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003ef0:	687b      	ldr	r3, [r7, #4]
 8003ef2:	6a1b      	ldr	r3, [r3, #32]
 8003ef4:	4960      	ldr	r1, [pc, #384]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ef6:	4313      	orrs	r3, r2
 8003ef8:	600b      	str	r3, [r1, #0]
 8003efa:	4b5f      	ldr	r3, [pc, #380]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003efc:	685b      	ldr	r3, [r3, #4]
 8003efe:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8003f02:	687b      	ldr	r3, [r7, #4]
 8003f04:	69db      	ldr	r3, [r3, #28]
 8003f06:	021b      	lsls	r3, r3, #8
 8003f08:	495b      	ldr	r1, [pc, #364]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f0a:	4313      	orrs	r3, r2
 8003f0c:	604b      	str	r3, [r1, #4]
 8003f0e:	69bb      	ldr	r3, [r7, #24]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	d109      	bne.n	8003f28 <HAL_RCC_OscConfig+0x120>
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	6a1b      	ldr	r3, [r3, #32]
 8003f18:	4618      	mov	r0, r3
 8003f1a:	f000 fd15 	bl	8004948 <RCC_SetFlashLatencyFromMSIRange>
 8003f1e:	4603      	mov	r3, r0
 8003f20:	2b00      	cmp	r3, #0
 8003f22:	d001      	beq.n	8003f28 <HAL_RCC_OscConfig+0x120>
 8003f24:	2301      	movs	r3, #1
 8003f26:	e343      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003f28:	f000 fc4a 	bl	80047c0 <HAL_RCC_GetSysClockFreq>
 8003f2c:	4602      	mov	r2, r0
 8003f2e:	4b52      	ldr	r3, [pc, #328]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f30:	689b      	ldr	r3, [r3, #8]
 8003f32:	091b      	lsrs	r3, r3, #4
 8003f34:	f003 030f 	and.w	r3, r3, #15
 8003f38:	4950      	ldr	r1, [pc, #320]	@ (800407c <HAL_RCC_OscConfig+0x274>)
 8003f3a:	5ccb      	ldrb	r3, [r1, r3]
 8003f3c:	f003 031f 	and.w	r3, r3, #31
 8003f40:	fa22 f303 	lsr.w	r3, r2, r3
 8003f44:	4a4e      	ldr	r2, [pc, #312]	@ (8004080 <HAL_RCC_OscConfig+0x278>)
 8003f46:	6013      	str	r3, [r2, #0]
 8003f48:	4b4e      	ldr	r3, [pc, #312]	@ (8004084 <HAL_RCC_OscConfig+0x27c>)
 8003f4a:	681b      	ldr	r3, [r3, #0]
 8003f4c:	4618      	mov	r0, r3
 8003f4e:	f7fe f97b 	bl	8002248 <HAL_InitTick>
 8003f52:	4603      	mov	r3, r0
 8003f54:	73fb      	strb	r3, [r7, #15]
 8003f56:	7bfb      	ldrb	r3, [r7, #15]
 8003f58:	2b00      	cmp	r3, #0
 8003f5a:	d052      	beq.n	8004002 <HAL_RCC_OscConfig+0x1fa>
 8003f5c:	7bfb      	ldrb	r3, [r7, #15]
 8003f5e:	e327      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003f60:	687b      	ldr	r3, [r7, #4]
 8003f62:	699b      	ldr	r3, [r3, #24]
 8003f64:	2b00      	cmp	r3, #0
 8003f66:	d032      	beq.n	8003fce <HAL_RCC_OscConfig+0x1c6>
 8003f68:	4b43      	ldr	r3, [pc, #268]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f6a:	681b      	ldr	r3, [r3, #0]
 8003f6c:	4a42      	ldr	r2, [pc, #264]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f6e:	f043 0301 	orr.w	r3, r3, #1
 8003f72:	6013      	str	r3, [r2, #0]
 8003f74:	f7fe f9b8 	bl	80022e8 <HAL_GetTick>
 8003f78:	6138      	str	r0, [r7, #16]
 8003f7a:	e008      	b.n	8003f8e <HAL_RCC_OscConfig+0x186>
 8003f7c:	f7fe f9b4 	bl	80022e8 <HAL_GetTick>
 8003f80:	4602      	mov	r2, r0
 8003f82:	693b      	ldr	r3, [r7, #16]
 8003f84:	1ad3      	subs	r3, r2, r3
 8003f86:	2b02      	cmp	r3, #2
 8003f88:	d901      	bls.n	8003f8e <HAL_RCC_OscConfig+0x186>
 8003f8a:	2303      	movs	r3, #3
 8003f8c:	e310      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003f8e:	4b3a      	ldr	r3, [pc, #232]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	f003 0302 	and.w	r3, r3, #2
 8003f96:	2b00      	cmp	r3, #0
 8003f98:	d0f0      	beq.n	8003f7c <HAL_RCC_OscConfig+0x174>
 8003f9a:	4b37      	ldr	r3, [pc, #220]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003f9c:	681b      	ldr	r3, [r3, #0]
 8003f9e:	4a36      	ldr	r2, [pc, #216]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fa0:	f043 0308 	orr.w	r3, r3, #8
 8003fa4:	6013      	str	r3, [r2, #0]
 8003fa6:	4b34      	ldr	r3, [pc, #208]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fa8:	681b      	ldr	r3, [r3, #0]
 8003faa:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003fae:	687b      	ldr	r3, [r7, #4]
 8003fb0:	6a1b      	ldr	r3, [r3, #32]
 8003fb2:	4931      	ldr	r1, [pc, #196]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fb4:	4313      	orrs	r3, r2
 8003fb6:	600b      	str	r3, [r1, #0]
 8003fb8:	4b2f      	ldr	r3, [pc, #188]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fba:	685b      	ldr	r3, [r3, #4]
 8003fbc:	f423 427f 	bic.w	r2, r3, #65280	@ 0xff00
 8003fc0:	687b      	ldr	r3, [r7, #4]
 8003fc2:	69db      	ldr	r3, [r3, #28]
 8003fc4:	021b      	lsls	r3, r3, #8
 8003fc6:	492c      	ldr	r1, [pc, #176]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fc8:	4313      	orrs	r3, r2
 8003fca:	604b      	str	r3, [r1, #4]
 8003fcc:	e01a      	b.n	8004004 <HAL_RCC_OscConfig+0x1fc>
 8003fce:	4b2a      	ldr	r3, [pc, #168]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fd0:	681b      	ldr	r3, [r3, #0]
 8003fd2:	4a29      	ldr	r2, [pc, #164]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003fd4:	f023 0301 	bic.w	r3, r3, #1
 8003fd8:	6013      	str	r3, [r2, #0]
 8003fda:	f7fe f985 	bl	80022e8 <HAL_GetTick>
 8003fde:	6138      	str	r0, [r7, #16]
 8003fe0:	e008      	b.n	8003ff4 <HAL_RCC_OscConfig+0x1ec>
 8003fe2:	f7fe f981 	bl	80022e8 <HAL_GetTick>
 8003fe6:	4602      	mov	r2, r0
 8003fe8:	693b      	ldr	r3, [r7, #16]
 8003fea:	1ad3      	subs	r3, r2, r3
 8003fec:	2b02      	cmp	r3, #2
 8003fee:	d901      	bls.n	8003ff4 <HAL_RCC_OscConfig+0x1ec>
 8003ff0:	2303      	movs	r3, #3
 8003ff2:	e2dd      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8003ff4:	4b20      	ldr	r3, [pc, #128]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	f003 0302 	and.w	r3, r3, #2
 8003ffc:	2b00      	cmp	r3, #0
 8003ffe:	d1f0      	bne.n	8003fe2 <HAL_RCC_OscConfig+0x1da>
 8004000:	e000      	b.n	8004004 <HAL_RCC_OscConfig+0x1fc>
 8004002:	bf00      	nop
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	681b      	ldr	r3, [r3, #0]
 8004008:	f003 0301 	and.w	r3, r3, #1
 800400c:	2b00      	cmp	r3, #0
 800400e:	d074      	beq.n	80040fa <HAL_RCC_OscConfig+0x2f2>
 8004010:	69bb      	ldr	r3, [r7, #24]
 8004012:	2b08      	cmp	r3, #8
 8004014:	d005      	beq.n	8004022 <HAL_RCC_OscConfig+0x21a>
 8004016:	69bb      	ldr	r3, [r7, #24]
 8004018:	2b0c      	cmp	r3, #12
 800401a:	d10e      	bne.n	800403a <HAL_RCC_OscConfig+0x232>
 800401c:	697b      	ldr	r3, [r7, #20]
 800401e:	2b03      	cmp	r3, #3
 8004020:	d10b      	bne.n	800403a <HAL_RCC_OscConfig+0x232>
 8004022:	4b15      	ldr	r3, [pc, #84]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800402a:	2b00      	cmp	r3, #0
 800402c:	d064      	beq.n	80040f8 <HAL_RCC_OscConfig+0x2f0>
 800402e:	687b      	ldr	r3, [r7, #4]
 8004030:	685b      	ldr	r3, [r3, #4]
 8004032:	2b00      	cmp	r3, #0
 8004034:	d160      	bne.n	80040f8 <HAL_RCC_OscConfig+0x2f0>
 8004036:	2301      	movs	r3, #1
 8004038:	e2ba      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 800403a:	687b      	ldr	r3, [r7, #4]
 800403c:	685b      	ldr	r3, [r3, #4]
 800403e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004042:	d106      	bne.n	8004052 <HAL_RCC_OscConfig+0x24a>
 8004044:	4b0c      	ldr	r3, [pc, #48]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8004046:	681b      	ldr	r3, [r3, #0]
 8004048:	4a0b      	ldr	r2, [pc, #44]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 800404a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800404e:	6013      	str	r3, [r2, #0]
 8004050:	e026      	b.n	80040a0 <HAL_RCC_OscConfig+0x298>
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	685b      	ldr	r3, [r3, #4]
 8004056:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 800405a:	d115      	bne.n	8004088 <HAL_RCC_OscConfig+0x280>
 800405c:	4b06      	ldr	r3, [pc, #24]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	4a05      	ldr	r2, [pc, #20]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 8004062:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004066:	6013      	str	r3, [r2, #0]
 8004068:	4b03      	ldr	r3, [pc, #12]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	4a02      	ldr	r2, [pc, #8]	@ (8004078 <HAL_RCC_OscConfig+0x270>)
 800406e:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004072:	6013      	str	r3, [r2, #0]
 8004074:	e014      	b.n	80040a0 <HAL_RCC_OscConfig+0x298>
 8004076:	bf00      	nop
 8004078:	40021000 	.word	0x40021000
 800407c:	08008b5c 	.word	0x08008b5c
 8004080:	20000000 	.word	0x20000000
 8004084:	20000004 	.word	0x20000004
 8004088:	4ba0      	ldr	r3, [pc, #640]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	4a9f      	ldr	r2, [pc, #636]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800408e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004092:	6013      	str	r3, [r2, #0]
 8004094:	4b9d      	ldr	r3, [pc, #628]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	4a9c      	ldr	r2, [pc, #624]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800409a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800409e:	6013      	str	r3, [r2, #0]
 80040a0:	687b      	ldr	r3, [r7, #4]
 80040a2:	685b      	ldr	r3, [r3, #4]
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d013      	beq.n	80040d0 <HAL_RCC_OscConfig+0x2c8>
 80040a8:	f7fe f91e 	bl	80022e8 <HAL_GetTick>
 80040ac:	6138      	str	r0, [r7, #16]
 80040ae:	e008      	b.n	80040c2 <HAL_RCC_OscConfig+0x2ba>
 80040b0:	f7fe f91a 	bl	80022e8 <HAL_GetTick>
 80040b4:	4602      	mov	r2, r0
 80040b6:	693b      	ldr	r3, [r7, #16]
 80040b8:	1ad3      	subs	r3, r2, r3
 80040ba:	2b64      	cmp	r3, #100	@ 0x64
 80040bc:	d901      	bls.n	80040c2 <HAL_RCC_OscConfig+0x2ba>
 80040be:	2303      	movs	r3, #3
 80040c0:	e276      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80040c2:	4b92      	ldr	r3, [pc, #584]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80040c4:	681b      	ldr	r3, [r3, #0]
 80040c6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d0f0      	beq.n	80040b0 <HAL_RCC_OscConfig+0x2a8>
 80040ce:	e014      	b.n	80040fa <HAL_RCC_OscConfig+0x2f2>
 80040d0:	f7fe f90a 	bl	80022e8 <HAL_GetTick>
 80040d4:	6138      	str	r0, [r7, #16]
 80040d6:	e008      	b.n	80040ea <HAL_RCC_OscConfig+0x2e2>
 80040d8:	f7fe f906 	bl	80022e8 <HAL_GetTick>
 80040dc:	4602      	mov	r2, r0
 80040de:	693b      	ldr	r3, [r7, #16]
 80040e0:	1ad3      	subs	r3, r2, r3
 80040e2:	2b64      	cmp	r3, #100	@ 0x64
 80040e4:	d901      	bls.n	80040ea <HAL_RCC_OscConfig+0x2e2>
 80040e6:	2303      	movs	r3, #3
 80040e8:	e262      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80040ea:	4b88      	ldr	r3, [pc, #544]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80040ec:	681b      	ldr	r3, [r3, #0]
 80040ee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d1f0      	bne.n	80040d8 <HAL_RCC_OscConfig+0x2d0>
 80040f6:	e000      	b.n	80040fa <HAL_RCC_OscConfig+0x2f2>
 80040f8:	bf00      	nop
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	f003 0302 	and.w	r3, r3, #2
 8004102:	2b00      	cmp	r3, #0
 8004104:	d060      	beq.n	80041c8 <HAL_RCC_OscConfig+0x3c0>
 8004106:	69bb      	ldr	r3, [r7, #24]
 8004108:	2b04      	cmp	r3, #4
 800410a:	d005      	beq.n	8004118 <HAL_RCC_OscConfig+0x310>
 800410c:	69bb      	ldr	r3, [r7, #24]
 800410e:	2b0c      	cmp	r3, #12
 8004110:	d119      	bne.n	8004146 <HAL_RCC_OscConfig+0x33e>
 8004112:	697b      	ldr	r3, [r7, #20]
 8004114:	2b02      	cmp	r3, #2
 8004116:	d116      	bne.n	8004146 <HAL_RCC_OscConfig+0x33e>
 8004118:	4b7c      	ldr	r3, [pc, #496]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800411a:	681b      	ldr	r3, [r3, #0]
 800411c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004120:	2b00      	cmp	r3, #0
 8004122:	d005      	beq.n	8004130 <HAL_RCC_OscConfig+0x328>
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	68db      	ldr	r3, [r3, #12]
 8004128:	2b00      	cmp	r3, #0
 800412a:	d101      	bne.n	8004130 <HAL_RCC_OscConfig+0x328>
 800412c:	2301      	movs	r3, #1
 800412e:	e23f      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004130:	4b76      	ldr	r3, [pc, #472]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004132:	685b      	ldr	r3, [r3, #4]
 8004134:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	691b      	ldr	r3, [r3, #16]
 800413c:	061b      	lsls	r3, r3, #24
 800413e:	4973      	ldr	r1, [pc, #460]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004140:	4313      	orrs	r3, r2
 8004142:	604b      	str	r3, [r1, #4]
 8004144:	e040      	b.n	80041c8 <HAL_RCC_OscConfig+0x3c0>
 8004146:	687b      	ldr	r3, [r7, #4]
 8004148:	68db      	ldr	r3, [r3, #12]
 800414a:	2b00      	cmp	r3, #0
 800414c:	d023      	beq.n	8004196 <HAL_RCC_OscConfig+0x38e>
 800414e:	4b6f      	ldr	r3, [pc, #444]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004150:	681b      	ldr	r3, [r3, #0]
 8004152:	4a6e      	ldr	r2, [pc, #440]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004154:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004158:	6013      	str	r3, [r2, #0]
 800415a:	f7fe f8c5 	bl	80022e8 <HAL_GetTick>
 800415e:	6138      	str	r0, [r7, #16]
 8004160:	e008      	b.n	8004174 <HAL_RCC_OscConfig+0x36c>
 8004162:	f7fe f8c1 	bl	80022e8 <HAL_GetTick>
 8004166:	4602      	mov	r2, r0
 8004168:	693b      	ldr	r3, [r7, #16]
 800416a:	1ad3      	subs	r3, r2, r3
 800416c:	2b02      	cmp	r3, #2
 800416e:	d901      	bls.n	8004174 <HAL_RCC_OscConfig+0x36c>
 8004170:	2303      	movs	r3, #3
 8004172:	e21d      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004174:	4b65      	ldr	r3, [pc, #404]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004176:	681b      	ldr	r3, [r3, #0]
 8004178:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800417c:	2b00      	cmp	r3, #0
 800417e:	d0f0      	beq.n	8004162 <HAL_RCC_OscConfig+0x35a>
 8004180:	4b62      	ldr	r3, [pc, #392]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004182:	685b      	ldr	r3, [r3, #4]
 8004184:	f023 52f8 	bic.w	r2, r3, #520093696	@ 0x1f000000
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	691b      	ldr	r3, [r3, #16]
 800418c:	061b      	lsls	r3, r3, #24
 800418e:	495f      	ldr	r1, [pc, #380]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004190:	4313      	orrs	r3, r2
 8004192:	604b      	str	r3, [r1, #4]
 8004194:	e018      	b.n	80041c8 <HAL_RCC_OscConfig+0x3c0>
 8004196:	4b5d      	ldr	r3, [pc, #372]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004198:	681b      	ldr	r3, [r3, #0]
 800419a:	4a5c      	ldr	r2, [pc, #368]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800419c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80041a0:	6013      	str	r3, [r2, #0]
 80041a2:	f7fe f8a1 	bl	80022e8 <HAL_GetTick>
 80041a6:	6138      	str	r0, [r7, #16]
 80041a8:	e008      	b.n	80041bc <HAL_RCC_OscConfig+0x3b4>
 80041aa:	f7fe f89d 	bl	80022e8 <HAL_GetTick>
 80041ae:	4602      	mov	r2, r0
 80041b0:	693b      	ldr	r3, [r7, #16]
 80041b2:	1ad3      	subs	r3, r2, r3
 80041b4:	2b02      	cmp	r3, #2
 80041b6:	d901      	bls.n	80041bc <HAL_RCC_OscConfig+0x3b4>
 80041b8:	2303      	movs	r3, #3
 80041ba:	e1f9      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80041bc:	4b53      	ldr	r3, [pc, #332]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80041be:	681b      	ldr	r3, [r3, #0]
 80041c0:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80041c4:	2b00      	cmp	r3, #0
 80041c6:	d1f0      	bne.n	80041aa <HAL_RCC_OscConfig+0x3a2>
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	681b      	ldr	r3, [r3, #0]
 80041cc:	f003 0308 	and.w	r3, r3, #8
 80041d0:	2b00      	cmp	r3, #0
 80041d2:	d03c      	beq.n	800424e <HAL_RCC_OscConfig+0x446>
 80041d4:	687b      	ldr	r3, [r7, #4]
 80041d6:	695b      	ldr	r3, [r3, #20]
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d01c      	beq.n	8004216 <HAL_RCC_OscConfig+0x40e>
 80041dc:	4b4b      	ldr	r3, [pc, #300]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80041de:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80041e2:	4a4a      	ldr	r2, [pc, #296]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80041e4:	f043 0301 	orr.w	r3, r3, #1
 80041e8:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 80041ec:	f7fe f87c 	bl	80022e8 <HAL_GetTick>
 80041f0:	6138      	str	r0, [r7, #16]
 80041f2:	e008      	b.n	8004206 <HAL_RCC_OscConfig+0x3fe>
 80041f4:	f7fe f878 	bl	80022e8 <HAL_GetTick>
 80041f8:	4602      	mov	r2, r0
 80041fa:	693b      	ldr	r3, [r7, #16]
 80041fc:	1ad3      	subs	r3, r2, r3
 80041fe:	2b02      	cmp	r3, #2
 8004200:	d901      	bls.n	8004206 <HAL_RCC_OscConfig+0x3fe>
 8004202:	2303      	movs	r3, #3
 8004204:	e1d4      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004206:	4b41      	ldr	r3, [pc, #260]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004208:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800420c:	f003 0302 	and.w	r3, r3, #2
 8004210:	2b00      	cmp	r3, #0
 8004212:	d0ef      	beq.n	80041f4 <HAL_RCC_OscConfig+0x3ec>
 8004214:	e01b      	b.n	800424e <HAL_RCC_OscConfig+0x446>
 8004216:	4b3d      	ldr	r3, [pc, #244]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004218:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 800421c:	4a3b      	ldr	r2, [pc, #236]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800421e:	f023 0301 	bic.w	r3, r3, #1
 8004222:	f8c2 3094 	str.w	r3, [r2, #148]	@ 0x94
 8004226:	f7fe f85f 	bl	80022e8 <HAL_GetTick>
 800422a:	6138      	str	r0, [r7, #16]
 800422c:	e008      	b.n	8004240 <HAL_RCC_OscConfig+0x438>
 800422e:	f7fe f85b 	bl	80022e8 <HAL_GetTick>
 8004232:	4602      	mov	r2, r0
 8004234:	693b      	ldr	r3, [r7, #16]
 8004236:	1ad3      	subs	r3, r2, r3
 8004238:	2b02      	cmp	r3, #2
 800423a:	d901      	bls.n	8004240 <HAL_RCC_OscConfig+0x438>
 800423c:	2303      	movs	r3, #3
 800423e:	e1b7      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004240:	4b32      	ldr	r3, [pc, #200]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004242:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004246:	f003 0302 	and.w	r3, r3, #2
 800424a:	2b00      	cmp	r3, #0
 800424c:	d1ef      	bne.n	800422e <HAL_RCC_OscConfig+0x426>
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	f003 0304 	and.w	r3, r3, #4
 8004256:	2b00      	cmp	r3, #0
 8004258:	f000 80a6 	beq.w	80043a8 <HAL_RCC_OscConfig+0x5a0>
 800425c:	2300      	movs	r3, #0
 800425e:	77fb      	strb	r3, [r7, #31]
 8004260:	4b2a      	ldr	r3, [pc, #168]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004262:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004264:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004268:	2b00      	cmp	r3, #0
 800426a:	d10d      	bne.n	8004288 <HAL_RCC_OscConfig+0x480>
 800426c:	4b27      	ldr	r3, [pc, #156]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800426e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004270:	4a26      	ldr	r2, [pc, #152]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004272:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004276:	6593      	str	r3, [r2, #88]	@ 0x58
 8004278:	4b24      	ldr	r3, [pc, #144]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 800427a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800427c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004280:	60bb      	str	r3, [r7, #8]
 8004282:	68bb      	ldr	r3, [r7, #8]
 8004284:	2301      	movs	r3, #1
 8004286:	77fb      	strb	r3, [r7, #31]
 8004288:	4b21      	ldr	r3, [pc, #132]	@ (8004310 <HAL_RCC_OscConfig+0x508>)
 800428a:	681b      	ldr	r3, [r3, #0]
 800428c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004290:	2b00      	cmp	r3, #0
 8004292:	d118      	bne.n	80042c6 <HAL_RCC_OscConfig+0x4be>
 8004294:	4b1e      	ldr	r3, [pc, #120]	@ (8004310 <HAL_RCC_OscConfig+0x508>)
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	4a1d      	ldr	r2, [pc, #116]	@ (8004310 <HAL_RCC_OscConfig+0x508>)
 800429a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800429e:	6013      	str	r3, [r2, #0]
 80042a0:	f7fe f822 	bl	80022e8 <HAL_GetTick>
 80042a4:	6138      	str	r0, [r7, #16]
 80042a6:	e008      	b.n	80042ba <HAL_RCC_OscConfig+0x4b2>
 80042a8:	f7fe f81e 	bl	80022e8 <HAL_GetTick>
 80042ac:	4602      	mov	r2, r0
 80042ae:	693b      	ldr	r3, [r7, #16]
 80042b0:	1ad3      	subs	r3, r2, r3
 80042b2:	2b02      	cmp	r3, #2
 80042b4:	d901      	bls.n	80042ba <HAL_RCC_OscConfig+0x4b2>
 80042b6:	2303      	movs	r3, #3
 80042b8:	e17a      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80042ba:	4b15      	ldr	r3, [pc, #84]	@ (8004310 <HAL_RCC_OscConfig+0x508>)
 80042bc:	681b      	ldr	r3, [r3, #0]
 80042be:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80042c2:	2b00      	cmp	r3, #0
 80042c4:	d0f0      	beq.n	80042a8 <HAL_RCC_OscConfig+0x4a0>
 80042c6:	687b      	ldr	r3, [r7, #4]
 80042c8:	689b      	ldr	r3, [r3, #8]
 80042ca:	2b01      	cmp	r3, #1
 80042cc:	d108      	bne.n	80042e0 <HAL_RCC_OscConfig+0x4d8>
 80042ce:	4b0f      	ldr	r3, [pc, #60]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80042d0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042d4:	4a0d      	ldr	r2, [pc, #52]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80042d6:	f043 0301 	orr.w	r3, r3, #1
 80042da:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80042de:	e029      	b.n	8004334 <HAL_RCC_OscConfig+0x52c>
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	689b      	ldr	r3, [r3, #8]
 80042e4:	2b05      	cmp	r3, #5
 80042e6:	d115      	bne.n	8004314 <HAL_RCC_OscConfig+0x50c>
 80042e8:	4b08      	ldr	r3, [pc, #32]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80042ea:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042ee:	4a07      	ldr	r2, [pc, #28]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80042f0:	f043 0304 	orr.w	r3, r3, #4
 80042f4:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 80042f8:	4b04      	ldr	r3, [pc, #16]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 80042fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80042fe:	4a03      	ldr	r2, [pc, #12]	@ (800430c <HAL_RCC_OscConfig+0x504>)
 8004300:	f043 0301 	orr.w	r3, r3, #1
 8004304:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004308:	e014      	b.n	8004334 <HAL_RCC_OscConfig+0x52c>
 800430a:	bf00      	nop
 800430c:	40021000 	.word	0x40021000
 8004310:	40007000 	.word	0x40007000
 8004314:	4b9c      	ldr	r3, [pc, #624]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004316:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800431a:	4a9b      	ldr	r2, [pc, #620]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800431c:	f023 0301 	bic.w	r3, r3, #1
 8004320:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004324:	4b98      	ldr	r3, [pc, #608]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004326:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800432a:	4a97      	ldr	r2, [pc, #604]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800432c:	f023 0304 	bic.w	r3, r3, #4
 8004330:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	689b      	ldr	r3, [r3, #8]
 8004338:	2b00      	cmp	r3, #0
 800433a:	d016      	beq.n	800436a <HAL_RCC_OscConfig+0x562>
 800433c:	f7fd ffd4 	bl	80022e8 <HAL_GetTick>
 8004340:	6138      	str	r0, [r7, #16]
 8004342:	e00a      	b.n	800435a <HAL_RCC_OscConfig+0x552>
 8004344:	f7fd ffd0 	bl	80022e8 <HAL_GetTick>
 8004348:	4602      	mov	r2, r0
 800434a:	693b      	ldr	r3, [r7, #16]
 800434c:	1ad3      	subs	r3, r2, r3
 800434e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004352:	4293      	cmp	r3, r2
 8004354:	d901      	bls.n	800435a <HAL_RCC_OscConfig+0x552>
 8004356:	2303      	movs	r3, #3
 8004358:	e12a      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 800435a:	4b8b      	ldr	r3, [pc, #556]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800435c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004360:	f003 0302 	and.w	r3, r3, #2
 8004364:	2b00      	cmp	r3, #0
 8004366:	d0ed      	beq.n	8004344 <HAL_RCC_OscConfig+0x53c>
 8004368:	e015      	b.n	8004396 <HAL_RCC_OscConfig+0x58e>
 800436a:	f7fd ffbd 	bl	80022e8 <HAL_GetTick>
 800436e:	6138      	str	r0, [r7, #16]
 8004370:	e00a      	b.n	8004388 <HAL_RCC_OscConfig+0x580>
 8004372:	f7fd ffb9 	bl	80022e8 <HAL_GetTick>
 8004376:	4602      	mov	r2, r0
 8004378:	693b      	ldr	r3, [r7, #16]
 800437a:	1ad3      	subs	r3, r2, r3
 800437c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004380:	4293      	cmp	r3, r2
 8004382:	d901      	bls.n	8004388 <HAL_RCC_OscConfig+0x580>
 8004384:	2303      	movs	r3, #3
 8004386:	e113      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004388:	4b7f      	ldr	r3, [pc, #508]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800438a:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800438e:	f003 0302 	and.w	r3, r3, #2
 8004392:	2b00      	cmp	r3, #0
 8004394:	d1ed      	bne.n	8004372 <HAL_RCC_OscConfig+0x56a>
 8004396:	7ffb      	ldrb	r3, [r7, #31]
 8004398:	2b01      	cmp	r3, #1
 800439a:	d105      	bne.n	80043a8 <HAL_RCC_OscConfig+0x5a0>
 800439c:	4b7a      	ldr	r3, [pc, #488]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800439e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80043a0:	4a79      	ldr	r2, [pc, #484]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80043a2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80043a6:	6593      	str	r3, [r2, #88]	@ 0x58
 80043a8:	687b      	ldr	r3, [r7, #4]
 80043aa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043ac:	2b00      	cmp	r3, #0
 80043ae:	f000 80fe 	beq.w	80045ae <HAL_RCC_OscConfig+0x7a6>
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80043b6:	2b02      	cmp	r3, #2
 80043b8:	f040 80d0 	bne.w	800455c <HAL_RCC_OscConfig+0x754>
 80043bc:	4b72      	ldr	r3, [pc, #456]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80043be:	68db      	ldr	r3, [r3, #12]
 80043c0:	617b      	str	r3, [r7, #20]
 80043c2:	697b      	ldr	r3, [r7, #20]
 80043c4:	f003 0203 	and.w	r2, r3, #3
 80043c8:	687b      	ldr	r3, [r7, #4]
 80043ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80043cc:	429a      	cmp	r2, r3
 80043ce:	d130      	bne.n	8004432 <HAL_RCC_OscConfig+0x62a>
 80043d0:	697b      	ldr	r3, [r7, #20]
 80043d2:	f003 0270 	and.w	r2, r3, #112	@ 0x70
 80043d6:	687b      	ldr	r3, [r7, #4]
 80043d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80043da:	3b01      	subs	r3, #1
 80043dc:	011b      	lsls	r3, r3, #4
 80043de:	429a      	cmp	r2, r3
 80043e0:	d127      	bne.n	8004432 <HAL_RCC_OscConfig+0x62a>
 80043e2:	697b      	ldr	r3, [r7, #20]
 80043e4:	f403 42fe 	and.w	r2, r3, #32512	@ 0x7f00
 80043e8:	687b      	ldr	r3, [r7, #4]
 80043ea:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80043ec:	021b      	lsls	r3, r3, #8
 80043ee:	429a      	cmp	r2, r3
 80043f0:	d11f      	bne.n	8004432 <HAL_RCC_OscConfig+0x62a>
 80043f2:	697b      	ldr	r3, [r7, #20]
 80043f4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80043f8:	687a      	ldr	r2, [r7, #4]
 80043fa:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80043fc:	2a07      	cmp	r2, #7
 80043fe:	bf14      	ite	ne
 8004400:	2201      	movne	r2, #1
 8004402:	2200      	moveq	r2, #0
 8004404:	b2d2      	uxtb	r2, r2
 8004406:	4293      	cmp	r3, r2
 8004408:	d113      	bne.n	8004432 <HAL_RCC_OscConfig+0x62a>
 800440a:	697b      	ldr	r3, [r7, #20]
 800440c:	f403 02c0 	and.w	r2, r3, #6291456	@ 0x600000
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004414:	085b      	lsrs	r3, r3, #1
 8004416:	3b01      	subs	r3, #1
 8004418:	055b      	lsls	r3, r3, #21
 800441a:	429a      	cmp	r2, r3
 800441c:	d109      	bne.n	8004432 <HAL_RCC_OscConfig+0x62a>
 800441e:	697b      	ldr	r3, [r7, #20]
 8004420:	f003 62c0 	and.w	r2, r3, #100663296	@ 0x6000000
 8004424:	687b      	ldr	r3, [r7, #4]
 8004426:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004428:	085b      	lsrs	r3, r3, #1
 800442a:	3b01      	subs	r3, #1
 800442c:	065b      	lsls	r3, r3, #25
 800442e:	429a      	cmp	r2, r3
 8004430:	d06e      	beq.n	8004510 <HAL_RCC_OscConfig+0x708>
 8004432:	69bb      	ldr	r3, [r7, #24]
 8004434:	2b0c      	cmp	r3, #12
 8004436:	d069      	beq.n	800450c <HAL_RCC_OscConfig+0x704>
 8004438:	4b53      	ldr	r3, [pc, #332]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800443a:	681b      	ldr	r3, [r3, #0]
 800443c:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8004440:	2b00      	cmp	r3, #0
 8004442:	d105      	bne.n	8004450 <HAL_RCC_OscConfig+0x648>
 8004444:	4b50      	ldr	r3, [pc, #320]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800444c:	2b00      	cmp	r3, #0
 800444e:	d001      	beq.n	8004454 <HAL_RCC_OscConfig+0x64c>
 8004450:	2301      	movs	r3, #1
 8004452:	e0ad      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004454:	4b4c      	ldr	r3, [pc, #304]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004456:	681b      	ldr	r3, [r3, #0]
 8004458:	4a4b      	ldr	r2, [pc, #300]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800445a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800445e:	6013      	str	r3, [r2, #0]
 8004460:	f7fd ff42 	bl	80022e8 <HAL_GetTick>
 8004464:	6138      	str	r0, [r7, #16]
 8004466:	e008      	b.n	800447a <HAL_RCC_OscConfig+0x672>
 8004468:	f7fd ff3e 	bl	80022e8 <HAL_GetTick>
 800446c:	4602      	mov	r2, r0
 800446e:	693b      	ldr	r3, [r7, #16]
 8004470:	1ad3      	subs	r3, r2, r3
 8004472:	2b02      	cmp	r3, #2
 8004474:	d901      	bls.n	800447a <HAL_RCC_OscConfig+0x672>
 8004476:	2303      	movs	r3, #3
 8004478:	e09a      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 800447a:	4b43      	ldr	r3, [pc, #268]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004482:	2b00      	cmp	r3, #0
 8004484:	d1f0      	bne.n	8004468 <HAL_RCC_OscConfig+0x660>
 8004486:	4b40      	ldr	r3, [pc, #256]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004488:	68da      	ldr	r2, [r3, #12]
 800448a:	4b40      	ldr	r3, [pc, #256]	@ (800458c <HAL_RCC_OscConfig+0x784>)
 800448c:	4013      	ands	r3, r2
 800448e:	687a      	ldr	r2, [r7, #4]
 8004490:	6ad1      	ldr	r1, [r2, #44]	@ 0x2c
 8004492:	687a      	ldr	r2, [r7, #4]
 8004494:	6b12      	ldr	r2, [r2, #48]	@ 0x30
 8004496:	3a01      	subs	r2, #1
 8004498:	0112      	lsls	r2, r2, #4
 800449a:	4311      	orrs	r1, r2
 800449c:	687a      	ldr	r2, [r7, #4]
 800449e:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 80044a0:	0212      	lsls	r2, r2, #8
 80044a2:	4311      	orrs	r1, r2
 80044a4:	687a      	ldr	r2, [r7, #4]
 80044a6:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 80044a8:	0852      	lsrs	r2, r2, #1
 80044aa:	3a01      	subs	r2, #1
 80044ac:	0552      	lsls	r2, r2, #21
 80044ae:	4311      	orrs	r1, r2
 80044b0:	687a      	ldr	r2, [r7, #4]
 80044b2:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80044b4:	0852      	lsrs	r2, r2, #1
 80044b6:	3a01      	subs	r2, #1
 80044b8:	0652      	lsls	r2, r2, #25
 80044ba:	4311      	orrs	r1, r2
 80044bc:	687a      	ldr	r2, [r7, #4]
 80044be:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80044c0:	0912      	lsrs	r2, r2, #4
 80044c2:	0452      	lsls	r2, r2, #17
 80044c4:	430a      	orrs	r2, r1
 80044c6:	4930      	ldr	r1, [pc, #192]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80044c8:	4313      	orrs	r3, r2
 80044ca:	60cb      	str	r3, [r1, #12]
 80044cc:	4b2e      	ldr	r3, [pc, #184]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	4a2d      	ldr	r2, [pc, #180]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80044d2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80044d6:	6013      	str	r3, [r2, #0]
 80044d8:	4b2b      	ldr	r3, [pc, #172]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80044da:	68db      	ldr	r3, [r3, #12]
 80044dc:	4a2a      	ldr	r2, [pc, #168]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 80044de:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80044e2:	60d3      	str	r3, [r2, #12]
 80044e4:	f7fd ff00 	bl	80022e8 <HAL_GetTick>
 80044e8:	6138      	str	r0, [r7, #16]
 80044ea:	e008      	b.n	80044fe <HAL_RCC_OscConfig+0x6f6>
 80044ec:	f7fd fefc 	bl	80022e8 <HAL_GetTick>
 80044f0:	4602      	mov	r2, r0
 80044f2:	693b      	ldr	r3, [r7, #16]
 80044f4:	1ad3      	subs	r3, r2, r3
 80044f6:	2b02      	cmp	r3, #2
 80044f8:	d901      	bls.n	80044fe <HAL_RCC_OscConfig+0x6f6>
 80044fa:	2303      	movs	r3, #3
 80044fc:	e058      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80044fe:	4b22      	ldr	r3, [pc, #136]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004506:	2b00      	cmp	r3, #0
 8004508:	d0f0      	beq.n	80044ec <HAL_RCC_OscConfig+0x6e4>
 800450a:	e050      	b.n	80045ae <HAL_RCC_OscConfig+0x7a6>
 800450c:	2301      	movs	r3, #1
 800450e:	e04f      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004510:	4b1d      	ldr	r3, [pc, #116]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004518:	2b00      	cmp	r3, #0
 800451a:	d148      	bne.n	80045ae <HAL_RCC_OscConfig+0x7a6>
 800451c:	4b1a      	ldr	r3, [pc, #104]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	4a19      	ldr	r2, [pc, #100]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004522:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8004526:	6013      	str	r3, [r2, #0]
 8004528:	4b17      	ldr	r3, [pc, #92]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800452a:	68db      	ldr	r3, [r3, #12]
 800452c:	4a16      	ldr	r2, [pc, #88]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 800452e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8004532:	60d3      	str	r3, [r2, #12]
 8004534:	f7fd fed8 	bl	80022e8 <HAL_GetTick>
 8004538:	6138      	str	r0, [r7, #16]
 800453a:	e008      	b.n	800454e <HAL_RCC_OscConfig+0x746>
 800453c:	f7fd fed4 	bl	80022e8 <HAL_GetTick>
 8004540:	4602      	mov	r2, r0
 8004542:	693b      	ldr	r3, [r7, #16]
 8004544:	1ad3      	subs	r3, r2, r3
 8004546:	2b02      	cmp	r3, #2
 8004548:	d901      	bls.n	800454e <HAL_RCC_OscConfig+0x746>
 800454a:	2303      	movs	r3, #3
 800454c:	e030      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 800454e:	4b0e      	ldr	r3, [pc, #56]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004550:	681b      	ldr	r3, [r3, #0]
 8004552:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004556:	2b00      	cmp	r3, #0
 8004558:	d0f0      	beq.n	800453c <HAL_RCC_OscConfig+0x734>
 800455a:	e028      	b.n	80045ae <HAL_RCC_OscConfig+0x7a6>
 800455c:	69bb      	ldr	r3, [r7, #24]
 800455e:	2b0c      	cmp	r3, #12
 8004560:	d023      	beq.n	80045aa <HAL_RCC_OscConfig+0x7a2>
 8004562:	4b09      	ldr	r3, [pc, #36]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004564:	681b      	ldr	r3, [r3, #0]
 8004566:	4a08      	ldr	r2, [pc, #32]	@ (8004588 <HAL_RCC_OscConfig+0x780>)
 8004568:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800456c:	6013      	str	r3, [r2, #0]
 800456e:	f7fd febb 	bl	80022e8 <HAL_GetTick>
 8004572:	6138      	str	r0, [r7, #16]
 8004574:	e00c      	b.n	8004590 <HAL_RCC_OscConfig+0x788>
 8004576:	f7fd feb7 	bl	80022e8 <HAL_GetTick>
 800457a:	4602      	mov	r2, r0
 800457c:	693b      	ldr	r3, [r7, #16]
 800457e:	1ad3      	subs	r3, r2, r3
 8004580:	2b02      	cmp	r3, #2
 8004582:	d905      	bls.n	8004590 <HAL_RCC_OscConfig+0x788>
 8004584:	2303      	movs	r3, #3
 8004586:	e013      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 8004588:	40021000 	.word	0x40021000
 800458c:	f99d808c 	.word	0xf99d808c
 8004590:	4b09      	ldr	r3, [pc, #36]	@ (80045b8 <HAL_RCC_OscConfig+0x7b0>)
 8004592:	681b      	ldr	r3, [r3, #0]
 8004594:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004598:	2b00      	cmp	r3, #0
 800459a:	d1ec      	bne.n	8004576 <HAL_RCC_OscConfig+0x76e>
 800459c:	4b06      	ldr	r3, [pc, #24]	@ (80045b8 <HAL_RCC_OscConfig+0x7b0>)
 800459e:	68da      	ldr	r2, [r3, #12]
 80045a0:	4905      	ldr	r1, [pc, #20]	@ (80045b8 <HAL_RCC_OscConfig+0x7b0>)
 80045a2:	4b06      	ldr	r3, [pc, #24]	@ (80045bc <HAL_RCC_OscConfig+0x7b4>)
 80045a4:	4013      	ands	r3, r2
 80045a6:	60cb      	str	r3, [r1, #12]
 80045a8:	e001      	b.n	80045ae <HAL_RCC_OscConfig+0x7a6>
 80045aa:	2301      	movs	r3, #1
 80045ac:	e000      	b.n	80045b0 <HAL_RCC_OscConfig+0x7a8>
 80045ae:	2300      	movs	r3, #0
 80045b0:	4618      	mov	r0, r3
 80045b2:	3720      	adds	r7, #32
 80045b4:	46bd      	mov	sp, r7
 80045b6:	bd80      	pop	{r7, pc}
 80045b8:	40021000 	.word	0x40021000
 80045bc:	feeefffc 	.word	0xfeeefffc

080045c0 <HAL_RCC_ClockConfig>:
 80045c0:	b580      	push	{r7, lr}
 80045c2:	b084      	sub	sp, #16
 80045c4:	af00      	add	r7, sp, #0
 80045c6:	6078      	str	r0, [r7, #4]
 80045c8:	6039      	str	r1, [r7, #0]
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	2b00      	cmp	r3, #0
 80045ce:	d101      	bne.n	80045d4 <HAL_RCC_ClockConfig+0x14>
 80045d0:	2301      	movs	r3, #1
 80045d2:	e0e7      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 80045d4:	4b75      	ldr	r3, [pc, #468]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	f003 0307 	and.w	r3, r3, #7
 80045dc:	683a      	ldr	r2, [r7, #0]
 80045de:	429a      	cmp	r2, r3
 80045e0:	d910      	bls.n	8004604 <HAL_RCC_ClockConfig+0x44>
 80045e2:	4b72      	ldr	r3, [pc, #456]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 80045e4:	681b      	ldr	r3, [r3, #0]
 80045e6:	f023 0207 	bic.w	r2, r3, #7
 80045ea:	4970      	ldr	r1, [pc, #448]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 80045ec:	683b      	ldr	r3, [r7, #0]
 80045ee:	4313      	orrs	r3, r2
 80045f0:	600b      	str	r3, [r1, #0]
 80045f2:	4b6e      	ldr	r3, [pc, #440]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 80045f4:	681b      	ldr	r3, [r3, #0]
 80045f6:	f003 0307 	and.w	r3, r3, #7
 80045fa:	683a      	ldr	r2, [r7, #0]
 80045fc:	429a      	cmp	r2, r3
 80045fe:	d001      	beq.n	8004604 <HAL_RCC_ClockConfig+0x44>
 8004600:	2301      	movs	r3, #1
 8004602:	e0cf      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 8004604:	687b      	ldr	r3, [r7, #4]
 8004606:	681b      	ldr	r3, [r3, #0]
 8004608:	f003 0302 	and.w	r3, r3, #2
 800460c:	2b00      	cmp	r3, #0
 800460e:	d010      	beq.n	8004632 <HAL_RCC_ClockConfig+0x72>
 8004610:	687b      	ldr	r3, [r7, #4]
 8004612:	689a      	ldr	r2, [r3, #8]
 8004614:	4b66      	ldr	r3, [pc, #408]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004616:	689b      	ldr	r3, [r3, #8]
 8004618:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800461c:	429a      	cmp	r2, r3
 800461e:	d908      	bls.n	8004632 <HAL_RCC_ClockConfig+0x72>
 8004620:	4b63      	ldr	r3, [pc, #396]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004622:	689b      	ldr	r3, [r3, #8]
 8004624:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	689b      	ldr	r3, [r3, #8]
 800462c:	4960      	ldr	r1, [pc, #384]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 800462e:	4313      	orrs	r3, r2
 8004630:	608b      	str	r3, [r1, #8]
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	f003 0301 	and.w	r3, r3, #1
 800463a:	2b00      	cmp	r3, #0
 800463c:	d04c      	beq.n	80046d8 <HAL_RCC_ClockConfig+0x118>
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	685b      	ldr	r3, [r3, #4]
 8004642:	2b03      	cmp	r3, #3
 8004644:	d107      	bne.n	8004656 <HAL_RCC_ClockConfig+0x96>
 8004646:	4b5a      	ldr	r3, [pc, #360]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004648:	681b      	ldr	r3, [r3, #0]
 800464a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800464e:	2b00      	cmp	r3, #0
 8004650:	d121      	bne.n	8004696 <HAL_RCC_ClockConfig+0xd6>
 8004652:	2301      	movs	r3, #1
 8004654:	e0a6      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	685b      	ldr	r3, [r3, #4]
 800465a:	2b02      	cmp	r3, #2
 800465c:	d107      	bne.n	800466e <HAL_RCC_ClockConfig+0xae>
 800465e:	4b54      	ldr	r3, [pc, #336]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004660:	681b      	ldr	r3, [r3, #0]
 8004662:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004666:	2b00      	cmp	r3, #0
 8004668:	d115      	bne.n	8004696 <HAL_RCC_ClockConfig+0xd6>
 800466a:	2301      	movs	r3, #1
 800466c:	e09a      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	685b      	ldr	r3, [r3, #4]
 8004672:	2b00      	cmp	r3, #0
 8004674:	d107      	bne.n	8004686 <HAL_RCC_ClockConfig+0xc6>
 8004676:	4b4e      	ldr	r3, [pc, #312]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	f003 0302 	and.w	r3, r3, #2
 800467e:	2b00      	cmp	r3, #0
 8004680:	d109      	bne.n	8004696 <HAL_RCC_ClockConfig+0xd6>
 8004682:	2301      	movs	r3, #1
 8004684:	e08e      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 8004686:	4b4a      	ldr	r3, [pc, #296]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004688:	681b      	ldr	r3, [r3, #0]
 800468a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800468e:	2b00      	cmp	r3, #0
 8004690:	d101      	bne.n	8004696 <HAL_RCC_ClockConfig+0xd6>
 8004692:	2301      	movs	r3, #1
 8004694:	e086      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 8004696:	4b46      	ldr	r3, [pc, #280]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004698:	689b      	ldr	r3, [r3, #8]
 800469a:	f023 0203 	bic.w	r2, r3, #3
 800469e:	687b      	ldr	r3, [r7, #4]
 80046a0:	685b      	ldr	r3, [r3, #4]
 80046a2:	4943      	ldr	r1, [pc, #268]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 80046a4:	4313      	orrs	r3, r2
 80046a6:	608b      	str	r3, [r1, #8]
 80046a8:	f7fd fe1e 	bl	80022e8 <HAL_GetTick>
 80046ac:	60f8      	str	r0, [r7, #12]
 80046ae:	e00a      	b.n	80046c6 <HAL_RCC_ClockConfig+0x106>
 80046b0:	f7fd fe1a 	bl	80022e8 <HAL_GetTick>
 80046b4:	4602      	mov	r2, r0
 80046b6:	68fb      	ldr	r3, [r7, #12]
 80046b8:	1ad3      	subs	r3, r2, r3
 80046ba:	f241 3288 	movw	r2, #5000	@ 0x1388
 80046be:	4293      	cmp	r3, r2
 80046c0:	d901      	bls.n	80046c6 <HAL_RCC_ClockConfig+0x106>
 80046c2:	2303      	movs	r3, #3
 80046c4:	e06e      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 80046c6:	4b3a      	ldr	r3, [pc, #232]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 80046c8:	689b      	ldr	r3, [r3, #8]
 80046ca:	f003 020c 	and.w	r2, r3, #12
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	685b      	ldr	r3, [r3, #4]
 80046d2:	009b      	lsls	r3, r3, #2
 80046d4:	429a      	cmp	r2, r3
 80046d6:	d1eb      	bne.n	80046b0 <HAL_RCC_ClockConfig+0xf0>
 80046d8:	687b      	ldr	r3, [r7, #4]
 80046da:	681b      	ldr	r3, [r3, #0]
 80046dc:	f003 0302 	and.w	r3, r3, #2
 80046e0:	2b00      	cmp	r3, #0
 80046e2:	d010      	beq.n	8004706 <HAL_RCC_ClockConfig+0x146>
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	689a      	ldr	r2, [r3, #8]
 80046e8:	4b31      	ldr	r3, [pc, #196]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 80046ea:	689b      	ldr	r3, [r3, #8]
 80046ec:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 80046f0:	429a      	cmp	r2, r3
 80046f2:	d208      	bcs.n	8004706 <HAL_RCC_ClockConfig+0x146>
 80046f4:	4b2e      	ldr	r3, [pc, #184]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 80046f6:	689b      	ldr	r3, [r3, #8]
 80046f8:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 80046fc:	687b      	ldr	r3, [r7, #4]
 80046fe:	689b      	ldr	r3, [r3, #8]
 8004700:	492b      	ldr	r1, [pc, #172]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004702:	4313      	orrs	r3, r2
 8004704:	608b      	str	r3, [r1, #8]
 8004706:	4b29      	ldr	r3, [pc, #164]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 8004708:	681b      	ldr	r3, [r3, #0]
 800470a:	f003 0307 	and.w	r3, r3, #7
 800470e:	683a      	ldr	r2, [r7, #0]
 8004710:	429a      	cmp	r2, r3
 8004712:	d210      	bcs.n	8004736 <HAL_RCC_ClockConfig+0x176>
 8004714:	4b25      	ldr	r3, [pc, #148]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	f023 0207 	bic.w	r2, r3, #7
 800471c:	4923      	ldr	r1, [pc, #140]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 800471e:	683b      	ldr	r3, [r7, #0]
 8004720:	4313      	orrs	r3, r2
 8004722:	600b      	str	r3, [r1, #0]
 8004724:	4b21      	ldr	r3, [pc, #132]	@ (80047ac <HAL_RCC_ClockConfig+0x1ec>)
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	f003 0307 	and.w	r3, r3, #7
 800472c:	683a      	ldr	r2, [r7, #0]
 800472e:	429a      	cmp	r2, r3
 8004730:	d001      	beq.n	8004736 <HAL_RCC_ClockConfig+0x176>
 8004732:	2301      	movs	r3, #1
 8004734:	e036      	b.n	80047a4 <HAL_RCC_ClockConfig+0x1e4>
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	681b      	ldr	r3, [r3, #0]
 800473a:	f003 0304 	and.w	r3, r3, #4
 800473e:	2b00      	cmp	r3, #0
 8004740:	d008      	beq.n	8004754 <HAL_RCC_ClockConfig+0x194>
 8004742:	4b1b      	ldr	r3, [pc, #108]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004744:	689b      	ldr	r3, [r3, #8]
 8004746:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	68db      	ldr	r3, [r3, #12]
 800474e:	4918      	ldr	r1, [pc, #96]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004750:	4313      	orrs	r3, r2
 8004752:	608b      	str	r3, [r1, #8]
 8004754:	687b      	ldr	r3, [r7, #4]
 8004756:	681b      	ldr	r3, [r3, #0]
 8004758:	f003 0308 	and.w	r3, r3, #8
 800475c:	2b00      	cmp	r3, #0
 800475e:	d009      	beq.n	8004774 <HAL_RCC_ClockConfig+0x1b4>
 8004760:	4b13      	ldr	r3, [pc, #76]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004762:	689b      	ldr	r3, [r3, #8]
 8004764:	f423 5260 	bic.w	r2, r3, #14336	@ 0x3800
 8004768:	687b      	ldr	r3, [r7, #4]
 800476a:	691b      	ldr	r3, [r3, #16]
 800476c:	00db      	lsls	r3, r3, #3
 800476e:	4910      	ldr	r1, [pc, #64]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 8004770:	4313      	orrs	r3, r2
 8004772:	608b      	str	r3, [r1, #8]
 8004774:	f000 f824 	bl	80047c0 <HAL_RCC_GetSysClockFreq>
 8004778:	4602      	mov	r2, r0
 800477a:	4b0d      	ldr	r3, [pc, #52]	@ (80047b0 <HAL_RCC_ClockConfig+0x1f0>)
 800477c:	689b      	ldr	r3, [r3, #8]
 800477e:	091b      	lsrs	r3, r3, #4
 8004780:	f003 030f 	and.w	r3, r3, #15
 8004784:	490b      	ldr	r1, [pc, #44]	@ (80047b4 <HAL_RCC_ClockConfig+0x1f4>)
 8004786:	5ccb      	ldrb	r3, [r1, r3]
 8004788:	f003 031f 	and.w	r3, r3, #31
 800478c:	fa22 f303 	lsr.w	r3, r2, r3
 8004790:	4a09      	ldr	r2, [pc, #36]	@ (80047b8 <HAL_RCC_ClockConfig+0x1f8>)
 8004792:	6013      	str	r3, [r2, #0]
 8004794:	4b09      	ldr	r3, [pc, #36]	@ (80047bc <HAL_RCC_ClockConfig+0x1fc>)
 8004796:	681b      	ldr	r3, [r3, #0]
 8004798:	4618      	mov	r0, r3
 800479a:	f7fd fd55 	bl	8002248 <HAL_InitTick>
 800479e:	4603      	mov	r3, r0
 80047a0:	72fb      	strb	r3, [r7, #11]
 80047a2:	7afb      	ldrb	r3, [r7, #11]
 80047a4:	4618      	mov	r0, r3
 80047a6:	3710      	adds	r7, #16
 80047a8:	46bd      	mov	sp, r7
 80047aa:	bd80      	pop	{r7, pc}
 80047ac:	40022000 	.word	0x40022000
 80047b0:	40021000 	.word	0x40021000
 80047b4:	08008b5c 	.word	0x08008b5c
 80047b8:	20000000 	.word	0x20000000
 80047bc:	20000004 	.word	0x20000004

080047c0 <HAL_RCC_GetSysClockFreq>:
 80047c0:	b480      	push	{r7}
 80047c2:	b089      	sub	sp, #36	@ 0x24
 80047c4:	af00      	add	r7, sp, #0
 80047c6:	2300      	movs	r3, #0
 80047c8:	61fb      	str	r3, [r7, #28]
 80047ca:	2300      	movs	r3, #0
 80047cc:	61bb      	str	r3, [r7, #24]
 80047ce:	4b3e      	ldr	r3, [pc, #248]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 80047d0:	689b      	ldr	r3, [r3, #8]
 80047d2:	f003 030c 	and.w	r3, r3, #12
 80047d6:	613b      	str	r3, [r7, #16]
 80047d8:	4b3b      	ldr	r3, [pc, #236]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 80047da:	68db      	ldr	r3, [r3, #12]
 80047dc:	f003 0303 	and.w	r3, r3, #3
 80047e0:	60fb      	str	r3, [r7, #12]
 80047e2:	693b      	ldr	r3, [r7, #16]
 80047e4:	2b00      	cmp	r3, #0
 80047e6:	d005      	beq.n	80047f4 <HAL_RCC_GetSysClockFreq+0x34>
 80047e8:	693b      	ldr	r3, [r7, #16]
 80047ea:	2b0c      	cmp	r3, #12
 80047ec:	d121      	bne.n	8004832 <HAL_RCC_GetSysClockFreq+0x72>
 80047ee:	68fb      	ldr	r3, [r7, #12]
 80047f0:	2b01      	cmp	r3, #1
 80047f2:	d11e      	bne.n	8004832 <HAL_RCC_GetSysClockFreq+0x72>
 80047f4:	4b34      	ldr	r3, [pc, #208]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 80047f6:	681b      	ldr	r3, [r3, #0]
 80047f8:	f003 0308 	and.w	r3, r3, #8
 80047fc:	2b00      	cmp	r3, #0
 80047fe:	d107      	bne.n	8004810 <HAL_RCC_GetSysClockFreq+0x50>
 8004800:	4b31      	ldr	r3, [pc, #196]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 8004802:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8004806:	0a1b      	lsrs	r3, r3, #8
 8004808:	f003 030f 	and.w	r3, r3, #15
 800480c:	61fb      	str	r3, [r7, #28]
 800480e:	e005      	b.n	800481c <HAL_RCC_GetSysClockFreq+0x5c>
 8004810:	4b2d      	ldr	r3, [pc, #180]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 8004812:	681b      	ldr	r3, [r3, #0]
 8004814:	091b      	lsrs	r3, r3, #4
 8004816:	f003 030f 	and.w	r3, r3, #15
 800481a:	61fb      	str	r3, [r7, #28]
 800481c:	4a2b      	ldr	r2, [pc, #172]	@ (80048cc <HAL_RCC_GetSysClockFreq+0x10c>)
 800481e:	69fb      	ldr	r3, [r7, #28]
 8004820:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004824:	61fb      	str	r3, [r7, #28]
 8004826:	693b      	ldr	r3, [r7, #16]
 8004828:	2b00      	cmp	r3, #0
 800482a:	d10d      	bne.n	8004848 <HAL_RCC_GetSysClockFreq+0x88>
 800482c:	69fb      	ldr	r3, [r7, #28]
 800482e:	61bb      	str	r3, [r7, #24]
 8004830:	e00a      	b.n	8004848 <HAL_RCC_GetSysClockFreq+0x88>
 8004832:	693b      	ldr	r3, [r7, #16]
 8004834:	2b04      	cmp	r3, #4
 8004836:	d102      	bne.n	800483e <HAL_RCC_GetSysClockFreq+0x7e>
 8004838:	4b25      	ldr	r3, [pc, #148]	@ (80048d0 <HAL_RCC_GetSysClockFreq+0x110>)
 800483a:	61bb      	str	r3, [r7, #24]
 800483c:	e004      	b.n	8004848 <HAL_RCC_GetSysClockFreq+0x88>
 800483e:	693b      	ldr	r3, [r7, #16]
 8004840:	2b08      	cmp	r3, #8
 8004842:	d101      	bne.n	8004848 <HAL_RCC_GetSysClockFreq+0x88>
 8004844:	4b23      	ldr	r3, [pc, #140]	@ (80048d4 <HAL_RCC_GetSysClockFreq+0x114>)
 8004846:	61bb      	str	r3, [r7, #24]
 8004848:	693b      	ldr	r3, [r7, #16]
 800484a:	2b0c      	cmp	r3, #12
 800484c:	d134      	bne.n	80048b8 <HAL_RCC_GetSysClockFreq+0xf8>
 800484e:	4b1e      	ldr	r3, [pc, #120]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 8004850:	68db      	ldr	r3, [r3, #12]
 8004852:	f003 0303 	and.w	r3, r3, #3
 8004856:	60bb      	str	r3, [r7, #8]
 8004858:	68bb      	ldr	r3, [r7, #8]
 800485a:	2b02      	cmp	r3, #2
 800485c:	d003      	beq.n	8004866 <HAL_RCC_GetSysClockFreq+0xa6>
 800485e:	68bb      	ldr	r3, [r7, #8]
 8004860:	2b03      	cmp	r3, #3
 8004862:	d003      	beq.n	800486c <HAL_RCC_GetSysClockFreq+0xac>
 8004864:	e005      	b.n	8004872 <HAL_RCC_GetSysClockFreq+0xb2>
 8004866:	4b1a      	ldr	r3, [pc, #104]	@ (80048d0 <HAL_RCC_GetSysClockFreq+0x110>)
 8004868:	617b      	str	r3, [r7, #20]
 800486a:	e005      	b.n	8004878 <HAL_RCC_GetSysClockFreq+0xb8>
 800486c:	4b19      	ldr	r3, [pc, #100]	@ (80048d4 <HAL_RCC_GetSysClockFreq+0x114>)
 800486e:	617b      	str	r3, [r7, #20]
 8004870:	e002      	b.n	8004878 <HAL_RCC_GetSysClockFreq+0xb8>
 8004872:	69fb      	ldr	r3, [r7, #28]
 8004874:	617b      	str	r3, [r7, #20]
 8004876:	bf00      	nop
 8004878:	4b13      	ldr	r3, [pc, #76]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 800487a:	68db      	ldr	r3, [r3, #12]
 800487c:	091b      	lsrs	r3, r3, #4
 800487e:	f003 0307 	and.w	r3, r3, #7
 8004882:	3301      	adds	r3, #1
 8004884:	607b      	str	r3, [r7, #4]
 8004886:	4b10      	ldr	r3, [pc, #64]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 8004888:	68db      	ldr	r3, [r3, #12]
 800488a:	0a1b      	lsrs	r3, r3, #8
 800488c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8004890:	697a      	ldr	r2, [r7, #20]
 8004892:	fb03 f202 	mul.w	r2, r3, r2
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	fbb2 f3f3 	udiv	r3, r2, r3
 800489c:	617b      	str	r3, [r7, #20]
 800489e:	4b0a      	ldr	r3, [pc, #40]	@ (80048c8 <HAL_RCC_GetSysClockFreq+0x108>)
 80048a0:	68db      	ldr	r3, [r3, #12]
 80048a2:	0e5b      	lsrs	r3, r3, #25
 80048a4:	f003 0303 	and.w	r3, r3, #3
 80048a8:	3301      	adds	r3, #1
 80048aa:	005b      	lsls	r3, r3, #1
 80048ac:	603b      	str	r3, [r7, #0]
 80048ae:	697a      	ldr	r2, [r7, #20]
 80048b0:	683b      	ldr	r3, [r7, #0]
 80048b2:	fbb2 f3f3 	udiv	r3, r2, r3
 80048b6:	61bb      	str	r3, [r7, #24]
 80048b8:	69bb      	ldr	r3, [r7, #24]
 80048ba:	4618      	mov	r0, r3
 80048bc:	3724      	adds	r7, #36	@ 0x24
 80048be:	46bd      	mov	sp, r7
 80048c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048c4:	4770      	bx	lr
 80048c6:	bf00      	nop
 80048c8:	40021000 	.word	0x40021000
 80048cc:	08008b74 	.word	0x08008b74
 80048d0:	00f42400 	.word	0x00f42400
 80048d4:	017d7840 	.word	0x017d7840

080048d8 <HAL_RCC_GetHCLKFreq>:
 80048d8:	b480      	push	{r7}
 80048da:	af00      	add	r7, sp, #0
 80048dc:	4b03      	ldr	r3, [pc, #12]	@ (80048ec <HAL_RCC_GetHCLKFreq+0x14>)
 80048de:	681b      	ldr	r3, [r3, #0]
 80048e0:	4618      	mov	r0, r3
 80048e2:	46bd      	mov	sp, r7
 80048e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048e8:	4770      	bx	lr
 80048ea:	bf00      	nop
 80048ec:	20000000 	.word	0x20000000

080048f0 <HAL_RCC_GetPCLK1Freq>:
 80048f0:	b580      	push	{r7, lr}
 80048f2:	af00      	add	r7, sp, #0
 80048f4:	f7ff fff0 	bl	80048d8 <HAL_RCC_GetHCLKFreq>
 80048f8:	4602      	mov	r2, r0
 80048fa:	4b06      	ldr	r3, [pc, #24]	@ (8004914 <HAL_RCC_GetPCLK1Freq+0x24>)
 80048fc:	689b      	ldr	r3, [r3, #8]
 80048fe:	0a1b      	lsrs	r3, r3, #8
 8004900:	f003 0307 	and.w	r3, r3, #7
 8004904:	4904      	ldr	r1, [pc, #16]	@ (8004918 <HAL_RCC_GetPCLK1Freq+0x28>)
 8004906:	5ccb      	ldrb	r3, [r1, r3]
 8004908:	f003 031f 	and.w	r3, r3, #31
 800490c:	fa22 f303 	lsr.w	r3, r2, r3
 8004910:	4618      	mov	r0, r3
 8004912:	bd80      	pop	{r7, pc}
 8004914:	40021000 	.word	0x40021000
 8004918:	08008b6c 	.word	0x08008b6c

0800491c <HAL_RCC_GetPCLK2Freq>:
 800491c:	b580      	push	{r7, lr}
 800491e:	af00      	add	r7, sp, #0
 8004920:	f7ff ffda 	bl	80048d8 <HAL_RCC_GetHCLKFreq>
 8004924:	4602      	mov	r2, r0
 8004926:	4b06      	ldr	r3, [pc, #24]	@ (8004940 <HAL_RCC_GetPCLK2Freq+0x24>)
 8004928:	689b      	ldr	r3, [r3, #8]
 800492a:	0adb      	lsrs	r3, r3, #11
 800492c:	f003 0307 	and.w	r3, r3, #7
 8004930:	4904      	ldr	r1, [pc, #16]	@ (8004944 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004932:	5ccb      	ldrb	r3, [r1, r3]
 8004934:	f003 031f 	and.w	r3, r3, #31
 8004938:	fa22 f303 	lsr.w	r3, r2, r3
 800493c:	4618      	mov	r0, r3
 800493e:	bd80      	pop	{r7, pc}
 8004940:	40021000 	.word	0x40021000
 8004944:	08008b6c 	.word	0x08008b6c

08004948 <RCC_SetFlashLatencyFromMSIRange>:
 8004948:	b580      	push	{r7, lr}
 800494a:	b086      	sub	sp, #24
 800494c:	af00      	add	r7, sp, #0
 800494e:	6078      	str	r0, [r7, #4]
 8004950:	2300      	movs	r3, #0
 8004952:	613b      	str	r3, [r7, #16]
 8004954:	4b2a      	ldr	r3, [pc, #168]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8004956:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004958:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800495c:	2b00      	cmp	r3, #0
 800495e:	d003      	beq.n	8004968 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8004960:	f7ff f9ee 	bl	8003d40 <HAL_PWREx_GetVoltageRange>
 8004964:	6178      	str	r0, [r7, #20]
 8004966:	e014      	b.n	8004992 <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8004968:	4b25      	ldr	r3, [pc, #148]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800496a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800496c:	4a24      	ldr	r2, [pc, #144]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800496e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004972:	6593      	str	r3, [r2, #88]	@ 0x58
 8004974:	4b22      	ldr	r3, [pc, #136]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8004976:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004978:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800497c:	60fb      	str	r3, [r7, #12]
 800497e:	68fb      	ldr	r3, [r7, #12]
 8004980:	f7ff f9de 	bl	8003d40 <HAL_PWREx_GetVoltageRange>
 8004984:	6178      	str	r0, [r7, #20]
 8004986:	4b1e      	ldr	r3, [pc, #120]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 8004988:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800498a:	4a1d      	ldr	r2, [pc, #116]	@ (8004a00 <RCC_SetFlashLatencyFromMSIRange+0xb8>)
 800498c:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004990:	6593      	str	r3, [r2, #88]	@ 0x58
 8004992:	697b      	ldr	r3, [r7, #20]
 8004994:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8004998:	d10b      	bne.n	80049b2 <RCC_SetFlashLatencyFromMSIRange+0x6a>
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	2b80      	cmp	r3, #128	@ 0x80
 800499e:	d919      	bls.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	2ba0      	cmp	r3, #160	@ 0xa0
 80049a4:	d902      	bls.n	80049ac <RCC_SetFlashLatencyFromMSIRange+0x64>
 80049a6:	2302      	movs	r3, #2
 80049a8:	613b      	str	r3, [r7, #16]
 80049aa:	e013      	b.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049ac:	2301      	movs	r3, #1
 80049ae:	613b      	str	r3, [r7, #16]
 80049b0:	e010      	b.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049b2:	687b      	ldr	r3, [r7, #4]
 80049b4:	2b80      	cmp	r3, #128	@ 0x80
 80049b6:	d902      	bls.n	80049be <RCC_SetFlashLatencyFromMSIRange+0x76>
 80049b8:	2303      	movs	r3, #3
 80049ba:	613b      	str	r3, [r7, #16]
 80049bc:	e00a      	b.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	2b80      	cmp	r3, #128	@ 0x80
 80049c2:	d102      	bne.n	80049ca <RCC_SetFlashLatencyFromMSIRange+0x82>
 80049c4:	2302      	movs	r3, #2
 80049c6:	613b      	str	r3, [r7, #16]
 80049c8:	e004      	b.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049ca:	687b      	ldr	r3, [r7, #4]
 80049cc:	2b70      	cmp	r3, #112	@ 0x70
 80049ce:	d101      	bne.n	80049d4 <RCC_SetFlashLatencyFromMSIRange+0x8c>
 80049d0:	2301      	movs	r3, #1
 80049d2:	613b      	str	r3, [r7, #16]
 80049d4:	4b0b      	ldr	r3, [pc, #44]	@ (8004a04 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80049d6:	681b      	ldr	r3, [r3, #0]
 80049d8:	f023 0207 	bic.w	r2, r3, #7
 80049dc:	4909      	ldr	r1, [pc, #36]	@ (8004a04 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80049de:	693b      	ldr	r3, [r7, #16]
 80049e0:	4313      	orrs	r3, r2
 80049e2:	600b      	str	r3, [r1, #0]
 80049e4:	4b07      	ldr	r3, [pc, #28]	@ (8004a04 <RCC_SetFlashLatencyFromMSIRange+0xbc>)
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	f003 0307 	and.w	r3, r3, #7
 80049ec:	693a      	ldr	r2, [r7, #16]
 80049ee:	429a      	cmp	r2, r3
 80049f0:	d001      	beq.n	80049f6 <RCC_SetFlashLatencyFromMSIRange+0xae>
 80049f2:	2301      	movs	r3, #1
 80049f4:	e000      	b.n	80049f8 <RCC_SetFlashLatencyFromMSIRange+0xb0>
 80049f6:	2300      	movs	r3, #0
 80049f8:	4618      	mov	r0, r3
 80049fa:	3718      	adds	r7, #24
 80049fc:	46bd      	mov	sp, r7
 80049fe:	bd80      	pop	{r7, pc}
 8004a00:	40021000 	.word	0x40021000
 8004a04:	40022000 	.word	0x40022000

08004a08 <HAL_RCCEx_PeriphCLKConfig>:
 8004a08:	b580      	push	{r7, lr}
 8004a0a:	b086      	sub	sp, #24
 8004a0c:	af00      	add	r7, sp, #0
 8004a0e:	6078      	str	r0, [r7, #4]
 8004a10:	2300      	movs	r3, #0
 8004a12:	74fb      	strb	r3, [r7, #19]
 8004a14:	2300      	movs	r3, #0
 8004a16:	74bb      	strb	r3, [r7, #18]
 8004a18:	687b      	ldr	r3, [r7, #4]
 8004a1a:	681b      	ldr	r3, [r3, #0]
 8004a1c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8004a20:	2b00      	cmp	r3, #0
 8004a22:	d041      	beq.n	8004aa8 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8004a28:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8004a2c:	d02a      	beq.n	8004a84 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8004a2e:	f5b3 0f40 	cmp.w	r3, #12582912	@ 0xc00000
 8004a32:	d824      	bhi.n	8004a7e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004a34:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004a38:	d008      	beq.n	8004a4c <HAL_RCCEx_PeriphCLKConfig+0x44>
 8004a3a:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8004a3e:	d81e      	bhi.n	8004a7e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004a40:	2b00      	cmp	r3, #0
 8004a42:	d00a      	beq.n	8004a5a <HAL_RCCEx_PeriphCLKConfig+0x52>
 8004a44:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004a48:	d010      	beq.n	8004a6c <HAL_RCCEx_PeriphCLKConfig+0x64>
 8004a4a:	e018      	b.n	8004a7e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8004a4c:	4b86      	ldr	r3, [pc, #536]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004a4e:	68db      	ldr	r3, [r3, #12]
 8004a50:	4a85      	ldr	r2, [pc, #532]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004a52:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004a56:	60d3      	str	r3, [r2, #12]
 8004a58:	e015      	b.n	8004a86 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004a5a:	687b      	ldr	r3, [r7, #4]
 8004a5c:	3304      	adds	r3, #4
 8004a5e:	2100      	movs	r1, #0
 8004a60:	4618      	mov	r0, r3
 8004a62:	f000 fa8b 	bl	8004f7c <RCCEx_PLLSAI1_Config>
 8004a66:	4603      	mov	r3, r0
 8004a68:	74fb      	strb	r3, [r7, #19]
 8004a6a:	e00c      	b.n	8004a86 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004a6c:	687b      	ldr	r3, [r7, #4]
 8004a6e:	3320      	adds	r3, #32
 8004a70:	2100      	movs	r1, #0
 8004a72:	4618      	mov	r0, r3
 8004a74:	f000 fb76 	bl	8005164 <RCCEx_PLLSAI2_Config>
 8004a78:	4603      	mov	r3, r0
 8004a7a:	74fb      	strb	r3, [r7, #19]
 8004a7c:	e003      	b.n	8004a86 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004a7e:	2301      	movs	r3, #1
 8004a80:	74fb      	strb	r3, [r7, #19]
 8004a82:	e000      	b.n	8004a86 <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8004a84:	bf00      	nop
 8004a86:	7cfb      	ldrb	r3, [r7, #19]
 8004a88:	2b00      	cmp	r3, #0
 8004a8a:	d10b      	bne.n	8004aa4 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8004a8c:	4b76      	ldr	r3, [pc, #472]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004a8e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004a92:	f423 0240 	bic.w	r2, r3, #12582912	@ 0xc00000
 8004a96:	687b      	ldr	r3, [r7, #4]
 8004a98:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8004a9a:	4973      	ldr	r1, [pc, #460]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004a9c:	4313      	orrs	r3, r2
 8004a9e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004aa2:	e001      	b.n	8004aa8 <HAL_RCCEx_PeriphCLKConfig+0xa0>
 8004aa4:	7cfb      	ldrb	r3, [r7, #19]
 8004aa6:	74bb      	strb	r3, [r7, #18]
 8004aa8:	687b      	ldr	r3, [r7, #4]
 8004aaa:	681b      	ldr	r3, [r3, #0]
 8004aac:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8004ab0:	2b00      	cmp	r3, #0
 8004ab2:	d041      	beq.n	8004b38 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004ab8:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8004abc:	d02a      	beq.n	8004b14 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8004abe:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8004ac2:	d824      	bhi.n	8004b0e <HAL_RCCEx_PeriphCLKConfig+0x106>
 8004ac4:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004ac8:	d008      	beq.n	8004adc <HAL_RCCEx_PeriphCLKConfig+0xd4>
 8004aca:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8004ace:	d81e      	bhi.n	8004b0e <HAL_RCCEx_PeriphCLKConfig+0x106>
 8004ad0:	2b00      	cmp	r3, #0
 8004ad2:	d00a      	beq.n	8004aea <HAL_RCCEx_PeriphCLKConfig+0xe2>
 8004ad4:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8004ad8:	d010      	beq.n	8004afc <HAL_RCCEx_PeriphCLKConfig+0xf4>
 8004ada:	e018      	b.n	8004b0e <HAL_RCCEx_PeriphCLKConfig+0x106>
 8004adc:	4b62      	ldr	r3, [pc, #392]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004ade:	68db      	ldr	r3, [r3, #12]
 8004ae0:	4a61      	ldr	r2, [pc, #388]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004ae2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004ae6:	60d3      	str	r3, [r2, #12]
 8004ae8:	e015      	b.n	8004b16 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	3304      	adds	r3, #4
 8004aee:	2100      	movs	r1, #0
 8004af0:	4618      	mov	r0, r3
 8004af2:	f000 fa43 	bl	8004f7c <RCCEx_PLLSAI1_Config>
 8004af6:	4603      	mov	r3, r0
 8004af8:	74fb      	strb	r3, [r7, #19]
 8004afa:	e00c      	b.n	8004b16 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	3320      	adds	r3, #32
 8004b00:	2100      	movs	r1, #0
 8004b02:	4618      	mov	r0, r3
 8004b04:	f000 fb2e 	bl	8005164 <RCCEx_PLLSAI2_Config>
 8004b08:	4603      	mov	r3, r0
 8004b0a:	74fb      	strb	r3, [r7, #19]
 8004b0c:	e003      	b.n	8004b16 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004b0e:	2301      	movs	r3, #1
 8004b10:	74fb      	strb	r3, [r7, #19]
 8004b12:	e000      	b.n	8004b16 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8004b14:	bf00      	nop
 8004b16:	7cfb      	ldrb	r3, [r7, #19]
 8004b18:	2b00      	cmp	r3, #0
 8004b1a:	d10b      	bne.n	8004b34 <HAL_RCCEx_PeriphCLKConfig+0x12c>
 8004b1c:	4b52      	ldr	r3, [pc, #328]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004b22:	f023 7240 	bic.w	r2, r3, #50331648	@ 0x3000000
 8004b26:	687b      	ldr	r3, [r7, #4]
 8004b28:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8004b2a:	494f      	ldr	r1, [pc, #316]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b2c:	4313      	orrs	r3, r2
 8004b2e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004b32:	e001      	b.n	8004b38 <HAL_RCCEx_PeriphCLKConfig+0x130>
 8004b34:	7cfb      	ldrb	r3, [r7, #19]
 8004b36:	74bb      	strb	r3, [r7, #18]
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004b40:	2b00      	cmp	r3, #0
 8004b42:	f000 80a0 	beq.w	8004c86 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8004b46:	2300      	movs	r3, #0
 8004b48:	747b      	strb	r3, [r7, #17]
 8004b4a:	4b47      	ldr	r3, [pc, #284]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b4c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004b4e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d101      	bne.n	8004b5a <HAL_RCCEx_PeriphCLKConfig+0x152>
 8004b56:	2301      	movs	r3, #1
 8004b58:	e000      	b.n	8004b5c <HAL_RCCEx_PeriphCLKConfig+0x154>
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	2b00      	cmp	r3, #0
 8004b5e:	d00d      	beq.n	8004b7c <HAL_RCCEx_PeriphCLKConfig+0x174>
 8004b60:	4b41      	ldr	r3, [pc, #260]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b62:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004b64:	4a40      	ldr	r2, [pc, #256]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b66:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004b6a:	6593      	str	r3, [r2, #88]	@ 0x58
 8004b6c:	4b3e      	ldr	r3, [pc, #248]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004b6e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004b70:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004b74:	60bb      	str	r3, [r7, #8]
 8004b76:	68bb      	ldr	r3, [r7, #8]
 8004b78:	2301      	movs	r3, #1
 8004b7a:	747b      	strb	r3, [r7, #17]
 8004b7c:	4b3b      	ldr	r3, [pc, #236]	@ (8004c6c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8004b7e:	681b      	ldr	r3, [r3, #0]
 8004b80:	4a3a      	ldr	r2, [pc, #232]	@ (8004c6c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8004b82:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004b86:	6013      	str	r3, [r2, #0]
 8004b88:	f7fd fbae 	bl	80022e8 <HAL_GetTick>
 8004b8c:	60f8      	str	r0, [r7, #12]
 8004b8e:	e009      	b.n	8004ba4 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8004b90:	f7fd fbaa 	bl	80022e8 <HAL_GetTick>
 8004b94:	4602      	mov	r2, r0
 8004b96:	68fb      	ldr	r3, [r7, #12]
 8004b98:	1ad3      	subs	r3, r2, r3
 8004b9a:	2b02      	cmp	r3, #2
 8004b9c:	d902      	bls.n	8004ba4 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8004b9e:	2303      	movs	r3, #3
 8004ba0:	74fb      	strb	r3, [r7, #19]
 8004ba2:	e005      	b.n	8004bb0 <HAL_RCCEx_PeriphCLKConfig+0x1a8>
 8004ba4:	4b31      	ldr	r3, [pc, #196]	@ (8004c6c <HAL_RCCEx_PeriphCLKConfig+0x264>)
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004bac:	2b00      	cmp	r3, #0
 8004bae:	d0ef      	beq.n	8004b90 <HAL_RCCEx_PeriphCLKConfig+0x188>
 8004bb0:	7cfb      	ldrb	r3, [r7, #19]
 8004bb2:	2b00      	cmp	r3, #0
 8004bb4:	d15c      	bne.n	8004c70 <HAL_RCCEx_PeriphCLKConfig+0x268>
 8004bb6:	4b2c      	ldr	r3, [pc, #176]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004bb8:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004bbc:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8004bc0:	617b      	str	r3, [r7, #20]
 8004bc2:	697b      	ldr	r3, [r7, #20]
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d01f      	beq.n	8004c08 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004bce:	697a      	ldr	r2, [r7, #20]
 8004bd0:	429a      	cmp	r2, r3
 8004bd2:	d019      	beq.n	8004c08 <HAL_RCCEx_PeriphCLKConfig+0x200>
 8004bd4:	4b24      	ldr	r3, [pc, #144]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004bd6:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004bda:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8004bde:	617b      	str	r3, [r7, #20]
 8004be0:	4b21      	ldr	r3, [pc, #132]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004be2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004be6:	4a20      	ldr	r2, [pc, #128]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004be8:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004bec:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004bf0:	4b1d      	ldr	r3, [pc, #116]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004bf2:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004bf6:	4a1c      	ldr	r2, [pc, #112]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004bf8:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004bfc:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004c00:	4a19      	ldr	r2, [pc, #100]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004c02:	697b      	ldr	r3, [r7, #20]
 8004c04:	f8c2 3090 	str.w	r3, [r2, #144]	@ 0x90
 8004c08:	697b      	ldr	r3, [r7, #20]
 8004c0a:	f003 0301 	and.w	r3, r3, #1
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	d016      	beq.n	8004c40 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8004c12:	f7fd fb69 	bl	80022e8 <HAL_GetTick>
 8004c16:	60f8      	str	r0, [r7, #12]
 8004c18:	e00b      	b.n	8004c32 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8004c1a:	f7fd fb65 	bl	80022e8 <HAL_GetTick>
 8004c1e:	4602      	mov	r2, r0
 8004c20:	68fb      	ldr	r3, [r7, #12]
 8004c22:	1ad3      	subs	r3, r2, r3
 8004c24:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004c28:	4293      	cmp	r3, r2
 8004c2a:	d902      	bls.n	8004c32 <HAL_RCCEx_PeriphCLKConfig+0x22a>
 8004c2c:	2303      	movs	r3, #3
 8004c2e:	74fb      	strb	r3, [r7, #19]
 8004c30:	e006      	b.n	8004c40 <HAL_RCCEx_PeriphCLKConfig+0x238>
 8004c32:	4b0d      	ldr	r3, [pc, #52]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004c34:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004c38:	f003 0302 	and.w	r3, r3, #2
 8004c3c:	2b00      	cmp	r3, #0
 8004c3e:	d0ec      	beq.n	8004c1a <HAL_RCCEx_PeriphCLKConfig+0x212>
 8004c40:	7cfb      	ldrb	r3, [r7, #19]
 8004c42:	2b00      	cmp	r3, #0
 8004c44:	d10c      	bne.n	8004c60 <HAL_RCCEx_PeriphCLKConfig+0x258>
 8004c46:	4b08      	ldr	r3, [pc, #32]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004c48:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8004c4c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8004c56:	4904      	ldr	r1, [pc, #16]	@ (8004c68 <HAL_RCCEx_PeriphCLKConfig+0x260>)
 8004c58:	4313      	orrs	r3, r2
 8004c5a:	f8c1 3090 	str.w	r3, [r1, #144]	@ 0x90
 8004c5e:	e009      	b.n	8004c74 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8004c60:	7cfb      	ldrb	r3, [r7, #19]
 8004c62:	74bb      	strb	r3, [r7, #18]
 8004c64:	e006      	b.n	8004c74 <HAL_RCCEx_PeriphCLKConfig+0x26c>
 8004c66:	bf00      	nop
 8004c68:	40021000 	.word	0x40021000
 8004c6c:	40007000 	.word	0x40007000
 8004c70:	7cfb      	ldrb	r3, [r7, #19]
 8004c72:	74bb      	strb	r3, [r7, #18]
 8004c74:	7c7b      	ldrb	r3, [r7, #17]
 8004c76:	2b01      	cmp	r3, #1
 8004c78:	d105      	bne.n	8004c86 <HAL_RCCEx_PeriphCLKConfig+0x27e>
 8004c7a:	4ba1      	ldr	r3, [pc, #644]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004c7c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004c7e:	4aa0      	ldr	r2, [pc, #640]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004c80:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004c84:	6593      	str	r3, [r2, #88]	@ 0x58
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	681b      	ldr	r3, [r3, #0]
 8004c8a:	f003 0301 	and.w	r3, r3, #1
 8004c8e:	2b00      	cmp	r3, #0
 8004c90:	d00a      	beq.n	8004ca8 <HAL_RCCEx_PeriphCLKConfig+0x2a0>
 8004c92:	4b9b      	ldr	r3, [pc, #620]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004c94:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004c98:	f023 0203 	bic.w	r2, r3, #3
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004ca0:	4997      	ldr	r1, [pc, #604]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004ca2:	4313      	orrs	r3, r2
 8004ca4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	681b      	ldr	r3, [r3, #0]
 8004cac:	f003 0302 	and.w	r3, r3, #2
 8004cb0:	2b00      	cmp	r3, #0
 8004cb2:	d00a      	beq.n	8004cca <HAL_RCCEx_PeriphCLKConfig+0x2c2>
 8004cb4:	4b92      	ldr	r3, [pc, #584]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004cb6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004cba:	f023 020c 	bic.w	r2, r3, #12
 8004cbe:	687b      	ldr	r3, [r7, #4]
 8004cc0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8004cc2:	498f      	ldr	r1, [pc, #572]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004cc4:	4313      	orrs	r3, r2
 8004cc6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	f003 0304 	and.w	r3, r3, #4
 8004cd2:	2b00      	cmp	r3, #0
 8004cd4:	d00a      	beq.n	8004cec <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8004cd6:	4b8a      	ldr	r3, [pc, #552]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004cd8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004cdc:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004ce4:	4986      	ldr	r1, [pc, #536]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004ce6:	4313      	orrs	r3, r2
 8004ce8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004cec:	687b      	ldr	r3, [r7, #4]
 8004cee:	681b      	ldr	r3, [r3, #0]
 8004cf0:	f003 0308 	and.w	r3, r3, #8
 8004cf4:	2b00      	cmp	r3, #0
 8004cf6:	d00a      	beq.n	8004d0e <HAL_RCCEx_PeriphCLKConfig+0x306>
 8004cf8:	4b81      	ldr	r3, [pc, #516]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004cfa:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004cfe:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 8004d02:	687b      	ldr	r3, [r7, #4]
 8004d04:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004d06:	497e      	ldr	r1, [pc, #504]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d08:	4313      	orrs	r3, r2
 8004d0a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004d0e:	687b      	ldr	r3, [r7, #4]
 8004d10:	681b      	ldr	r3, [r3, #0]
 8004d12:	f003 0310 	and.w	r3, r3, #16
 8004d16:	2b00      	cmp	r3, #0
 8004d18:	d00a      	beq.n	8004d30 <HAL_RCCEx_PeriphCLKConfig+0x328>
 8004d1a:	4b79      	ldr	r3, [pc, #484]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d1c:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004d20:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8004d28:	4975      	ldr	r1, [pc, #468]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d2a:	4313      	orrs	r3, r2
 8004d2c:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	f003 0320 	and.w	r3, r3, #32
 8004d38:	2b00      	cmp	r3, #0
 8004d3a:	d00a      	beq.n	8004d52 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8004d3c:	4b70      	ldr	r3, [pc, #448]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d3e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004d42:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8004d4a:	496d      	ldr	r1, [pc, #436]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d4c:	4313      	orrs	r3, r2
 8004d4e:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8004d5a:	2b00      	cmp	r3, #0
 8004d5c:	d00a      	beq.n	8004d74 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 8004d5e:	4b68      	ldr	r3, [pc, #416]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d60:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004d64:	f423 2240 	bic.w	r2, r3, #786432	@ 0xc0000
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8004d6c:	4964      	ldr	r1, [pc, #400]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d6e:	4313      	orrs	r3, r2
 8004d70:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004d74:	687b      	ldr	r3, [r7, #4]
 8004d76:	681b      	ldr	r3, [r3, #0]
 8004d78:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004d7c:	2b00      	cmp	r3, #0
 8004d7e:	d00a      	beq.n	8004d96 <HAL_RCCEx_PeriphCLKConfig+0x38e>
 8004d80:	4b5f      	ldr	r3, [pc, #380]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d82:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004d86:	f423 1240 	bic.w	r2, r3, #3145728	@ 0x300000
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8004d8e:	495c      	ldr	r1, [pc, #368]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004d90:	4313      	orrs	r3, r2
 8004d92:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d00a      	beq.n	8004db8 <HAL_RCCEx_PeriphCLKConfig+0x3b0>
 8004da2:	4b57      	ldr	r3, [pc, #348]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004da4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004da8:	f423 5240 	bic.w	r2, r3, #12288	@ 0x3000
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004db0:	4953      	ldr	r1, [pc, #332]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004db2:	4313      	orrs	r3, r2
 8004db4:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004dc0:	2b00      	cmp	r3, #0
 8004dc2:	d00a      	beq.n	8004dda <HAL_RCCEx_PeriphCLKConfig+0x3d2>
 8004dc4:	4b4e      	ldr	r3, [pc, #312]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004dc6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004dca:	f423 4240 	bic.w	r2, r3, #49152	@ 0xc000
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004dd2:	494b      	ldr	r1, [pc, #300]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004dd4:	4313      	orrs	r3, r2
 8004dd6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004dda:	687b      	ldr	r3, [r7, #4]
 8004ddc:	681b      	ldr	r3, [r3, #0]
 8004dde:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004de2:	2b00      	cmp	r3, #0
 8004de4:	d00a      	beq.n	8004dfc <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8004de6:	4b46      	ldr	r3, [pc, #280]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004de8:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004dec:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8004df4:	4942      	ldr	r1, [pc, #264]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004df6:	4313      	orrs	r3, r2
 8004df8:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004dfc:	687b      	ldr	r3, [r7, #4]
 8004dfe:	681b      	ldr	r3, [r3, #0]
 8004e00:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8004e04:	2b00      	cmp	r3, #0
 8004e06:	d028      	beq.n	8004e5a <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004e08:	4b3d      	ldr	r3, [pc, #244]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e0a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004e0e:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004e16:	493a      	ldr	r1, [pc, #232]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e18:	4313      	orrs	r3, r2
 8004e1a:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004e1e:	687b      	ldr	r3, [r7, #4]
 8004e20:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004e22:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8004e26:	d106      	bne.n	8004e36 <HAL_RCCEx_PeriphCLKConfig+0x42e>
 8004e28:	4b35      	ldr	r3, [pc, #212]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e2a:	68db      	ldr	r3, [r3, #12]
 8004e2c:	4a34      	ldr	r2, [pc, #208]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e2e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004e32:	60d3      	str	r3, [r2, #12]
 8004e34:	e011      	b.n	8004e5a <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8004e3a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8004e3e:	d10c      	bne.n	8004e5a <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	3304      	adds	r3, #4
 8004e44:	2101      	movs	r1, #1
 8004e46:	4618      	mov	r0, r3
 8004e48:	f000 f898 	bl	8004f7c <RCCEx_PLLSAI1_Config>
 8004e4c:	4603      	mov	r3, r0
 8004e4e:	74fb      	strb	r3, [r7, #19]
 8004e50:	7cfb      	ldrb	r3, [r7, #19]
 8004e52:	2b00      	cmp	r3, #0
 8004e54:	d001      	beq.n	8004e5a <HAL_RCCEx_PeriphCLKConfig+0x452>
 8004e56:	7cfb      	ldrb	r3, [r7, #19]
 8004e58:	74bb      	strb	r3, [r7, #18]
 8004e5a:	687b      	ldr	r3, [r7, #4]
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d028      	beq.n	8004eb8 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8004e66:	4b26      	ldr	r3, [pc, #152]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e68:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004e6c:	f023 6240 	bic.w	r2, r3, #201326592	@ 0xc000000
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e74:	4922      	ldr	r1, [pc, #136]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e76:	4313      	orrs	r3, r2
 8004e78:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e80:	f1b3 6f00 	cmp.w	r3, #134217728	@ 0x8000000
 8004e84:	d106      	bne.n	8004e94 <HAL_RCCEx_PeriphCLKConfig+0x48c>
 8004e86:	4b1e      	ldr	r3, [pc, #120]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e88:	68db      	ldr	r3, [r3, #12]
 8004e8a:	4a1d      	ldr	r2, [pc, #116]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004e8c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8004e90:	60d3      	str	r3, [r2, #12]
 8004e92:	e011      	b.n	8004eb8 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8004e94:	687b      	ldr	r3, [r7, #4]
 8004e96:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004e98:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8004e9c:	d10c      	bne.n	8004eb8 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	3304      	adds	r3, #4
 8004ea2:	2101      	movs	r1, #1
 8004ea4:	4618      	mov	r0, r3
 8004ea6:	f000 f869 	bl	8004f7c <RCCEx_PLLSAI1_Config>
 8004eaa:	4603      	mov	r3, r0
 8004eac:	74fb      	strb	r3, [r7, #19]
 8004eae:	7cfb      	ldrb	r3, [r7, #19]
 8004eb0:	2b00      	cmp	r3, #0
 8004eb2:	d001      	beq.n	8004eb8 <HAL_RCCEx_PeriphCLKConfig+0x4b0>
 8004eb4:	7cfb      	ldrb	r3, [r7, #19]
 8004eb6:	74bb      	strb	r3, [r7, #18]
 8004eb8:	687b      	ldr	r3, [r7, #4]
 8004eba:	681b      	ldr	r3, [r3, #0]
 8004ebc:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d031      	beq.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x520>
 8004ec4:	4b0e      	ldr	r3, [pc, #56]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004ec6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004eca:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 8004ece:	687b      	ldr	r3, [r7, #4]
 8004ed0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004ed2:	490b      	ldr	r1, [pc, #44]	@ (8004f00 <HAL_RCCEx_PeriphCLKConfig+0x4f8>)
 8004ed4:	4313      	orrs	r3, r2
 8004ed6:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004ede:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8004ee2:	d10f      	bne.n	8004f04 <HAL_RCCEx_PeriphCLKConfig+0x4fc>
 8004ee4:	687b      	ldr	r3, [r7, #4]
 8004ee6:	3304      	adds	r3, #4
 8004ee8:	2102      	movs	r1, #2
 8004eea:	4618      	mov	r0, r3
 8004eec:	f000 f846 	bl	8004f7c <RCCEx_PLLSAI1_Config>
 8004ef0:	4603      	mov	r3, r0
 8004ef2:	74fb      	strb	r3, [r7, #19]
 8004ef4:	7cfb      	ldrb	r3, [r7, #19]
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	d016      	beq.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x520>
 8004efa:	7cfb      	ldrb	r3, [r7, #19]
 8004efc:	74bb      	strb	r3, [r7, #18]
 8004efe:	e013      	b.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x520>
 8004f00:	40021000 	.word	0x40021000
 8004f04:	687b      	ldr	r3, [r7, #4]
 8004f06:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004f08:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8004f0c:	d10c      	bne.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x520>
 8004f0e:	687b      	ldr	r3, [r7, #4]
 8004f10:	3320      	adds	r3, #32
 8004f12:	2102      	movs	r1, #2
 8004f14:	4618      	mov	r0, r3
 8004f16:	f000 f925 	bl	8005164 <RCCEx_PLLSAI2_Config>
 8004f1a:	4603      	mov	r3, r0
 8004f1c:	74fb      	strb	r3, [r7, #19]
 8004f1e:	7cfb      	ldrb	r3, [r7, #19]
 8004f20:	2b00      	cmp	r3, #0
 8004f22:	d001      	beq.n	8004f28 <HAL_RCCEx_PeriphCLKConfig+0x520>
 8004f24:	7cfb      	ldrb	r3, [r7, #19]
 8004f26:	74bb      	strb	r3, [r7, #18]
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	681b      	ldr	r3, [r3, #0]
 8004f2c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004f30:	2b00      	cmp	r3, #0
 8004f32:	d00a      	beq.n	8004f4a <HAL_RCCEx_PeriphCLKConfig+0x542>
 8004f34:	4b10      	ldr	r3, [pc, #64]	@ (8004f78 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 8004f36:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004f3a:	f023 4280 	bic.w	r2, r3, #1073741824	@ 0x40000000
 8004f3e:	687b      	ldr	r3, [r7, #4]
 8004f40:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8004f42:	490d      	ldr	r1, [pc, #52]	@ (8004f78 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 8004f44:	4313      	orrs	r3, r2
 8004f46:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d00a      	beq.n	8004f6c <HAL_RCCEx_PeriphCLKConfig+0x564>
 8004f56:	4b08      	ldr	r3, [pc, #32]	@ (8004f78 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 8004f58:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8004f5c:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8004f64:	4904      	ldr	r1, [pc, #16]	@ (8004f78 <HAL_RCCEx_PeriphCLKConfig+0x570>)
 8004f66:	4313      	orrs	r3, r2
 8004f68:	f8c1 3088 	str.w	r3, [r1, #136]	@ 0x88
 8004f6c:	7cbb      	ldrb	r3, [r7, #18]
 8004f6e:	4618      	mov	r0, r3
 8004f70:	3718      	adds	r7, #24
 8004f72:	46bd      	mov	sp, r7
 8004f74:	bd80      	pop	{r7, pc}
 8004f76:	bf00      	nop
 8004f78:	40021000 	.word	0x40021000

08004f7c <RCCEx_PLLSAI1_Config>:
 8004f7c:	b580      	push	{r7, lr}
 8004f7e:	b084      	sub	sp, #16
 8004f80:	af00      	add	r7, sp, #0
 8004f82:	6078      	str	r0, [r7, #4]
 8004f84:	6039      	str	r1, [r7, #0]
 8004f86:	2300      	movs	r3, #0
 8004f88:	73fb      	strb	r3, [r7, #15]
 8004f8a:	4b75      	ldr	r3, [pc, #468]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004f8c:	68db      	ldr	r3, [r3, #12]
 8004f8e:	f003 0303 	and.w	r3, r3, #3
 8004f92:	2b00      	cmp	r3, #0
 8004f94:	d018      	beq.n	8004fc8 <RCCEx_PLLSAI1_Config+0x4c>
 8004f96:	4b72      	ldr	r3, [pc, #456]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004f98:	68db      	ldr	r3, [r3, #12]
 8004f9a:	f003 0203 	and.w	r2, r3, #3
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	681b      	ldr	r3, [r3, #0]
 8004fa2:	429a      	cmp	r2, r3
 8004fa4:	d10d      	bne.n	8004fc2 <RCCEx_PLLSAI1_Config+0x46>
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	681b      	ldr	r3, [r3, #0]
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d009      	beq.n	8004fc2 <RCCEx_PLLSAI1_Config+0x46>
 8004fae:	4b6c      	ldr	r3, [pc, #432]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004fb0:	68db      	ldr	r3, [r3, #12]
 8004fb2:	091b      	lsrs	r3, r3, #4
 8004fb4:	f003 0307 	and.w	r3, r3, #7
 8004fb8:	1c5a      	adds	r2, r3, #1
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	685b      	ldr	r3, [r3, #4]
 8004fbe:	429a      	cmp	r2, r3
 8004fc0:	d047      	beq.n	8005052 <RCCEx_PLLSAI1_Config+0xd6>
 8004fc2:	2301      	movs	r3, #1
 8004fc4:	73fb      	strb	r3, [r7, #15]
 8004fc6:	e044      	b.n	8005052 <RCCEx_PLLSAI1_Config+0xd6>
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	681b      	ldr	r3, [r3, #0]
 8004fcc:	2b03      	cmp	r3, #3
 8004fce:	d018      	beq.n	8005002 <RCCEx_PLLSAI1_Config+0x86>
 8004fd0:	2b03      	cmp	r3, #3
 8004fd2:	d825      	bhi.n	8005020 <RCCEx_PLLSAI1_Config+0xa4>
 8004fd4:	2b01      	cmp	r3, #1
 8004fd6:	d002      	beq.n	8004fde <RCCEx_PLLSAI1_Config+0x62>
 8004fd8:	2b02      	cmp	r3, #2
 8004fda:	d009      	beq.n	8004ff0 <RCCEx_PLLSAI1_Config+0x74>
 8004fdc:	e020      	b.n	8005020 <RCCEx_PLLSAI1_Config+0xa4>
 8004fde:	4b60      	ldr	r3, [pc, #384]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004fe0:	681b      	ldr	r3, [r3, #0]
 8004fe2:	f003 0302 	and.w	r3, r3, #2
 8004fe6:	2b00      	cmp	r3, #0
 8004fe8:	d11d      	bne.n	8005026 <RCCEx_PLLSAI1_Config+0xaa>
 8004fea:	2301      	movs	r3, #1
 8004fec:	73fb      	strb	r3, [r7, #15]
 8004fee:	e01a      	b.n	8005026 <RCCEx_PLLSAI1_Config+0xaa>
 8004ff0:	4b5b      	ldr	r3, [pc, #364]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8004ff2:	681b      	ldr	r3, [r3, #0]
 8004ff4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	d116      	bne.n	800502a <RCCEx_PLLSAI1_Config+0xae>
 8004ffc:	2301      	movs	r3, #1
 8004ffe:	73fb      	strb	r3, [r7, #15]
 8005000:	e013      	b.n	800502a <RCCEx_PLLSAI1_Config+0xae>
 8005002:	4b57      	ldr	r3, [pc, #348]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005004:	681b      	ldr	r3, [r3, #0]
 8005006:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800500a:	2b00      	cmp	r3, #0
 800500c:	d10f      	bne.n	800502e <RCCEx_PLLSAI1_Config+0xb2>
 800500e:	4b54      	ldr	r3, [pc, #336]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005010:	681b      	ldr	r3, [r3, #0]
 8005012:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8005016:	2b00      	cmp	r3, #0
 8005018:	d109      	bne.n	800502e <RCCEx_PLLSAI1_Config+0xb2>
 800501a:	2301      	movs	r3, #1
 800501c:	73fb      	strb	r3, [r7, #15]
 800501e:	e006      	b.n	800502e <RCCEx_PLLSAI1_Config+0xb2>
 8005020:	2301      	movs	r3, #1
 8005022:	73fb      	strb	r3, [r7, #15]
 8005024:	e004      	b.n	8005030 <RCCEx_PLLSAI1_Config+0xb4>
 8005026:	bf00      	nop
 8005028:	e002      	b.n	8005030 <RCCEx_PLLSAI1_Config+0xb4>
 800502a:	bf00      	nop
 800502c:	e000      	b.n	8005030 <RCCEx_PLLSAI1_Config+0xb4>
 800502e:	bf00      	nop
 8005030:	7bfb      	ldrb	r3, [r7, #15]
 8005032:	2b00      	cmp	r3, #0
 8005034:	d10d      	bne.n	8005052 <RCCEx_PLLSAI1_Config+0xd6>
 8005036:	4b4a      	ldr	r3, [pc, #296]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005038:	68db      	ldr	r3, [r3, #12]
 800503a:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	6819      	ldr	r1, [r3, #0]
 8005042:	687b      	ldr	r3, [r7, #4]
 8005044:	685b      	ldr	r3, [r3, #4]
 8005046:	3b01      	subs	r3, #1
 8005048:	011b      	lsls	r3, r3, #4
 800504a:	430b      	orrs	r3, r1
 800504c:	4944      	ldr	r1, [pc, #272]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 800504e:	4313      	orrs	r3, r2
 8005050:	60cb      	str	r3, [r1, #12]
 8005052:	7bfb      	ldrb	r3, [r7, #15]
 8005054:	2b00      	cmp	r3, #0
 8005056:	d17d      	bne.n	8005154 <RCCEx_PLLSAI1_Config+0x1d8>
 8005058:	4b41      	ldr	r3, [pc, #260]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 800505a:	681b      	ldr	r3, [r3, #0]
 800505c:	4a40      	ldr	r2, [pc, #256]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 800505e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8005062:	6013      	str	r3, [r2, #0]
 8005064:	f7fd f940 	bl	80022e8 <HAL_GetTick>
 8005068:	60b8      	str	r0, [r7, #8]
 800506a:	e009      	b.n	8005080 <RCCEx_PLLSAI1_Config+0x104>
 800506c:	f7fd f93c 	bl	80022e8 <HAL_GetTick>
 8005070:	4602      	mov	r2, r0
 8005072:	68bb      	ldr	r3, [r7, #8]
 8005074:	1ad3      	subs	r3, r2, r3
 8005076:	2b02      	cmp	r3, #2
 8005078:	d902      	bls.n	8005080 <RCCEx_PLLSAI1_Config+0x104>
 800507a:	2303      	movs	r3, #3
 800507c:	73fb      	strb	r3, [r7, #15]
 800507e:	e005      	b.n	800508c <RCCEx_PLLSAI1_Config+0x110>
 8005080:	4b37      	ldr	r3, [pc, #220]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8005088:	2b00      	cmp	r3, #0
 800508a:	d1ef      	bne.n	800506c <RCCEx_PLLSAI1_Config+0xf0>
 800508c:	7bfb      	ldrb	r3, [r7, #15]
 800508e:	2b00      	cmp	r3, #0
 8005090:	d160      	bne.n	8005154 <RCCEx_PLLSAI1_Config+0x1d8>
 8005092:	683b      	ldr	r3, [r7, #0]
 8005094:	2b00      	cmp	r3, #0
 8005096:	d111      	bne.n	80050bc <RCCEx_PLLSAI1_Config+0x140>
 8005098:	4b31      	ldr	r3, [pc, #196]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 800509a:	691b      	ldr	r3, [r3, #16]
 800509c:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 80050a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80050a4:	687a      	ldr	r2, [r7, #4]
 80050a6:	6892      	ldr	r2, [r2, #8]
 80050a8:	0211      	lsls	r1, r2, #8
 80050aa:	687a      	ldr	r2, [r7, #4]
 80050ac:	68d2      	ldr	r2, [r2, #12]
 80050ae:	0912      	lsrs	r2, r2, #4
 80050b0:	0452      	lsls	r2, r2, #17
 80050b2:	430a      	orrs	r2, r1
 80050b4:	492a      	ldr	r1, [pc, #168]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 80050b6:	4313      	orrs	r3, r2
 80050b8:	610b      	str	r3, [r1, #16]
 80050ba:	e027      	b.n	800510c <RCCEx_PLLSAI1_Config+0x190>
 80050bc:	683b      	ldr	r3, [r7, #0]
 80050be:	2b01      	cmp	r3, #1
 80050c0:	d112      	bne.n	80050e8 <RCCEx_PLLSAI1_Config+0x16c>
 80050c2:	4b27      	ldr	r3, [pc, #156]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 80050c4:	691b      	ldr	r3, [r3, #16]
 80050c6:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 80050ca:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80050ce:	687a      	ldr	r2, [r7, #4]
 80050d0:	6892      	ldr	r2, [r2, #8]
 80050d2:	0211      	lsls	r1, r2, #8
 80050d4:	687a      	ldr	r2, [r7, #4]
 80050d6:	6912      	ldr	r2, [r2, #16]
 80050d8:	0852      	lsrs	r2, r2, #1
 80050da:	3a01      	subs	r2, #1
 80050dc:	0552      	lsls	r2, r2, #21
 80050de:	430a      	orrs	r2, r1
 80050e0:	491f      	ldr	r1, [pc, #124]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 80050e2:	4313      	orrs	r3, r2
 80050e4:	610b      	str	r3, [r1, #16]
 80050e6:	e011      	b.n	800510c <RCCEx_PLLSAI1_Config+0x190>
 80050e8:	4b1d      	ldr	r3, [pc, #116]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 80050ea:	691b      	ldr	r3, [r3, #16]
 80050ec:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 80050f0:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80050f4:	687a      	ldr	r2, [r7, #4]
 80050f6:	6892      	ldr	r2, [r2, #8]
 80050f8:	0211      	lsls	r1, r2, #8
 80050fa:	687a      	ldr	r2, [r7, #4]
 80050fc:	6952      	ldr	r2, [r2, #20]
 80050fe:	0852      	lsrs	r2, r2, #1
 8005100:	3a01      	subs	r2, #1
 8005102:	0652      	lsls	r2, r2, #25
 8005104:	430a      	orrs	r2, r1
 8005106:	4916      	ldr	r1, [pc, #88]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005108:	4313      	orrs	r3, r2
 800510a:	610b      	str	r3, [r1, #16]
 800510c:	4b14      	ldr	r3, [pc, #80]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	4a13      	ldr	r2, [pc, #76]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005112:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8005116:	6013      	str	r3, [r2, #0]
 8005118:	f7fd f8e6 	bl	80022e8 <HAL_GetTick>
 800511c:	60b8      	str	r0, [r7, #8]
 800511e:	e009      	b.n	8005134 <RCCEx_PLLSAI1_Config+0x1b8>
 8005120:	f7fd f8e2 	bl	80022e8 <HAL_GetTick>
 8005124:	4602      	mov	r2, r0
 8005126:	68bb      	ldr	r3, [r7, #8]
 8005128:	1ad3      	subs	r3, r2, r3
 800512a:	2b02      	cmp	r3, #2
 800512c:	d902      	bls.n	8005134 <RCCEx_PLLSAI1_Config+0x1b8>
 800512e:	2303      	movs	r3, #3
 8005130:	73fb      	strb	r3, [r7, #15]
 8005132:	e005      	b.n	8005140 <RCCEx_PLLSAI1_Config+0x1c4>
 8005134:	4b0a      	ldr	r3, [pc, #40]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005136:	681b      	ldr	r3, [r3, #0]
 8005138:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800513c:	2b00      	cmp	r3, #0
 800513e:	d0ef      	beq.n	8005120 <RCCEx_PLLSAI1_Config+0x1a4>
 8005140:	7bfb      	ldrb	r3, [r7, #15]
 8005142:	2b00      	cmp	r3, #0
 8005144:	d106      	bne.n	8005154 <RCCEx_PLLSAI1_Config+0x1d8>
 8005146:	4b06      	ldr	r3, [pc, #24]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005148:	691a      	ldr	r2, [r3, #16]
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	699b      	ldr	r3, [r3, #24]
 800514e:	4904      	ldr	r1, [pc, #16]	@ (8005160 <RCCEx_PLLSAI1_Config+0x1e4>)
 8005150:	4313      	orrs	r3, r2
 8005152:	610b      	str	r3, [r1, #16]
 8005154:	7bfb      	ldrb	r3, [r7, #15]
 8005156:	4618      	mov	r0, r3
 8005158:	3710      	adds	r7, #16
 800515a:	46bd      	mov	sp, r7
 800515c:	bd80      	pop	{r7, pc}
 800515e:	bf00      	nop
 8005160:	40021000 	.word	0x40021000

08005164 <RCCEx_PLLSAI2_Config>:
 8005164:	b580      	push	{r7, lr}
 8005166:	b084      	sub	sp, #16
 8005168:	af00      	add	r7, sp, #0
 800516a:	6078      	str	r0, [r7, #4]
 800516c:	6039      	str	r1, [r7, #0]
 800516e:	2300      	movs	r3, #0
 8005170:	73fb      	strb	r3, [r7, #15]
 8005172:	4b6a      	ldr	r3, [pc, #424]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005174:	68db      	ldr	r3, [r3, #12]
 8005176:	f003 0303 	and.w	r3, r3, #3
 800517a:	2b00      	cmp	r3, #0
 800517c:	d018      	beq.n	80051b0 <RCCEx_PLLSAI2_Config+0x4c>
 800517e:	4b67      	ldr	r3, [pc, #412]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005180:	68db      	ldr	r3, [r3, #12]
 8005182:	f003 0203 	and.w	r2, r3, #3
 8005186:	687b      	ldr	r3, [r7, #4]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	429a      	cmp	r2, r3
 800518c:	d10d      	bne.n	80051aa <RCCEx_PLLSAI2_Config+0x46>
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	681b      	ldr	r3, [r3, #0]
 8005192:	2b00      	cmp	r3, #0
 8005194:	d009      	beq.n	80051aa <RCCEx_PLLSAI2_Config+0x46>
 8005196:	4b61      	ldr	r3, [pc, #388]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005198:	68db      	ldr	r3, [r3, #12]
 800519a:	091b      	lsrs	r3, r3, #4
 800519c:	f003 0307 	and.w	r3, r3, #7
 80051a0:	1c5a      	adds	r2, r3, #1
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	685b      	ldr	r3, [r3, #4]
 80051a6:	429a      	cmp	r2, r3
 80051a8:	d047      	beq.n	800523a <RCCEx_PLLSAI2_Config+0xd6>
 80051aa:	2301      	movs	r3, #1
 80051ac:	73fb      	strb	r3, [r7, #15]
 80051ae:	e044      	b.n	800523a <RCCEx_PLLSAI2_Config+0xd6>
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	2b03      	cmp	r3, #3
 80051b6:	d018      	beq.n	80051ea <RCCEx_PLLSAI2_Config+0x86>
 80051b8:	2b03      	cmp	r3, #3
 80051ba:	d825      	bhi.n	8005208 <RCCEx_PLLSAI2_Config+0xa4>
 80051bc:	2b01      	cmp	r3, #1
 80051be:	d002      	beq.n	80051c6 <RCCEx_PLLSAI2_Config+0x62>
 80051c0:	2b02      	cmp	r3, #2
 80051c2:	d009      	beq.n	80051d8 <RCCEx_PLLSAI2_Config+0x74>
 80051c4:	e020      	b.n	8005208 <RCCEx_PLLSAI2_Config+0xa4>
 80051c6:	4b55      	ldr	r3, [pc, #340]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	f003 0302 	and.w	r3, r3, #2
 80051ce:	2b00      	cmp	r3, #0
 80051d0:	d11d      	bne.n	800520e <RCCEx_PLLSAI2_Config+0xaa>
 80051d2:	2301      	movs	r3, #1
 80051d4:	73fb      	strb	r3, [r7, #15]
 80051d6:	e01a      	b.n	800520e <RCCEx_PLLSAI2_Config+0xaa>
 80051d8:	4b50      	ldr	r3, [pc, #320]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80051da:	681b      	ldr	r3, [r3, #0]
 80051dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80051e0:	2b00      	cmp	r3, #0
 80051e2:	d116      	bne.n	8005212 <RCCEx_PLLSAI2_Config+0xae>
 80051e4:	2301      	movs	r3, #1
 80051e6:	73fb      	strb	r3, [r7, #15]
 80051e8:	e013      	b.n	8005212 <RCCEx_PLLSAI2_Config+0xae>
 80051ea:	4b4c      	ldr	r3, [pc, #304]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80051f2:	2b00      	cmp	r3, #0
 80051f4:	d10f      	bne.n	8005216 <RCCEx_PLLSAI2_Config+0xb2>
 80051f6:	4b49      	ldr	r3, [pc, #292]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80051fe:	2b00      	cmp	r3, #0
 8005200:	d109      	bne.n	8005216 <RCCEx_PLLSAI2_Config+0xb2>
 8005202:	2301      	movs	r3, #1
 8005204:	73fb      	strb	r3, [r7, #15]
 8005206:	e006      	b.n	8005216 <RCCEx_PLLSAI2_Config+0xb2>
 8005208:	2301      	movs	r3, #1
 800520a:	73fb      	strb	r3, [r7, #15]
 800520c:	e004      	b.n	8005218 <RCCEx_PLLSAI2_Config+0xb4>
 800520e:	bf00      	nop
 8005210:	e002      	b.n	8005218 <RCCEx_PLLSAI2_Config+0xb4>
 8005212:	bf00      	nop
 8005214:	e000      	b.n	8005218 <RCCEx_PLLSAI2_Config+0xb4>
 8005216:	bf00      	nop
 8005218:	7bfb      	ldrb	r3, [r7, #15]
 800521a:	2b00      	cmp	r3, #0
 800521c:	d10d      	bne.n	800523a <RCCEx_PLLSAI2_Config+0xd6>
 800521e:	4b3f      	ldr	r3, [pc, #252]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005220:	68db      	ldr	r3, [r3, #12]
 8005222:	f023 0273 	bic.w	r2, r3, #115	@ 0x73
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	6819      	ldr	r1, [r3, #0]
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	685b      	ldr	r3, [r3, #4]
 800522e:	3b01      	subs	r3, #1
 8005230:	011b      	lsls	r3, r3, #4
 8005232:	430b      	orrs	r3, r1
 8005234:	4939      	ldr	r1, [pc, #228]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005236:	4313      	orrs	r3, r2
 8005238:	60cb      	str	r3, [r1, #12]
 800523a:	7bfb      	ldrb	r3, [r7, #15]
 800523c:	2b00      	cmp	r3, #0
 800523e:	d167      	bne.n	8005310 <RCCEx_PLLSAI2_Config+0x1ac>
 8005240:	4b36      	ldr	r3, [pc, #216]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	4a35      	ldr	r2, [pc, #212]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005246:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800524a:	6013      	str	r3, [r2, #0]
 800524c:	f7fd f84c 	bl	80022e8 <HAL_GetTick>
 8005250:	60b8      	str	r0, [r7, #8]
 8005252:	e009      	b.n	8005268 <RCCEx_PLLSAI2_Config+0x104>
 8005254:	f7fd f848 	bl	80022e8 <HAL_GetTick>
 8005258:	4602      	mov	r2, r0
 800525a:	68bb      	ldr	r3, [r7, #8]
 800525c:	1ad3      	subs	r3, r2, r3
 800525e:	2b02      	cmp	r3, #2
 8005260:	d902      	bls.n	8005268 <RCCEx_PLLSAI2_Config+0x104>
 8005262:	2303      	movs	r3, #3
 8005264:	73fb      	strb	r3, [r7, #15]
 8005266:	e005      	b.n	8005274 <RCCEx_PLLSAI2_Config+0x110>
 8005268:	4b2c      	ldr	r3, [pc, #176]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8005270:	2b00      	cmp	r3, #0
 8005272:	d1ef      	bne.n	8005254 <RCCEx_PLLSAI2_Config+0xf0>
 8005274:	7bfb      	ldrb	r3, [r7, #15]
 8005276:	2b00      	cmp	r3, #0
 8005278:	d14a      	bne.n	8005310 <RCCEx_PLLSAI2_Config+0x1ac>
 800527a:	683b      	ldr	r3, [r7, #0]
 800527c:	2b00      	cmp	r3, #0
 800527e:	d111      	bne.n	80052a4 <RCCEx_PLLSAI2_Config+0x140>
 8005280:	4b26      	ldr	r3, [pc, #152]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005282:	695b      	ldr	r3, [r3, #20]
 8005284:	f423 331f 	bic.w	r3, r3, #162816	@ 0x27c00
 8005288:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800528c:	687a      	ldr	r2, [r7, #4]
 800528e:	6892      	ldr	r2, [r2, #8]
 8005290:	0211      	lsls	r1, r2, #8
 8005292:	687a      	ldr	r2, [r7, #4]
 8005294:	68d2      	ldr	r2, [r2, #12]
 8005296:	0912      	lsrs	r2, r2, #4
 8005298:	0452      	lsls	r2, r2, #17
 800529a:	430a      	orrs	r2, r1
 800529c:	491f      	ldr	r1, [pc, #124]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 800529e:	4313      	orrs	r3, r2
 80052a0:	614b      	str	r3, [r1, #20]
 80052a2:	e011      	b.n	80052c8 <RCCEx_PLLSAI2_Config+0x164>
 80052a4:	4b1d      	ldr	r3, [pc, #116]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80052a6:	695b      	ldr	r3, [r3, #20]
 80052a8:	f023 63c0 	bic.w	r3, r3, #100663296	@ 0x6000000
 80052ac:	f423 43fe 	bic.w	r3, r3, #32512	@ 0x7f00
 80052b0:	687a      	ldr	r2, [r7, #4]
 80052b2:	6892      	ldr	r2, [r2, #8]
 80052b4:	0211      	lsls	r1, r2, #8
 80052b6:	687a      	ldr	r2, [r7, #4]
 80052b8:	6912      	ldr	r2, [r2, #16]
 80052ba:	0852      	lsrs	r2, r2, #1
 80052bc:	3a01      	subs	r2, #1
 80052be:	0652      	lsls	r2, r2, #25
 80052c0:	430a      	orrs	r2, r1
 80052c2:	4916      	ldr	r1, [pc, #88]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80052c4:	4313      	orrs	r3, r2
 80052c6:	614b      	str	r3, [r1, #20]
 80052c8:	4b14      	ldr	r3, [pc, #80]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80052ca:	681b      	ldr	r3, [r3, #0]
 80052cc:	4a13      	ldr	r2, [pc, #76]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80052ce:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80052d2:	6013      	str	r3, [r2, #0]
 80052d4:	f7fd f808 	bl	80022e8 <HAL_GetTick>
 80052d8:	60b8      	str	r0, [r7, #8]
 80052da:	e009      	b.n	80052f0 <RCCEx_PLLSAI2_Config+0x18c>
 80052dc:	f7fd f804 	bl	80022e8 <HAL_GetTick>
 80052e0:	4602      	mov	r2, r0
 80052e2:	68bb      	ldr	r3, [r7, #8]
 80052e4:	1ad3      	subs	r3, r2, r3
 80052e6:	2b02      	cmp	r3, #2
 80052e8:	d902      	bls.n	80052f0 <RCCEx_PLLSAI2_Config+0x18c>
 80052ea:	2303      	movs	r3, #3
 80052ec:	73fb      	strb	r3, [r7, #15]
 80052ee:	e005      	b.n	80052fc <RCCEx_PLLSAI2_Config+0x198>
 80052f0:	4b0a      	ldr	r3, [pc, #40]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 80052f2:	681b      	ldr	r3, [r3, #0]
 80052f4:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80052f8:	2b00      	cmp	r3, #0
 80052fa:	d0ef      	beq.n	80052dc <RCCEx_PLLSAI2_Config+0x178>
 80052fc:	7bfb      	ldrb	r3, [r7, #15]
 80052fe:	2b00      	cmp	r3, #0
 8005300:	d106      	bne.n	8005310 <RCCEx_PLLSAI2_Config+0x1ac>
 8005302:	4b06      	ldr	r3, [pc, #24]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 8005304:	695a      	ldr	r2, [r3, #20]
 8005306:	687b      	ldr	r3, [r7, #4]
 8005308:	695b      	ldr	r3, [r3, #20]
 800530a:	4904      	ldr	r1, [pc, #16]	@ (800531c <RCCEx_PLLSAI2_Config+0x1b8>)
 800530c:	4313      	orrs	r3, r2
 800530e:	614b      	str	r3, [r1, #20]
 8005310:	7bfb      	ldrb	r3, [r7, #15]
 8005312:	4618      	mov	r0, r3
 8005314:	3710      	adds	r7, #16
 8005316:	46bd      	mov	sp, r7
 8005318:	bd80      	pop	{r7, pc}
 800531a:	bf00      	nop
 800531c:	40021000 	.word	0x40021000

08005320 <HAL_SPI_Init>:
 8005320:	b580      	push	{r7, lr}
 8005322:	b084      	sub	sp, #16
 8005324:	af00      	add	r7, sp, #0
 8005326:	6078      	str	r0, [r7, #4]
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	2b00      	cmp	r3, #0
 800532c:	d101      	bne.n	8005332 <HAL_SPI_Init+0x12>
 800532e:	2301      	movs	r3, #1
 8005330:	e095      	b.n	800545e <HAL_SPI_Init+0x13e>
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005336:	2b00      	cmp	r3, #0
 8005338:	d108      	bne.n	800534c <HAL_SPI_Init+0x2c>
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	685b      	ldr	r3, [r3, #4]
 800533e:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005342:	d009      	beq.n	8005358 <HAL_SPI_Init+0x38>
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	2200      	movs	r2, #0
 8005348:	61da      	str	r2, [r3, #28]
 800534a:	e005      	b.n	8005358 <HAL_SPI_Init+0x38>
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	2200      	movs	r2, #0
 8005350:	611a      	str	r2, [r3, #16]
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	2200      	movs	r2, #0
 8005356:	615a      	str	r2, [r3, #20]
 8005358:	687b      	ldr	r3, [r7, #4]
 800535a:	2200      	movs	r2, #0
 800535c:	629a      	str	r2, [r3, #40]	@ 0x28
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	f893 305d 	ldrb.w	r3, [r3, #93]	@ 0x5d
 8005364:	b2db      	uxtb	r3, r3
 8005366:	2b00      	cmp	r3, #0
 8005368:	d106      	bne.n	8005378 <HAL_SPI_Init+0x58>
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	2200      	movs	r2, #0
 800536e:	f883 205c 	strb.w	r2, [r3, #92]	@ 0x5c
 8005372:	6878      	ldr	r0, [r7, #4]
 8005374:	f7fc fbae 	bl	8001ad4 <HAL_SPI_MspInit>
 8005378:	687b      	ldr	r3, [r7, #4]
 800537a:	2202      	movs	r2, #2
 800537c:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	681b      	ldr	r3, [r3, #0]
 8005384:	681a      	ldr	r2, [r3, #0]
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800538e:	601a      	str	r2, [r3, #0]
 8005390:	687b      	ldr	r3, [r7, #4]
 8005392:	68db      	ldr	r3, [r3, #12]
 8005394:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 8005398:	d902      	bls.n	80053a0 <HAL_SPI_Init+0x80>
 800539a:	2300      	movs	r3, #0
 800539c:	60fb      	str	r3, [r7, #12]
 800539e:	e002      	b.n	80053a6 <HAL_SPI_Init+0x86>
 80053a0:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80053a4:	60fb      	str	r3, [r7, #12]
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	68db      	ldr	r3, [r3, #12]
 80053aa:	f5b3 6f70 	cmp.w	r3, #3840	@ 0xf00
 80053ae:	d007      	beq.n	80053c0 <HAL_SPI_Init+0xa0>
 80053b0:	687b      	ldr	r3, [r7, #4]
 80053b2:	68db      	ldr	r3, [r3, #12]
 80053b4:	f5b3 6fe0 	cmp.w	r3, #1792	@ 0x700
 80053b8:	d002      	beq.n	80053c0 <HAL_SPI_Init+0xa0>
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	2200      	movs	r2, #0
 80053be:	629a      	str	r2, [r3, #40]	@ 0x28
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	685b      	ldr	r3, [r3, #4]
 80053c4:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	689b      	ldr	r3, [r3, #8]
 80053cc:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80053d0:	431a      	orrs	r2, r3
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	691b      	ldr	r3, [r3, #16]
 80053d6:	f003 0302 	and.w	r3, r3, #2
 80053da:	431a      	orrs	r2, r3
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	695b      	ldr	r3, [r3, #20]
 80053e0:	f003 0301 	and.w	r3, r3, #1
 80053e4:	431a      	orrs	r2, r3
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	699b      	ldr	r3, [r3, #24]
 80053ea:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80053ee:	431a      	orrs	r2, r3
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	69db      	ldr	r3, [r3, #28]
 80053f4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80053f8:	431a      	orrs	r2, r3
 80053fa:	687b      	ldr	r3, [r7, #4]
 80053fc:	6a1b      	ldr	r3, [r3, #32]
 80053fe:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005402:	ea42 0103 	orr.w	r1, r2, r3
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800540a:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 800540e:	687b      	ldr	r3, [r7, #4]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	430a      	orrs	r2, r1
 8005414:	601a      	str	r2, [r3, #0]
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	699b      	ldr	r3, [r3, #24]
 800541a:	0c1b      	lsrs	r3, r3, #16
 800541c:	f003 0204 	and.w	r2, r3, #4
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005424:	f003 0310 	and.w	r3, r3, #16
 8005428:	431a      	orrs	r2, r3
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800542e:	f003 0308 	and.w	r3, r3, #8
 8005432:	431a      	orrs	r2, r3
 8005434:	687b      	ldr	r3, [r7, #4]
 8005436:	68db      	ldr	r3, [r3, #12]
 8005438:	f403 6370 	and.w	r3, r3, #3840	@ 0xf00
 800543c:	ea42 0103 	orr.w	r1, r2, r3
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	f403 5280 	and.w	r2, r3, #4096	@ 0x1000
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	681b      	ldr	r3, [r3, #0]
 800544a:	430a      	orrs	r2, r1
 800544c:	605a      	str	r2, [r3, #4]
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	2200      	movs	r2, #0
 8005452:	661a      	str	r2, [r3, #96]	@ 0x60
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	2201      	movs	r2, #1
 8005458:	f883 205d 	strb.w	r2, [r3, #93]	@ 0x5d
 800545c:	2300      	movs	r3, #0
 800545e:	4618      	mov	r0, r3
 8005460:	3710      	adds	r7, #16
 8005462:	46bd      	mov	sp, r7
 8005464:	bd80      	pop	{r7, pc}

08005466 <HAL_TIM_Base_Init>:
 8005466:	b580      	push	{r7, lr}
 8005468:	b082      	sub	sp, #8
 800546a:	af00      	add	r7, sp, #0
 800546c:	6078      	str	r0, [r7, #4]
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	2b00      	cmp	r3, #0
 8005472:	d101      	bne.n	8005478 <HAL_TIM_Base_Init+0x12>
 8005474:	2301      	movs	r3, #1
 8005476:	e049      	b.n	800550c <HAL_TIM_Base_Init+0xa6>
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800547e:	b2db      	uxtb	r3, r3
 8005480:	2b00      	cmp	r3, #0
 8005482:	d106      	bne.n	8005492 <HAL_TIM_Base_Init+0x2c>
 8005484:	687b      	ldr	r3, [r7, #4]
 8005486:	2200      	movs	r2, #0
 8005488:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800548c:	6878      	ldr	r0, [r7, #4]
 800548e:	f7fc fb83 	bl	8001b98 <HAL_TIM_Base_MspInit>
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	2202      	movs	r2, #2
 8005496:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800549a:	687b      	ldr	r3, [r7, #4]
 800549c:	681a      	ldr	r2, [r3, #0]
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	3304      	adds	r3, #4
 80054a2:	4619      	mov	r1, r3
 80054a4:	4610      	mov	r0, r2
 80054a6:	f001 f871 	bl	800658c <TIM_Base_SetConfig>
 80054aa:	687b      	ldr	r3, [r7, #4]
 80054ac:	2201      	movs	r2, #1
 80054ae:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80054b2:	687b      	ldr	r3, [r7, #4]
 80054b4:	2201      	movs	r2, #1
 80054b6:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	2201      	movs	r2, #1
 80054be:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	2201      	movs	r2, #1
 80054c6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	2201      	movs	r2, #1
 80054ce:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	2201      	movs	r2, #1
 80054d6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80054da:	687b      	ldr	r3, [r7, #4]
 80054dc:	2201      	movs	r2, #1
 80054de:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	2201      	movs	r2, #1
 80054e6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	2201      	movs	r2, #1
 80054ee:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	2201      	movs	r2, #1
 80054f6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	2201      	movs	r2, #1
 80054fe:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	2201      	movs	r2, #1
 8005506:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800550a:	2300      	movs	r3, #0
 800550c:	4618      	mov	r0, r3
 800550e:	3708      	adds	r7, #8
 8005510:	46bd      	mov	sp, r7
 8005512:	bd80      	pop	{r7, pc}

08005514 <HAL_TIM_PWM_Init>:
 8005514:	b580      	push	{r7, lr}
 8005516:	b082      	sub	sp, #8
 8005518:	af00      	add	r7, sp, #0
 800551a:	6078      	str	r0, [r7, #4]
 800551c:	687b      	ldr	r3, [r7, #4]
 800551e:	2b00      	cmp	r3, #0
 8005520:	d101      	bne.n	8005526 <HAL_TIM_PWM_Init+0x12>
 8005522:	2301      	movs	r3, #1
 8005524:	e049      	b.n	80055ba <HAL_TIM_PWM_Init+0xa6>
 8005526:	687b      	ldr	r3, [r7, #4]
 8005528:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800552c:	b2db      	uxtb	r3, r3
 800552e:	2b00      	cmp	r3, #0
 8005530:	d106      	bne.n	8005540 <HAL_TIM_PWM_Init+0x2c>
 8005532:	687b      	ldr	r3, [r7, #4]
 8005534:	2200      	movs	r2, #0
 8005536:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800553a:	6878      	ldr	r0, [r7, #4]
 800553c:	f7fc fc88 	bl	8001e50 <HAL_TIM_PWM_MspInit>
 8005540:	687b      	ldr	r3, [r7, #4]
 8005542:	2202      	movs	r2, #2
 8005544:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	681a      	ldr	r2, [r3, #0]
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	3304      	adds	r3, #4
 8005550:	4619      	mov	r1, r3
 8005552:	4610      	mov	r0, r2
 8005554:	f001 f81a 	bl	800658c <TIM_Base_SetConfig>
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	2201      	movs	r2, #1
 800555c:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	2201      	movs	r2, #1
 8005564:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	2201      	movs	r2, #1
 800556c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	2201      	movs	r2, #1
 8005574:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	2201      	movs	r2, #1
 800557c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	2201      	movs	r2, #1
 8005584:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	2201      	movs	r2, #1
 800558c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	2201      	movs	r2, #1
 8005594:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	2201      	movs	r2, #1
 800559c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	2201      	movs	r2, #1
 80055a4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	2201      	movs	r2, #1
 80055ac:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	2201      	movs	r2, #1
 80055b4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80055b8:	2300      	movs	r3, #0
 80055ba:	4618      	mov	r0, r3
 80055bc:	3708      	adds	r7, #8
 80055be:	46bd      	mov	sp, r7
 80055c0:	bd80      	pop	{r7, pc}
	...

080055c4 <HAL_TIM_PWM_Start>:
 80055c4:	b580      	push	{r7, lr}
 80055c6:	b084      	sub	sp, #16
 80055c8:	af00      	add	r7, sp, #0
 80055ca:	6078      	str	r0, [r7, #4]
 80055cc:	6039      	str	r1, [r7, #0]
 80055ce:	683b      	ldr	r3, [r7, #0]
 80055d0:	2b00      	cmp	r3, #0
 80055d2:	d109      	bne.n	80055e8 <HAL_TIM_PWM_Start+0x24>
 80055d4:	687b      	ldr	r3, [r7, #4]
 80055d6:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 80055da:	b2db      	uxtb	r3, r3
 80055dc:	2b01      	cmp	r3, #1
 80055de:	bf14      	ite	ne
 80055e0:	2301      	movne	r3, #1
 80055e2:	2300      	moveq	r3, #0
 80055e4:	b2db      	uxtb	r3, r3
 80055e6:	e03c      	b.n	8005662 <HAL_TIM_PWM_Start+0x9e>
 80055e8:	683b      	ldr	r3, [r7, #0]
 80055ea:	2b04      	cmp	r3, #4
 80055ec:	d109      	bne.n	8005602 <HAL_TIM_PWM_Start+0x3e>
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80055f4:	b2db      	uxtb	r3, r3
 80055f6:	2b01      	cmp	r3, #1
 80055f8:	bf14      	ite	ne
 80055fa:	2301      	movne	r3, #1
 80055fc:	2300      	moveq	r3, #0
 80055fe:	b2db      	uxtb	r3, r3
 8005600:	e02f      	b.n	8005662 <HAL_TIM_PWM_Start+0x9e>
 8005602:	683b      	ldr	r3, [r7, #0]
 8005604:	2b08      	cmp	r3, #8
 8005606:	d109      	bne.n	800561c <HAL_TIM_PWM_Start+0x58>
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800560e:	b2db      	uxtb	r3, r3
 8005610:	2b01      	cmp	r3, #1
 8005612:	bf14      	ite	ne
 8005614:	2301      	movne	r3, #1
 8005616:	2300      	moveq	r3, #0
 8005618:	b2db      	uxtb	r3, r3
 800561a:	e022      	b.n	8005662 <HAL_TIM_PWM_Start+0x9e>
 800561c:	683b      	ldr	r3, [r7, #0]
 800561e:	2b0c      	cmp	r3, #12
 8005620:	d109      	bne.n	8005636 <HAL_TIM_PWM_Start+0x72>
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005628:	b2db      	uxtb	r3, r3
 800562a:	2b01      	cmp	r3, #1
 800562c:	bf14      	ite	ne
 800562e:	2301      	movne	r3, #1
 8005630:	2300      	moveq	r3, #0
 8005632:	b2db      	uxtb	r3, r3
 8005634:	e015      	b.n	8005662 <HAL_TIM_PWM_Start+0x9e>
 8005636:	683b      	ldr	r3, [r7, #0]
 8005638:	2b10      	cmp	r3, #16
 800563a:	d109      	bne.n	8005650 <HAL_TIM_PWM_Start+0x8c>
 800563c:	687b      	ldr	r3, [r7, #4]
 800563e:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 8005642:	b2db      	uxtb	r3, r3
 8005644:	2b01      	cmp	r3, #1
 8005646:	bf14      	ite	ne
 8005648:	2301      	movne	r3, #1
 800564a:	2300      	moveq	r3, #0
 800564c:	b2db      	uxtb	r3, r3
 800564e:	e008      	b.n	8005662 <HAL_TIM_PWM_Start+0x9e>
 8005650:	687b      	ldr	r3, [r7, #4]
 8005652:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 8005656:	b2db      	uxtb	r3, r3
 8005658:	2b01      	cmp	r3, #1
 800565a:	bf14      	ite	ne
 800565c:	2301      	movne	r3, #1
 800565e:	2300      	moveq	r3, #0
 8005660:	b2db      	uxtb	r3, r3
 8005662:	2b00      	cmp	r3, #0
 8005664:	d001      	beq.n	800566a <HAL_TIM_PWM_Start+0xa6>
 8005666:	2301      	movs	r3, #1
 8005668:	e09c      	b.n	80057a4 <HAL_TIM_PWM_Start+0x1e0>
 800566a:	683b      	ldr	r3, [r7, #0]
 800566c:	2b00      	cmp	r3, #0
 800566e:	d104      	bne.n	800567a <HAL_TIM_PWM_Start+0xb6>
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	2202      	movs	r2, #2
 8005674:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005678:	e023      	b.n	80056c2 <HAL_TIM_PWM_Start+0xfe>
 800567a:	683b      	ldr	r3, [r7, #0]
 800567c:	2b04      	cmp	r3, #4
 800567e:	d104      	bne.n	800568a <HAL_TIM_PWM_Start+0xc6>
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	2202      	movs	r2, #2
 8005684:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005688:	e01b      	b.n	80056c2 <HAL_TIM_PWM_Start+0xfe>
 800568a:	683b      	ldr	r3, [r7, #0]
 800568c:	2b08      	cmp	r3, #8
 800568e:	d104      	bne.n	800569a <HAL_TIM_PWM_Start+0xd6>
 8005690:	687b      	ldr	r3, [r7, #4]
 8005692:	2202      	movs	r2, #2
 8005694:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005698:	e013      	b.n	80056c2 <HAL_TIM_PWM_Start+0xfe>
 800569a:	683b      	ldr	r3, [r7, #0]
 800569c:	2b0c      	cmp	r3, #12
 800569e:	d104      	bne.n	80056aa <HAL_TIM_PWM_Start+0xe6>
 80056a0:	687b      	ldr	r3, [r7, #4]
 80056a2:	2202      	movs	r2, #2
 80056a4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80056a8:	e00b      	b.n	80056c2 <HAL_TIM_PWM_Start+0xfe>
 80056aa:	683b      	ldr	r3, [r7, #0]
 80056ac:	2b10      	cmp	r3, #16
 80056ae:	d104      	bne.n	80056ba <HAL_TIM_PWM_Start+0xf6>
 80056b0:	687b      	ldr	r3, [r7, #4]
 80056b2:	2202      	movs	r2, #2
 80056b4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80056b8:	e003      	b.n	80056c2 <HAL_TIM_PWM_Start+0xfe>
 80056ba:	687b      	ldr	r3, [r7, #4]
 80056bc:	2202      	movs	r2, #2
 80056be:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80056c2:	687b      	ldr	r3, [r7, #4]
 80056c4:	681b      	ldr	r3, [r3, #0]
 80056c6:	2201      	movs	r2, #1
 80056c8:	6839      	ldr	r1, [r7, #0]
 80056ca:	4618      	mov	r0, r3
 80056cc:	f001 fc8c 	bl	8006fe8 <TIM_CCxChannelCmd>
 80056d0:	687b      	ldr	r3, [r7, #4]
 80056d2:	681b      	ldr	r3, [r3, #0]
 80056d4:	4a35      	ldr	r2, [pc, #212]	@ (80057ac <HAL_TIM_PWM_Start+0x1e8>)
 80056d6:	4293      	cmp	r3, r2
 80056d8:	d013      	beq.n	8005702 <HAL_TIM_PWM_Start+0x13e>
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	681b      	ldr	r3, [r3, #0]
 80056de:	4a34      	ldr	r2, [pc, #208]	@ (80057b0 <HAL_TIM_PWM_Start+0x1ec>)
 80056e0:	4293      	cmp	r3, r2
 80056e2:	d00e      	beq.n	8005702 <HAL_TIM_PWM_Start+0x13e>
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	681b      	ldr	r3, [r3, #0]
 80056e8:	4a32      	ldr	r2, [pc, #200]	@ (80057b4 <HAL_TIM_PWM_Start+0x1f0>)
 80056ea:	4293      	cmp	r3, r2
 80056ec:	d009      	beq.n	8005702 <HAL_TIM_PWM_Start+0x13e>
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	681b      	ldr	r3, [r3, #0]
 80056f2:	4a31      	ldr	r2, [pc, #196]	@ (80057b8 <HAL_TIM_PWM_Start+0x1f4>)
 80056f4:	4293      	cmp	r3, r2
 80056f6:	d004      	beq.n	8005702 <HAL_TIM_PWM_Start+0x13e>
 80056f8:	687b      	ldr	r3, [r7, #4]
 80056fa:	681b      	ldr	r3, [r3, #0]
 80056fc:	4a2f      	ldr	r2, [pc, #188]	@ (80057bc <HAL_TIM_PWM_Start+0x1f8>)
 80056fe:	4293      	cmp	r3, r2
 8005700:	d101      	bne.n	8005706 <HAL_TIM_PWM_Start+0x142>
 8005702:	2301      	movs	r3, #1
 8005704:	e000      	b.n	8005708 <HAL_TIM_PWM_Start+0x144>
 8005706:	2300      	movs	r3, #0
 8005708:	2b00      	cmp	r3, #0
 800570a:	d007      	beq.n	800571c <HAL_TIM_PWM_Start+0x158>
 800570c:	687b      	ldr	r3, [r7, #4]
 800570e:	681b      	ldr	r3, [r3, #0]
 8005710:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8005712:	687b      	ldr	r3, [r7, #4]
 8005714:	681b      	ldr	r3, [r3, #0]
 8005716:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800571a:	645a      	str	r2, [r3, #68]	@ 0x44
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	681b      	ldr	r3, [r3, #0]
 8005720:	4a22      	ldr	r2, [pc, #136]	@ (80057ac <HAL_TIM_PWM_Start+0x1e8>)
 8005722:	4293      	cmp	r3, r2
 8005724:	d01d      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	681b      	ldr	r3, [r3, #0]
 800572a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800572e:	d018      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 8005730:	687b      	ldr	r3, [r7, #4]
 8005732:	681b      	ldr	r3, [r3, #0]
 8005734:	4a22      	ldr	r2, [pc, #136]	@ (80057c0 <HAL_TIM_PWM_Start+0x1fc>)
 8005736:	4293      	cmp	r3, r2
 8005738:	d013      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	681b      	ldr	r3, [r3, #0]
 800573e:	4a21      	ldr	r2, [pc, #132]	@ (80057c4 <HAL_TIM_PWM_Start+0x200>)
 8005740:	4293      	cmp	r3, r2
 8005742:	d00e      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 8005744:	687b      	ldr	r3, [r7, #4]
 8005746:	681b      	ldr	r3, [r3, #0]
 8005748:	4a1f      	ldr	r2, [pc, #124]	@ (80057c8 <HAL_TIM_PWM_Start+0x204>)
 800574a:	4293      	cmp	r3, r2
 800574c:	d009      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	681b      	ldr	r3, [r3, #0]
 8005752:	4a17      	ldr	r2, [pc, #92]	@ (80057b0 <HAL_TIM_PWM_Start+0x1ec>)
 8005754:	4293      	cmp	r3, r2
 8005756:	d004      	beq.n	8005762 <HAL_TIM_PWM_Start+0x19e>
 8005758:	687b      	ldr	r3, [r7, #4]
 800575a:	681b      	ldr	r3, [r3, #0]
 800575c:	4a15      	ldr	r2, [pc, #84]	@ (80057b4 <HAL_TIM_PWM_Start+0x1f0>)
 800575e:	4293      	cmp	r3, r2
 8005760:	d115      	bne.n	800578e <HAL_TIM_PWM_Start+0x1ca>
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	681b      	ldr	r3, [r3, #0]
 8005766:	689a      	ldr	r2, [r3, #8]
 8005768:	4b18      	ldr	r3, [pc, #96]	@ (80057cc <HAL_TIM_PWM_Start+0x208>)
 800576a:	4013      	ands	r3, r2
 800576c:	60fb      	str	r3, [r7, #12]
 800576e:	68fb      	ldr	r3, [r7, #12]
 8005770:	2b06      	cmp	r3, #6
 8005772:	d015      	beq.n	80057a0 <HAL_TIM_PWM_Start+0x1dc>
 8005774:	68fb      	ldr	r3, [r7, #12]
 8005776:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800577a:	d011      	beq.n	80057a0 <HAL_TIM_PWM_Start+0x1dc>
 800577c:	687b      	ldr	r3, [r7, #4]
 800577e:	681b      	ldr	r3, [r3, #0]
 8005780:	681a      	ldr	r2, [r3, #0]
 8005782:	687b      	ldr	r3, [r7, #4]
 8005784:	681b      	ldr	r3, [r3, #0]
 8005786:	f042 0201 	orr.w	r2, r2, #1
 800578a:	601a      	str	r2, [r3, #0]
 800578c:	e008      	b.n	80057a0 <HAL_TIM_PWM_Start+0x1dc>
 800578e:	687b      	ldr	r3, [r7, #4]
 8005790:	681b      	ldr	r3, [r3, #0]
 8005792:	681a      	ldr	r2, [r3, #0]
 8005794:	687b      	ldr	r3, [r7, #4]
 8005796:	681b      	ldr	r3, [r3, #0]
 8005798:	f042 0201 	orr.w	r2, r2, #1
 800579c:	601a      	str	r2, [r3, #0]
 800579e:	e000      	b.n	80057a2 <HAL_TIM_PWM_Start+0x1de>
 80057a0:	bf00      	nop
 80057a2:	2300      	movs	r3, #0
 80057a4:	4618      	mov	r0, r3
 80057a6:	3710      	adds	r7, #16
 80057a8:	46bd      	mov	sp, r7
 80057aa:	bd80      	pop	{r7, pc}
 80057ac:	40012c00 	.word	0x40012c00
 80057b0:	40013400 	.word	0x40013400
 80057b4:	40014000 	.word	0x40014000
 80057b8:	40014400 	.word	0x40014400
 80057bc:	40014800 	.word	0x40014800
 80057c0:	40000400 	.word	0x40000400
 80057c4:	40000800 	.word	0x40000800
 80057c8:	40000c00 	.word	0x40000c00
 80057cc:	00010007 	.word	0x00010007

080057d0 <HAL_TIM_IC_Init>:
 80057d0:	b580      	push	{r7, lr}
 80057d2:	b082      	sub	sp, #8
 80057d4:	af00      	add	r7, sp, #0
 80057d6:	6078      	str	r0, [r7, #4]
 80057d8:	687b      	ldr	r3, [r7, #4]
 80057da:	2b00      	cmp	r3, #0
 80057dc:	d101      	bne.n	80057e2 <HAL_TIM_IC_Init+0x12>
 80057de:	2301      	movs	r3, #1
 80057e0:	e049      	b.n	8005876 <HAL_TIM_IC_Init+0xa6>
 80057e2:	687b      	ldr	r3, [r7, #4]
 80057e4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80057e8:	b2db      	uxtb	r3, r3
 80057ea:	2b00      	cmp	r3, #0
 80057ec:	d106      	bne.n	80057fc <HAL_TIM_IC_Init+0x2c>
 80057ee:	687b      	ldr	r3, [r7, #4]
 80057f0:	2200      	movs	r2, #0
 80057f2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80057f6:	6878      	ldr	r0, [r7, #4]
 80057f8:	f7fc faac 	bl	8001d54 <HAL_TIM_IC_MspInit>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	2202      	movs	r2, #2
 8005800:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	681a      	ldr	r2, [r3, #0]
 8005808:	687b      	ldr	r3, [r7, #4]
 800580a:	3304      	adds	r3, #4
 800580c:	4619      	mov	r1, r3
 800580e:	4610      	mov	r0, r2
 8005810:	f000 febc 	bl	800658c <TIM_Base_SetConfig>
 8005814:	687b      	ldr	r3, [r7, #4]
 8005816:	2201      	movs	r2, #1
 8005818:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 800581c:	687b      	ldr	r3, [r7, #4]
 800581e:	2201      	movs	r2, #1
 8005820:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	2201      	movs	r2, #1
 8005828:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800582c:	687b      	ldr	r3, [r7, #4]
 800582e:	2201      	movs	r2, #1
 8005830:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	2201      	movs	r2, #1
 8005838:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	2201      	movs	r2, #1
 8005840:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005844:	687b      	ldr	r3, [r7, #4]
 8005846:	2201      	movs	r2, #1
 8005848:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	2201      	movs	r2, #1
 8005850:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005854:	687b      	ldr	r3, [r7, #4]
 8005856:	2201      	movs	r2, #1
 8005858:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800585c:	687b      	ldr	r3, [r7, #4]
 800585e:	2201      	movs	r2, #1
 8005860:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	2201      	movs	r2, #1
 8005868:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800586c:	687b      	ldr	r3, [r7, #4]
 800586e:	2201      	movs	r2, #1
 8005870:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005874:	2300      	movs	r3, #0
 8005876:	4618      	mov	r0, r3
 8005878:	3708      	adds	r7, #8
 800587a:	46bd      	mov	sp, r7
 800587c:	bd80      	pop	{r7, pc}
	...

08005880 <HAL_TIM_IC_Start_IT>:
 8005880:	b580      	push	{r7, lr}
 8005882:	b084      	sub	sp, #16
 8005884:	af00      	add	r7, sp, #0
 8005886:	6078      	str	r0, [r7, #4]
 8005888:	6039      	str	r1, [r7, #0]
 800588a:	2300      	movs	r3, #0
 800588c:	73fb      	strb	r3, [r7, #15]
 800588e:	683b      	ldr	r3, [r7, #0]
 8005890:	2b00      	cmp	r3, #0
 8005892:	d104      	bne.n	800589e <HAL_TIM_IC_Start_IT+0x1e>
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800589a:	b2db      	uxtb	r3, r3
 800589c:	e023      	b.n	80058e6 <HAL_TIM_IC_Start_IT+0x66>
 800589e:	683b      	ldr	r3, [r7, #0]
 80058a0:	2b04      	cmp	r3, #4
 80058a2:	d104      	bne.n	80058ae <HAL_TIM_IC_Start_IT+0x2e>
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 80058aa:	b2db      	uxtb	r3, r3
 80058ac:	e01b      	b.n	80058e6 <HAL_TIM_IC_Start_IT+0x66>
 80058ae:	683b      	ldr	r3, [r7, #0]
 80058b0:	2b08      	cmp	r3, #8
 80058b2:	d104      	bne.n	80058be <HAL_TIM_IC_Start_IT+0x3e>
 80058b4:	687b      	ldr	r3, [r7, #4]
 80058b6:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80058ba:	b2db      	uxtb	r3, r3
 80058bc:	e013      	b.n	80058e6 <HAL_TIM_IC_Start_IT+0x66>
 80058be:	683b      	ldr	r3, [r7, #0]
 80058c0:	2b0c      	cmp	r3, #12
 80058c2:	d104      	bne.n	80058ce <HAL_TIM_IC_Start_IT+0x4e>
 80058c4:	687b      	ldr	r3, [r7, #4]
 80058c6:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80058ca:	b2db      	uxtb	r3, r3
 80058cc:	e00b      	b.n	80058e6 <HAL_TIM_IC_Start_IT+0x66>
 80058ce:	683b      	ldr	r3, [r7, #0]
 80058d0:	2b10      	cmp	r3, #16
 80058d2:	d104      	bne.n	80058de <HAL_TIM_IC_Start_IT+0x5e>
 80058d4:	687b      	ldr	r3, [r7, #4]
 80058d6:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80058da:	b2db      	uxtb	r3, r3
 80058dc:	e003      	b.n	80058e6 <HAL_TIM_IC_Start_IT+0x66>
 80058de:	687b      	ldr	r3, [r7, #4]
 80058e0:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80058e4:	b2db      	uxtb	r3, r3
 80058e6:	73bb      	strb	r3, [r7, #14]
 80058e8:	683b      	ldr	r3, [r7, #0]
 80058ea:	2b00      	cmp	r3, #0
 80058ec:	d104      	bne.n	80058f8 <HAL_TIM_IC_Start_IT+0x78>
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80058f4:	b2db      	uxtb	r3, r3
 80058f6:	e013      	b.n	8005920 <HAL_TIM_IC_Start_IT+0xa0>
 80058f8:	683b      	ldr	r3, [r7, #0]
 80058fa:	2b04      	cmp	r3, #4
 80058fc:	d104      	bne.n	8005908 <HAL_TIM_IC_Start_IT+0x88>
 80058fe:	687b      	ldr	r3, [r7, #4]
 8005900:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005904:	b2db      	uxtb	r3, r3
 8005906:	e00b      	b.n	8005920 <HAL_TIM_IC_Start_IT+0xa0>
 8005908:	683b      	ldr	r3, [r7, #0]
 800590a:	2b08      	cmp	r3, #8
 800590c:	d104      	bne.n	8005918 <HAL_TIM_IC_Start_IT+0x98>
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 8005914:	b2db      	uxtb	r3, r3
 8005916:	e003      	b.n	8005920 <HAL_TIM_IC_Start_IT+0xa0>
 8005918:	687b      	ldr	r3, [r7, #4]
 800591a:	f893 3047 	ldrb.w	r3, [r3, #71]	@ 0x47
 800591e:	b2db      	uxtb	r3, r3
 8005920:	737b      	strb	r3, [r7, #13]
 8005922:	7bbb      	ldrb	r3, [r7, #14]
 8005924:	2b01      	cmp	r3, #1
 8005926:	d102      	bne.n	800592e <HAL_TIM_IC_Start_IT+0xae>
 8005928:	7b7b      	ldrb	r3, [r7, #13]
 800592a:	2b01      	cmp	r3, #1
 800592c:	d001      	beq.n	8005932 <HAL_TIM_IC_Start_IT+0xb2>
 800592e:	2301      	movs	r3, #1
 8005930:	e0dd      	b.n	8005aee <HAL_TIM_IC_Start_IT+0x26e>
 8005932:	683b      	ldr	r3, [r7, #0]
 8005934:	2b00      	cmp	r3, #0
 8005936:	d104      	bne.n	8005942 <HAL_TIM_IC_Start_IT+0xc2>
 8005938:	687b      	ldr	r3, [r7, #4]
 800593a:	2202      	movs	r2, #2
 800593c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005940:	e023      	b.n	800598a <HAL_TIM_IC_Start_IT+0x10a>
 8005942:	683b      	ldr	r3, [r7, #0]
 8005944:	2b04      	cmp	r3, #4
 8005946:	d104      	bne.n	8005952 <HAL_TIM_IC_Start_IT+0xd2>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	2202      	movs	r2, #2
 800594c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005950:	e01b      	b.n	800598a <HAL_TIM_IC_Start_IT+0x10a>
 8005952:	683b      	ldr	r3, [r7, #0]
 8005954:	2b08      	cmp	r3, #8
 8005956:	d104      	bne.n	8005962 <HAL_TIM_IC_Start_IT+0xe2>
 8005958:	687b      	ldr	r3, [r7, #4]
 800595a:	2202      	movs	r2, #2
 800595c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005960:	e013      	b.n	800598a <HAL_TIM_IC_Start_IT+0x10a>
 8005962:	683b      	ldr	r3, [r7, #0]
 8005964:	2b0c      	cmp	r3, #12
 8005966:	d104      	bne.n	8005972 <HAL_TIM_IC_Start_IT+0xf2>
 8005968:	687b      	ldr	r3, [r7, #4]
 800596a:	2202      	movs	r2, #2
 800596c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005970:	e00b      	b.n	800598a <HAL_TIM_IC_Start_IT+0x10a>
 8005972:	683b      	ldr	r3, [r7, #0]
 8005974:	2b10      	cmp	r3, #16
 8005976:	d104      	bne.n	8005982 <HAL_TIM_IC_Start_IT+0x102>
 8005978:	687b      	ldr	r3, [r7, #4]
 800597a:	2202      	movs	r2, #2
 800597c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005980:	e003      	b.n	800598a <HAL_TIM_IC_Start_IT+0x10a>
 8005982:	687b      	ldr	r3, [r7, #4]
 8005984:	2202      	movs	r2, #2
 8005986:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800598a:	683b      	ldr	r3, [r7, #0]
 800598c:	2b00      	cmp	r3, #0
 800598e:	d104      	bne.n	800599a <HAL_TIM_IC_Start_IT+0x11a>
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	2202      	movs	r2, #2
 8005994:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005998:	e013      	b.n	80059c2 <HAL_TIM_IC_Start_IT+0x142>
 800599a:	683b      	ldr	r3, [r7, #0]
 800599c:	2b04      	cmp	r3, #4
 800599e:	d104      	bne.n	80059aa <HAL_TIM_IC_Start_IT+0x12a>
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	2202      	movs	r2, #2
 80059a4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 80059a8:	e00b      	b.n	80059c2 <HAL_TIM_IC_Start_IT+0x142>
 80059aa:	683b      	ldr	r3, [r7, #0]
 80059ac:	2b08      	cmp	r3, #8
 80059ae:	d104      	bne.n	80059ba <HAL_TIM_IC_Start_IT+0x13a>
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	2202      	movs	r2, #2
 80059b4:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 80059b8:	e003      	b.n	80059c2 <HAL_TIM_IC_Start_IT+0x142>
 80059ba:	687b      	ldr	r3, [r7, #4]
 80059bc:	2202      	movs	r2, #2
 80059be:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 80059c2:	683b      	ldr	r3, [r7, #0]
 80059c4:	2b0c      	cmp	r3, #12
 80059c6:	d841      	bhi.n	8005a4c <HAL_TIM_IC_Start_IT+0x1cc>
 80059c8:	a201      	add	r2, pc, #4	@ (adr r2, 80059d0 <HAL_TIM_IC_Start_IT+0x150>)
 80059ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80059ce:	bf00      	nop
 80059d0:	08005a05 	.word	0x08005a05
 80059d4:	08005a4d 	.word	0x08005a4d
 80059d8:	08005a4d 	.word	0x08005a4d
 80059dc:	08005a4d 	.word	0x08005a4d
 80059e0:	08005a17 	.word	0x08005a17
 80059e4:	08005a4d 	.word	0x08005a4d
 80059e8:	08005a4d 	.word	0x08005a4d
 80059ec:	08005a4d 	.word	0x08005a4d
 80059f0:	08005a29 	.word	0x08005a29
 80059f4:	08005a4d 	.word	0x08005a4d
 80059f8:	08005a4d 	.word	0x08005a4d
 80059fc:	08005a4d 	.word	0x08005a4d
 8005a00:	08005a3b 	.word	0x08005a3b
 8005a04:	687b      	ldr	r3, [r7, #4]
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	68da      	ldr	r2, [r3, #12]
 8005a0a:	687b      	ldr	r3, [r7, #4]
 8005a0c:	681b      	ldr	r3, [r3, #0]
 8005a0e:	f042 0202 	orr.w	r2, r2, #2
 8005a12:	60da      	str	r2, [r3, #12]
 8005a14:	e01d      	b.n	8005a52 <HAL_TIM_IC_Start_IT+0x1d2>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	681b      	ldr	r3, [r3, #0]
 8005a1a:	68da      	ldr	r2, [r3, #12]
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	681b      	ldr	r3, [r3, #0]
 8005a20:	f042 0204 	orr.w	r2, r2, #4
 8005a24:	60da      	str	r2, [r3, #12]
 8005a26:	e014      	b.n	8005a52 <HAL_TIM_IC_Start_IT+0x1d2>
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	68da      	ldr	r2, [r3, #12]
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	681b      	ldr	r3, [r3, #0]
 8005a32:	f042 0208 	orr.w	r2, r2, #8
 8005a36:	60da      	str	r2, [r3, #12]
 8005a38:	e00b      	b.n	8005a52 <HAL_TIM_IC_Start_IT+0x1d2>
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	68da      	ldr	r2, [r3, #12]
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	f042 0210 	orr.w	r2, r2, #16
 8005a48:	60da      	str	r2, [r3, #12]
 8005a4a:	e002      	b.n	8005a52 <HAL_TIM_IC_Start_IT+0x1d2>
 8005a4c:	2301      	movs	r3, #1
 8005a4e:	73fb      	strb	r3, [r7, #15]
 8005a50:	bf00      	nop
 8005a52:	7bfb      	ldrb	r3, [r7, #15]
 8005a54:	2b00      	cmp	r3, #0
 8005a56:	d149      	bne.n	8005aec <HAL_TIM_IC_Start_IT+0x26c>
 8005a58:	687b      	ldr	r3, [r7, #4]
 8005a5a:	681b      	ldr	r3, [r3, #0]
 8005a5c:	2201      	movs	r2, #1
 8005a5e:	6839      	ldr	r1, [r7, #0]
 8005a60:	4618      	mov	r0, r3
 8005a62:	f001 fac1 	bl	8006fe8 <TIM_CCxChannelCmd>
 8005a66:	687b      	ldr	r3, [r7, #4]
 8005a68:	681b      	ldr	r3, [r3, #0]
 8005a6a:	4a23      	ldr	r2, [pc, #140]	@ (8005af8 <HAL_TIM_IC_Start_IT+0x278>)
 8005a6c:	4293      	cmp	r3, r2
 8005a6e:	d01d      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005a70:	687b      	ldr	r3, [r7, #4]
 8005a72:	681b      	ldr	r3, [r3, #0]
 8005a74:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005a78:	d018      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005a7a:	687b      	ldr	r3, [r7, #4]
 8005a7c:	681b      	ldr	r3, [r3, #0]
 8005a7e:	4a1f      	ldr	r2, [pc, #124]	@ (8005afc <HAL_TIM_IC_Start_IT+0x27c>)
 8005a80:	4293      	cmp	r3, r2
 8005a82:	d013      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	681b      	ldr	r3, [r3, #0]
 8005a88:	4a1d      	ldr	r2, [pc, #116]	@ (8005b00 <HAL_TIM_IC_Start_IT+0x280>)
 8005a8a:	4293      	cmp	r3, r2
 8005a8c:	d00e      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	681b      	ldr	r3, [r3, #0]
 8005a92:	4a1c      	ldr	r2, [pc, #112]	@ (8005b04 <HAL_TIM_IC_Start_IT+0x284>)
 8005a94:	4293      	cmp	r3, r2
 8005a96:	d009      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005a98:	687b      	ldr	r3, [r7, #4]
 8005a9a:	681b      	ldr	r3, [r3, #0]
 8005a9c:	4a1a      	ldr	r2, [pc, #104]	@ (8005b08 <HAL_TIM_IC_Start_IT+0x288>)
 8005a9e:	4293      	cmp	r3, r2
 8005aa0:	d004      	beq.n	8005aac <HAL_TIM_IC_Start_IT+0x22c>
 8005aa2:	687b      	ldr	r3, [r7, #4]
 8005aa4:	681b      	ldr	r3, [r3, #0]
 8005aa6:	4a19      	ldr	r2, [pc, #100]	@ (8005b0c <HAL_TIM_IC_Start_IT+0x28c>)
 8005aa8:	4293      	cmp	r3, r2
 8005aaa:	d115      	bne.n	8005ad8 <HAL_TIM_IC_Start_IT+0x258>
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	689a      	ldr	r2, [r3, #8]
 8005ab2:	4b17      	ldr	r3, [pc, #92]	@ (8005b10 <HAL_TIM_IC_Start_IT+0x290>)
 8005ab4:	4013      	ands	r3, r2
 8005ab6:	60bb      	str	r3, [r7, #8]
 8005ab8:	68bb      	ldr	r3, [r7, #8]
 8005aba:	2b06      	cmp	r3, #6
 8005abc:	d015      	beq.n	8005aea <HAL_TIM_IC_Start_IT+0x26a>
 8005abe:	68bb      	ldr	r3, [r7, #8]
 8005ac0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005ac4:	d011      	beq.n	8005aea <HAL_TIM_IC_Start_IT+0x26a>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	681b      	ldr	r3, [r3, #0]
 8005aca:	681a      	ldr	r2, [r3, #0]
 8005acc:	687b      	ldr	r3, [r7, #4]
 8005ace:	681b      	ldr	r3, [r3, #0]
 8005ad0:	f042 0201 	orr.w	r2, r2, #1
 8005ad4:	601a      	str	r2, [r3, #0]
 8005ad6:	e008      	b.n	8005aea <HAL_TIM_IC_Start_IT+0x26a>
 8005ad8:	687b      	ldr	r3, [r7, #4]
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	681a      	ldr	r2, [r3, #0]
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	681b      	ldr	r3, [r3, #0]
 8005ae2:	f042 0201 	orr.w	r2, r2, #1
 8005ae6:	601a      	str	r2, [r3, #0]
 8005ae8:	e000      	b.n	8005aec <HAL_TIM_IC_Start_IT+0x26c>
 8005aea:	bf00      	nop
 8005aec:	7bfb      	ldrb	r3, [r7, #15]
 8005aee:	4618      	mov	r0, r3
 8005af0:	3710      	adds	r7, #16
 8005af2:	46bd      	mov	sp, r7
 8005af4:	bd80      	pop	{r7, pc}
 8005af6:	bf00      	nop
 8005af8:	40012c00 	.word	0x40012c00
 8005afc:	40000400 	.word	0x40000400
 8005b00:	40000800 	.word	0x40000800
 8005b04:	40000c00 	.word	0x40000c00
 8005b08:	40013400 	.word	0x40013400
 8005b0c:	40014000 	.word	0x40014000
 8005b10:	00010007 	.word	0x00010007

08005b14 <HAL_TIM_Encoder_Init>:
 8005b14:	b580      	push	{r7, lr}
 8005b16:	b086      	sub	sp, #24
 8005b18:	af00      	add	r7, sp, #0
 8005b1a:	6078      	str	r0, [r7, #4]
 8005b1c:	6039      	str	r1, [r7, #0]
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	2b00      	cmp	r3, #0
 8005b22:	d101      	bne.n	8005b28 <HAL_TIM_Encoder_Init+0x14>
 8005b24:	2301      	movs	r3, #1
 8005b26:	e097      	b.n	8005c58 <HAL_TIM_Encoder_Init+0x144>
 8005b28:	687b      	ldr	r3, [r7, #4]
 8005b2a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8005b2e:	b2db      	uxtb	r3, r3
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d106      	bne.n	8005b42 <HAL_TIM_Encoder_Init+0x2e>
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	2200      	movs	r2, #0
 8005b38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005b3c:	6878      	ldr	r0, [r7, #4]
 8005b3e:	f7fc f865 	bl	8001c0c <HAL_TIM_Encoder_MspInit>
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	2202      	movs	r2, #2
 8005b46:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	681b      	ldr	r3, [r3, #0]
 8005b4e:	689b      	ldr	r3, [r3, #8]
 8005b50:	687a      	ldr	r2, [r7, #4]
 8005b52:	6812      	ldr	r2, [r2, #0]
 8005b54:	f423 33a0 	bic.w	r3, r3, #81920	@ 0x14000
 8005b58:	f023 0307 	bic.w	r3, r3, #7
 8005b5c:	6093      	str	r3, [r2, #8]
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	681a      	ldr	r2, [r3, #0]
 8005b62:	687b      	ldr	r3, [r7, #4]
 8005b64:	3304      	adds	r3, #4
 8005b66:	4619      	mov	r1, r3
 8005b68:	4610      	mov	r0, r2
 8005b6a:	f000 fd0f 	bl	800658c <TIM_Base_SetConfig>
 8005b6e:	687b      	ldr	r3, [r7, #4]
 8005b70:	681b      	ldr	r3, [r3, #0]
 8005b72:	689b      	ldr	r3, [r3, #8]
 8005b74:	617b      	str	r3, [r7, #20]
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	681b      	ldr	r3, [r3, #0]
 8005b7a:	699b      	ldr	r3, [r3, #24]
 8005b7c:	613b      	str	r3, [r7, #16]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	681b      	ldr	r3, [r3, #0]
 8005b82:	6a1b      	ldr	r3, [r3, #32]
 8005b84:	60fb      	str	r3, [r7, #12]
 8005b86:	683b      	ldr	r3, [r7, #0]
 8005b88:	681b      	ldr	r3, [r3, #0]
 8005b8a:	697a      	ldr	r2, [r7, #20]
 8005b8c:	4313      	orrs	r3, r2
 8005b8e:	617b      	str	r3, [r7, #20]
 8005b90:	693b      	ldr	r3, [r7, #16]
 8005b92:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005b96:	f023 0303 	bic.w	r3, r3, #3
 8005b9a:	613b      	str	r3, [r7, #16]
 8005b9c:	683b      	ldr	r3, [r7, #0]
 8005b9e:	689a      	ldr	r2, [r3, #8]
 8005ba0:	683b      	ldr	r3, [r7, #0]
 8005ba2:	699b      	ldr	r3, [r3, #24]
 8005ba4:	021b      	lsls	r3, r3, #8
 8005ba6:	4313      	orrs	r3, r2
 8005ba8:	693a      	ldr	r2, [r7, #16]
 8005baa:	4313      	orrs	r3, r2
 8005bac:	613b      	str	r3, [r7, #16]
 8005bae:	693b      	ldr	r3, [r7, #16]
 8005bb0:	f423 6340 	bic.w	r3, r3, #3072	@ 0xc00
 8005bb4:	f023 030c 	bic.w	r3, r3, #12
 8005bb8:	613b      	str	r3, [r7, #16]
 8005bba:	693b      	ldr	r3, [r7, #16]
 8005bbc:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005bc0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005bc4:	613b      	str	r3, [r7, #16]
 8005bc6:	683b      	ldr	r3, [r7, #0]
 8005bc8:	68da      	ldr	r2, [r3, #12]
 8005bca:	683b      	ldr	r3, [r7, #0]
 8005bcc:	69db      	ldr	r3, [r3, #28]
 8005bce:	021b      	lsls	r3, r3, #8
 8005bd0:	4313      	orrs	r3, r2
 8005bd2:	693a      	ldr	r2, [r7, #16]
 8005bd4:	4313      	orrs	r3, r2
 8005bd6:	613b      	str	r3, [r7, #16]
 8005bd8:	683b      	ldr	r3, [r7, #0]
 8005bda:	691b      	ldr	r3, [r3, #16]
 8005bdc:	011a      	lsls	r2, r3, #4
 8005bde:	683b      	ldr	r3, [r7, #0]
 8005be0:	6a1b      	ldr	r3, [r3, #32]
 8005be2:	031b      	lsls	r3, r3, #12
 8005be4:	4313      	orrs	r3, r2
 8005be6:	693a      	ldr	r2, [r7, #16]
 8005be8:	4313      	orrs	r3, r2
 8005bea:	613b      	str	r3, [r7, #16]
 8005bec:	68fb      	ldr	r3, [r7, #12]
 8005bee:	f023 0322 	bic.w	r3, r3, #34	@ 0x22
 8005bf2:	60fb      	str	r3, [r7, #12]
 8005bf4:	68fb      	ldr	r3, [r7, #12]
 8005bf6:	f023 0388 	bic.w	r3, r3, #136	@ 0x88
 8005bfa:	60fb      	str	r3, [r7, #12]
 8005bfc:	683b      	ldr	r3, [r7, #0]
 8005bfe:	685a      	ldr	r2, [r3, #4]
 8005c00:	683b      	ldr	r3, [r7, #0]
 8005c02:	695b      	ldr	r3, [r3, #20]
 8005c04:	011b      	lsls	r3, r3, #4
 8005c06:	4313      	orrs	r3, r2
 8005c08:	68fa      	ldr	r2, [r7, #12]
 8005c0a:	4313      	orrs	r3, r2
 8005c0c:	60fb      	str	r3, [r7, #12]
 8005c0e:	687b      	ldr	r3, [r7, #4]
 8005c10:	681b      	ldr	r3, [r3, #0]
 8005c12:	697a      	ldr	r2, [r7, #20]
 8005c14:	609a      	str	r2, [r3, #8]
 8005c16:	687b      	ldr	r3, [r7, #4]
 8005c18:	681b      	ldr	r3, [r3, #0]
 8005c1a:	693a      	ldr	r2, [r7, #16]
 8005c1c:	619a      	str	r2, [r3, #24]
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	681b      	ldr	r3, [r3, #0]
 8005c22:	68fa      	ldr	r2, [r7, #12]
 8005c24:	621a      	str	r2, [r3, #32]
 8005c26:	687b      	ldr	r3, [r7, #4]
 8005c28:	2201      	movs	r2, #1
 8005c2a:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	2201      	movs	r2, #1
 8005c32:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005c36:	687b      	ldr	r3, [r7, #4]
 8005c38:	2201      	movs	r2, #1
 8005c3a:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	2201      	movs	r2, #1
 8005c42:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005c46:	687b      	ldr	r3, [r7, #4]
 8005c48:	2201      	movs	r2, #1
 8005c4a:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	2201      	movs	r2, #1
 8005c52:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005c56:	2300      	movs	r3, #0
 8005c58:	4618      	mov	r0, r3
 8005c5a:	3718      	adds	r7, #24
 8005c5c:	46bd      	mov	sp, r7
 8005c5e:	bd80      	pop	{r7, pc}

08005c60 <HAL_TIM_Encoder_Start_IT>:
 8005c60:	b580      	push	{r7, lr}
 8005c62:	b084      	sub	sp, #16
 8005c64:	af00      	add	r7, sp, #0
 8005c66:	6078      	str	r0, [r7, #4]
 8005c68:	6039      	str	r1, [r7, #0]
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8005c70:	73fb      	strb	r3, [r7, #15]
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8005c78:	73bb      	strb	r3, [r7, #14]
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 8005c80:	737b      	strb	r3, [r7, #13]
 8005c82:	687b      	ldr	r3, [r7, #4]
 8005c84:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 8005c88:	733b      	strb	r3, [r7, #12]
 8005c8a:	683b      	ldr	r3, [r7, #0]
 8005c8c:	2b00      	cmp	r3, #0
 8005c8e:	d110      	bne.n	8005cb2 <HAL_TIM_Encoder_Start_IT+0x52>
 8005c90:	7bfb      	ldrb	r3, [r7, #15]
 8005c92:	2b01      	cmp	r3, #1
 8005c94:	d102      	bne.n	8005c9c <HAL_TIM_Encoder_Start_IT+0x3c>
 8005c96:	7b7b      	ldrb	r3, [r7, #13]
 8005c98:	2b01      	cmp	r3, #1
 8005c9a:	d001      	beq.n	8005ca0 <HAL_TIM_Encoder_Start_IT+0x40>
 8005c9c:	2301      	movs	r3, #1
 8005c9e:	e089      	b.n	8005db4 <HAL_TIM_Encoder_Start_IT+0x154>
 8005ca0:	687b      	ldr	r3, [r7, #4]
 8005ca2:	2202      	movs	r2, #2
 8005ca4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005ca8:	687b      	ldr	r3, [r7, #4]
 8005caa:	2202      	movs	r2, #2
 8005cac:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005cb0:	e031      	b.n	8005d16 <HAL_TIM_Encoder_Start_IT+0xb6>
 8005cb2:	683b      	ldr	r3, [r7, #0]
 8005cb4:	2b04      	cmp	r3, #4
 8005cb6:	d110      	bne.n	8005cda <HAL_TIM_Encoder_Start_IT+0x7a>
 8005cb8:	7bbb      	ldrb	r3, [r7, #14]
 8005cba:	2b01      	cmp	r3, #1
 8005cbc:	d102      	bne.n	8005cc4 <HAL_TIM_Encoder_Start_IT+0x64>
 8005cbe:	7b3b      	ldrb	r3, [r7, #12]
 8005cc0:	2b01      	cmp	r3, #1
 8005cc2:	d001      	beq.n	8005cc8 <HAL_TIM_Encoder_Start_IT+0x68>
 8005cc4:	2301      	movs	r3, #1
 8005cc6:	e075      	b.n	8005db4 <HAL_TIM_Encoder_Start_IT+0x154>
 8005cc8:	687b      	ldr	r3, [r7, #4]
 8005cca:	2202      	movs	r2, #2
 8005ccc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005cd0:	687b      	ldr	r3, [r7, #4]
 8005cd2:	2202      	movs	r2, #2
 8005cd4:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005cd8:	e01d      	b.n	8005d16 <HAL_TIM_Encoder_Start_IT+0xb6>
 8005cda:	7bfb      	ldrb	r3, [r7, #15]
 8005cdc:	2b01      	cmp	r3, #1
 8005cde:	d108      	bne.n	8005cf2 <HAL_TIM_Encoder_Start_IT+0x92>
 8005ce0:	7bbb      	ldrb	r3, [r7, #14]
 8005ce2:	2b01      	cmp	r3, #1
 8005ce4:	d105      	bne.n	8005cf2 <HAL_TIM_Encoder_Start_IT+0x92>
 8005ce6:	7b7b      	ldrb	r3, [r7, #13]
 8005ce8:	2b01      	cmp	r3, #1
 8005cea:	d102      	bne.n	8005cf2 <HAL_TIM_Encoder_Start_IT+0x92>
 8005cec:	7b3b      	ldrb	r3, [r7, #12]
 8005cee:	2b01      	cmp	r3, #1
 8005cf0:	d001      	beq.n	8005cf6 <HAL_TIM_Encoder_Start_IT+0x96>
 8005cf2:	2301      	movs	r3, #1
 8005cf4:	e05e      	b.n	8005db4 <HAL_TIM_Encoder_Start_IT+0x154>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	2202      	movs	r2, #2
 8005cfa:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005cfe:	687b      	ldr	r3, [r7, #4]
 8005d00:	2202      	movs	r2, #2
 8005d02:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005d06:	687b      	ldr	r3, [r7, #4]
 8005d08:	2202      	movs	r2, #2
 8005d0a:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005d0e:	687b      	ldr	r3, [r7, #4]
 8005d10:	2202      	movs	r2, #2
 8005d12:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005d16:	683b      	ldr	r3, [r7, #0]
 8005d18:	2b00      	cmp	r3, #0
 8005d1a:	d003      	beq.n	8005d24 <HAL_TIM_Encoder_Start_IT+0xc4>
 8005d1c:	683b      	ldr	r3, [r7, #0]
 8005d1e:	2b04      	cmp	r3, #4
 8005d20:	d010      	beq.n	8005d44 <HAL_TIM_Encoder_Start_IT+0xe4>
 8005d22:	e01f      	b.n	8005d64 <HAL_TIM_Encoder_Start_IT+0x104>
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	681b      	ldr	r3, [r3, #0]
 8005d28:	2201      	movs	r2, #1
 8005d2a:	2100      	movs	r1, #0
 8005d2c:	4618      	mov	r0, r3
 8005d2e:	f001 f95b 	bl	8006fe8 <TIM_CCxChannelCmd>
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	681b      	ldr	r3, [r3, #0]
 8005d36:	68da      	ldr	r2, [r3, #12]
 8005d38:	687b      	ldr	r3, [r7, #4]
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	f042 0202 	orr.w	r2, r2, #2
 8005d40:	60da      	str	r2, [r3, #12]
 8005d42:	e02e      	b.n	8005da2 <HAL_TIM_Encoder_Start_IT+0x142>
 8005d44:	687b      	ldr	r3, [r7, #4]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	2201      	movs	r2, #1
 8005d4a:	2104      	movs	r1, #4
 8005d4c:	4618      	mov	r0, r3
 8005d4e:	f001 f94b 	bl	8006fe8 <TIM_CCxChannelCmd>
 8005d52:	687b      	ldr	r3, [r7, #4]
 8005d54:	681b      	ldr	r3, [r3, #0]
 8005d56:	68da      	ldr	r2, [r3, #12]
 8005d58:	687b      	ldr	r3, [r7, #4]
 8005d5a:	681b      	ldr	r3, [r3, #0]
 8005d5c:	f042 0204 	orr.w	r2, r2, #4
 8005d60:	60da      	str	r2, [r3, #12]
 8005d62:	e01e      	b.n	8005da2 <HAL_TIM_Encoder_Start_IT+0x142>
 8005d64:	687b      	ldr	r3, [r7, #4]
 8005d66:	681b      	ldr	r3, [r3, #0]
 8005d68:	2201      	movs	r2, #1
 8005d6a:	2100      	movs	r1, #0
 8005d6c:	4618      	mov	r0, r3
 8005d6e:	f001 f93b 	bl	8006fe8 <TIM_CCxChannelCmd>
 8005d72:	687b      	ldr	r3, [r7, #4]
 8005d74:	681b      	ldr	r3, [r3, #0]
 8005d76:	2201      	movs	r2, #1
 8005d78:	2104      	movs	r1, #4
 8005d7a:	4618      	mov	r0, r3
 8005d7c:	f001 f934 	bl	8006fe8 <TIM_CCxChannelCmd>
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	681b      	ldr	r3, [r3, #0]
 8005d84:	68da      	ldr	r2, [r3, #12]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	681b      	ldr	r3, [r3, #0]
 8005d8a:	f042 0202 	orr.w	r2, r2, #2
 8005d8e:	60da      	str	r2, [r3, #12]
 8005d90:	687b      	ldr	r3, [r7, #4]
 8005d92:	681b      	ldr	r3, [r3, #0]
 8005d94:	68da      	ldr	r2, [r3, #12]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	681b      	ldr	r3, [r3, #0]
 8005d9a:	f042 0204 	orr.w	r2, r2, #4
 8005d9e:	60da      	str	r2, [r3, #12]
 8005da0:	bf00      	nop
 8005da2:	687b      	ldr	r3, [r7, #4]
 8005da4:	681b      	ldr	r3, [r3, #0]
 8005da6:	681a      	ldr	r2, [r3, #0]
 8005da8:	687b      	ldr	r3, [r7, #4]
 8005daa:	681b      	ldr	r3, [r3, #0]
 8005dac:	f042 0201 	orr.w	r2, r2, #1
 8005db0:	601a      	str	r2, [r3, #0]
 8005db2:	2300      	movs	r3, #0
 8005db4:	4618      	mov	r0, r3
 8005db6:	3710      	adds	r7, #16
 8005db8:	46bd      	mov	sp, r7
 8005dba:	bd80      	pop	{r7, pc}

08005dbc <HAL_TIM_IRQHandler>:
 8005dbc:	b580      	push	{r7, lr}
 8005dbe:	b084      	sub	sp, #16
 8005dc0:	af00      	add	r7, sp, #0
 8005dc2:	6078      	str	r0, [r7, #4]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	681b      	ldr	r3, [r3, #0]
 8005dc8:	68db      	ldr	r3, [r3, #12]
 8005dca:	60fb      	str	r3, [r7, #12]
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	681b      	ldr	r3, [r3, #0]
 8005dd0:	691b      	ldr	r3, [r3, #16]
 8005dd2:	60bb      	str	r3, [r7, #8]
 8005dd4:	68bb      	ldr	r3, [r7, #8]
 8005dd6:	f003 0302 	and.w	r3, r3, #2
 8005dda:	2b00      	cmp	r3, #0
 8005ddc:	d020      	beq.n	8005e20 <HAL_TIM_IRQHandler+0x64>
 8005dde:	68fb      	ldr	r3, [r7, #12]
 8005de0:	f003 0302 	and.w	r3, r3, #2
 8005de4:	2b00      	cmp	r3, #0
 8005de6:	d01b      	beq.n	8005e20 <HAL_TIM_IRQHandler+0x64>
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	681b      	ldr	r3, [r3, #0]
 8005dec:	f06f 0202 	mvn.w	r2, #2
 8005df0:	611a      	str	r2, [r3, #16]
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	2201      	movs	r2, #1
 8005df6:	771a      	strb	r2, [r3, #28]
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	699b      	ldr	r3, [r3, #24]
 8005dfe:	f003 0303 	and.w	r3, r3, #3
 8005e02:	2b00      	cmp	r3, #0
 8005e04:	d003      	beq.n	8005e0e <HAL_TIM_IRQHandler+0x52>
 8005e06:	6878      	ldr	r0, [r7, #4]
 8005e08:	f7fb fc36 	bl	8001678 <HAL_TIM_IC_CaptureCallback>
 8005e0c:	e005      	b.n	8005e1a <HAL_TIM_IRQHandler+0x5e>
 8005e0e:	6878      	ldr	r0, [r7, #4]
 8005e10:	f000 fb9e 	bl	8006550 <HAL_TIM_OC_DelayElapsedCallback>
 8005e14:	6878      	ldr	r0, [r7, #4]
 8005e16:	f000 fba5 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	2200      	movs	r2, #0
 8005e1e:	771a      	strb	r2, [r3, #28]
 8005e20:	68bb      	ldr	r3, [r7, #8]
 8005e22:	f003 0304 	and.w	r3, r3, #4
 8005e26:	2b00      	cmp	r3, #0
 8005e28:	d020      	beq.n	8005e6c <HAL_TIM_IRQHandler+0xb0>
 8005e2a:	68fb      	ldr	r3, [r7, #12]
 8005e2c:	f003 0304 	and.w	r3, r3, #4
 8005e30:	2b00      	cmp	r3, #0
 8005e32:	d01b      	beq.n	8005e6c <HAL_TIM_IRQHandler+0xb0>
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	f06f 0204 	mvn.w	r2, #4
 8005e3c:	611a      	str	r2, [r3, #16]
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	2202      	movs	r2, #2
 8005e42:	771a      	strb	r2, [r3, #28]
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	681b      	ldr	r3, [r3, #0]
 8005e48:	699b      	ldr	r3, [r3, #24]
 8005e4a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005e4e:	2b00      	cmp	r3, #0
 8005e50:	d003      	beq.n	8005e5a <HAL_TIM_IRQHandler+0x9e>
 8005e52:	6878      	ldr	r0, [r7, #4]
 8005e54:	f7fb fc10 	bl	8001678 <HAL_TIM_IC_CaptureCallback>
 8005e58:	e005      	b.n	8005e66 <HAL_TIM_IRQHandler+0xaa>
 8005e5a:	6878      	ldr	r0, [r7, #4]
 8005e5c:	f000 fb78 	bl	8006550 <HAL_TIM_OC_DelayElapsedCallback>
 8005e60:	6878      	ldr	r0, [r7, #4]
 8005e62:	f000 fb7f 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	2200      	movs	r2, #0
 8005e6a:	771a      	strb	r2, [r3, #28]
 8005e6c:	68bb      	ldr	r3, [r7, #8]
 8005e6e:	f003 0308 	and.w	r3, r3, #8
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d020      	beq.n	8005eb8 <HAL_TIM_IRQHandler+0xfc>
 8005e76:	68fb      	ldr	r3, [r7, #12]
 8005e78:	f003 0308 	and.w	r3, r3, #8
 8005e7c:	2b00      	cmp	r3, #0
 8005e7e:	d01b      	beq.n	8005eb8 <HAL_TIM_IRQHandler+0xfc>
 8005e80:	687b      	ldr	r3, [r7, #4]
 8005e82:	681b      	ldr	r3, [r3, #0]
 8005e84:	f06f 0208 	mvn.w	r2, #8
 8005e88:	611a      	str	r2, [r3, #16]
 8005e8a:	687b      	ldr	r3, [r7, #4]
 8005e8c:	2204      	movs	r2, #4
 8005e8e:	771a      	strb	r2, [r3, #28]
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	69db      	ldr	r3, [r3, #28]
 8005e96:	f003 0303 	and.w	r3, r3, #3
 8005e9a:	2b00      	cmp	r3, #0
 8005e9c:	d003      	beq.n	8005ea6 <HAL_TIM_IRQHandler+0xea>
 8005e9e:	6878      	ldr	r0, [r7, #4]
 8005ea0:	f7fb fbea 	bl	8001678 <HAL_TIM_IC_CaptureCallback>
 8005ea4:	e005      	b.n	8005eb2 <HAL_TIM_IRQHandler+0xf6>
 8005ea6:	6878      	ldr	r0, [r7, #4]
 8005ea8:	f000 fb52 	bl	8006550 <HAL_TIM_OC_DelayElapsedCallback>
 8005eac:	6878      	ldr	r0, [r7, #4]
 8005eae:	f000 fb59 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8005eb2:	687b      	ldr	r3, [r7, #4]
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	771a      	strb	r2, [r3, #28]
 8005eb8:	68bb      	ldr	r3, [r7, #8]
 8005eba:	f003 0310 	and.w	r3, r3, #16
 8005ebe:	2b00      	cmp	r3, #0
 8005ec0:	d020      	beq.n	8005f04 <HAL_TIM_IRQHandler+0x148>
 8005ec2:	68fb      	ldr	r3, [r7, #12]
 8005ec4:	f003 0310 	and.w	r3, r3, #16
 8005ec8:	2b00      	cmp	r3, #0
 8005eca:	d01b      	beq.n	8005f04 <HAL_TIM_IRQHandler+0x148>
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	681b      	ldr	r3, [r3, #0]
 8005ed0:	f06f 0210 	mvn.w	r2, #16
 8005ed4:	611a      	str	r2, [r3, #16]
 8005ed6:	687b      	ldr	r3, [r7, #4]
 8005ed8:	2208      	movs	r2, #8
 8005eda:	771a      	strb	r2, [r3, #28]
 8005edc:	687b      	ldr	r3, [r7, #4]
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	69db      	ldr	r3, [r3, #28]
 8005ee2:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005ee6:	2b00      	cmp	r3, #0
 8005ee8:	d003      	beq.n	8005ef2 <HAL_TIM_IRQHandler+0x136>
 8005eea:	6878      	ldr	r0, [r7, #4]
 8005eec:	f7fb fbc4 	bl	8001678 <HAL_TIM_IC_CaptureCallback>
 8005ef0:	e005      	b.n	8005efe <HAL_TIM_IRQHandler+0x142>
 8005ef2:	6878      	ldr	r0, [r7, #4]
 8005ef4:	f000 fb2c 	bl	8006550 <HAL_TIM_OC_DelayElapsedCallback>
 8005ef8:	6878      	ldr	r0, [r7, #4]
 8005efa:	f000 fb33 	bl	8006564 <HAL_TIM_PWM_PulseFinishedCallback>
 8005efe:	687b      	ldr	r3, [r7, #4]
 8005f00:	2200      	movs	r2, #0
 8005f02:	771a      	strb	r2, [r3, #28]
 8005f04:	68bb      	ldr	r3, [r7, #8]
 8005f06:	f003 0301 	and.w	r3, r3, #1
 8005f0a:	2b00      	cmp	r3, #0
 8005f0c:	d00c      	beq.n	8005f28 <HAL_TIM_IRQHandler+0x16c>
 8005f0e:	68fb      	ldr	r3, [r7, #12]
 8005f10:	f003 0301 	and.w	r3, r3, #1
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d007      	beq.n	8005f28 <HAL_TIM_IRQHandler+0x16c>
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	681b      	ldr	r3, [r3, #0]
 8005f1c:	f06f 0201 	mvn.w	r2, #1
 8005f20:	611a      	str	r2, [r3, #16]
 8005f22:	6878      	ldr	r0, [r7, #4]
 8005f24:	f000 fb0a 	bl	800653c <HAL_TIM_PeriodElapsedCallback>
 8005f28:	68bb      	ldr	r3, [r7, #8]
 8005f2a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d00c      	beq.n	8005f4c <HAL_TIM_IRQHandler+0x190>
 8005f32:	68fb      	ldr	r3, [r7, #12]
 8005f34:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f38:	2b00      	cmp	r3, #0
 8005f3a:	d007      	beq.n	8005f4c <HAL_TIM_IRQHandler+0x190>
 8005f3c:	687b      	ldr	r3, [r7, #4]
 8005f3e:	681b      	ldr	r3, [r3, #0]
 8005f40:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8005f44:	611a      	str	r2, [r3, #16]
 8005f46:	6878      	ldr	r0, [r7, #4]
 8005f48:	f001 f984 	bl	8007254 <HAL_TIMEx_BreakCallback>
 8005f4c:	68bb      	ldr	r3, [r7, #8]
 8005f4e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d00c      	beq.n	8005f70 <HAL_TIM_IRQHandler+0x1b4>
 8005f56:	68fb      	ldr	r3, [r7, #12]
 8005f58:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005f5c:	2b00      	cmp	r3, #0
 8005f5e:	d007      	beq.n	8005f70 <HAL_TIM_IRQHandler+0x1b4>
 8005f60:	687b      	ldr	r3, [r7, #4]
 8005f62:	681b      	ldr	r3, [r3, #0]
 8005f64:	f46f 7280 	mvn.w	r2, #256	@ 0x100
 8005f68:	611a      	str	r2, [r3, #16]
 8005f6a:	6878      	ldr	r0, [r7, #4]
 8005f6c:	f001 f97c 	bl	8007268 <HAL_TIMEx_Break2Callback>
 8005f70:	68bb      	ldr	r3, [r7, #8]
 8005f72:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f76:	2b00      	cmp	r3, #0
 8005f78:	d00c      	beq.n	8005f94 <HAL_TIM_IRQHandler+0x1d8>
 8005f7a:	68fb      	ldr	r3, [r7, #12]
 8005f7c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005f80:	2b00      	cmp	r3, #0
 8005f82:	d007      	beq.n	8005f94 <HAL_TIM_IRQHandler+0x1d8>
 8005f84:	687b      	ldr	r3, [r7, #4]
 8005f86:	681b      	ldr	r3, [r3, #0]
 8005f88:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8005f8c:	611a      	str	r2, [r3, #16]
 8005f8e:	6878      	ldr	r0, [r7, #4]
 8005f90:	f000 faf2 	bl	8006578 <HAL_TIM_TriggerCallback>
 8005f94:	68bb      	ldr	r3, [r7, #8]
 8005f96:	f003 0320 	and.w	r3, r3, #32
 8005f9a:	2b00      	cmp	r3, #0
 8005f9c:	d00c      	beq.n	8005fb8 <HAL_TIM_IRQHandler+0x1fc>
 8005f9e:	68fb      	ldr	r3, [r7, #12]
 8005fa0:	f003 0320 	and.w	r3, r3, #32
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	d007      	beq.n	8005fb8 <HAL_TIM_IRQHandler+0x1fc>
 8005fa8:	687b      	ldr	r3, [r7, #4]
 8005faa:	681b      	ldr	r3, [r3, #0]
 8005fac:	f06f 0220 	mvn.w	r2, #32
 8005fb0:	611a      	str	r2, [r3, #16]
 8005fb2:	6878      	ldr	r0, [r7, #4]
 8005fb4:	f001 f944 	bl	8007240 <HAL_TIMEx_CommutCallback>
 8005fb8:	bf00      	nop
 8005fba:	3710      	adds	r7, #16
 8005fbc:	46bd      	mov	sp, r7
 8005fbe:	bd80      	pop	{r7, pc}

08005fc0 <HAL_TIM_IC_ConfigChannel>:
 8005fc0:	b580      	push	{r7, lr}
 8005fc2:	b086      	sub	sp, #24
 8005fc4:	af00      	add	r7, sp, #0
 8005fc6:	60f8      	str	r0, [r7, #12]
 8005fc8:	60b9      	str	r1, [r7, #8]
 8005fca:	607a      	str	r2, [r7, #4]
 8005fcc:	2300      	movs	r3, #0
 8005fce:	75fb      	strb	r3, [r7, #23]
 8005fd0:	68fb      	ldr	r3, [r7, #12]
 8005fd2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005fd6:	2b01      	cmp	r3, #1
 8005fd8:	d101      	bne.n	8005fde <HAL_TIM_IC_ConfigChannel+0x1e>
 8005fda:	2302      	movs	r3, #2
 8005fdc:	e088      	b.n	80060f0 <HAL_TIM_IC_ConfigChannel+0x130>
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	2201      	movs	r2, #1
 8005fe2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	2b00      	cmp	r3, #0
 8005fea:	d11b      	bne.n	8006024 <HAL_TIM_IC_ConfigChannel+0x64>
 8005fec:	68fb      	ldr	r3, [r7, #12]
 8005fee:	6818      	ldr	r0, [r3, #0]
 8005ff0:	68bb      	ldr	r3, [r7, #8]
 8005ff2:	6819      	ldr	r1, [r3, #0]
 8005ff4:	68bb      	ldr	r3, [r7, #8]
 8005ff6:	685a      	ldr	r2, [r3, #4]
 8005ff8:	68bb      	ldr	r3, [r7, #8]
 8005ffa:	68db      	ldr	r3, [r3, #12]
 8005ffc:	f000 fe36 	bl	8006c6c <TIM_TI1_SetConfig>
 8006000:	68fb      	ldr	r3, [r7, #12]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	699a      	ldr	r2, [r3, #24]
 8006006:	68fb      	ldr	r3, [r7, #12]
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	f022 020c 	bic.w	r2, r2, #12
 800600e:	619a      	str	r2, [r3, #24]
 8006010:	68fb      	ldr	r3, [r7, #12]
 8006012:	681b      	ldr	r3, [r3, #0]
 8006014:	6999      	ldr	r1, [r3, #24]
 8006016:	68bb      	ldr	r3, [r7, #8]
 8006018:	689a      	ldr	r2, [r3, #8]
 800601a:	68fb      	ldr	r3, [r7, #12]
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	430a      	orrs	r2, r1
 8006020:	619a      	str	r2, [r3, #24]
 8006022:	e060      	b.n	80060e6 <HAL_TIM_IC_ConfigChannel+0x126>
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	2b04      	cmp	r3, #4
 8006028:	d11c      	bne.n	8006064 <HAL_TIM_IC_ConfigChannel+0xa4>
 800602a:	68fb      	ldr	r3, [r7, #12]
 800602c:	6818      	ldr	r0, [r3, #0]
 800602e:	68bb      	ldr	r3, [r7, #8]
 8006030:	6819      	ldr	r1, [r3, #0]
 8006032:	68bb      	ldr	r3, [r7, #8]
 8006034:	685a      	ldr	r2, [r3, #4]
 8006036:	68bb      	ldr	r3, [r7, #8]
 8006038:	68db      	ldr	r3, [r3, #12]
 800603a:	f000 feb4 	bl	8006da6 <TIM_TI2_SetConfig>
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	681b      	ldr	r3, [r3, #0]
 8006042:	699a      	ldr	r2, [r3, #24]
 8006044:	68fb      	ldr	r3, [r7, #12]
 8006046:	681b      	ldr	r3, [r3, #0]
 8006048:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800604c:	619a      	str	r2, [r3, #24]
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	681b      	ldr	r3, [r3, #0]
 8006052:	6999      	ldr	r1, [r3, #24]
 8006054:	68bb      	ldr	r3, [r7, #8]
 8006056:	689b      	ldr	r3, [r3, #8]
 8006058:	021a      	lsls	r2, r3, #8
 800605a:	68fb      	ldr	r3, [r7, #12]
 800605c:	681b      	ldr	r3, [r3, #0]
 800605e:	430a      	orrs	r2, r1
 8006060:	619a      	str	r2, [r3, #24]
 8006062:	e040      	b.n	80060e6 <HAL_TIM_IC_ConfigChannel+0x126>
 8006064:	687b      	ldr	r3, [r7, #4]
 8006066:	2b08      	cmp	r3, #8
 8006068:	d11b      	bne.n	80060a2 <HAL_TIM_IC_ConfigChannel+0xe2>
 800606a:	68fb      	ldr	r3, [r7, #12]
 800606c:	6818      	ldr	r0, [r3, #0]
 800606e:	68bb      	ldr	r3, [r7, #8]
 8006070:	6819      	ldr	r1, [r3, #0]
 8006072:	68bb      	ldr	r3, [r7, #8]
 8006074:	685a      	ldr	r2, [r3, #4]
 8006076:	68bb      	ldr	r3, [r7, #8]
 8006078:	68db      	ldr	r3, [r3, #12]
 800607a:	f000 ff01 	bl	8006e80 <TIM_TI3_SetConfig>
 800607e:	68fb      	ldr	r3, [r7, #12]
 8006080:	681b      	ldr	r3, [r3, #0]
 8006082:	69da      	ldr	r2, [r3, #28]
 8006084:	68fb      	ldr	r3, [r7, #12]
 8006086:	681b      	ldr	r3, [r3, #0]
 8006088:	f022 020c 	bic.w	r2, r2, #12
 800608c:	61da      	str	r2, [r3, #28]
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	681b      	ldr	r3, [r3, #0]
 8006092:	69d9      	ldr	r1, [r3, #28]
 8006094:	68bb      	ldr	r3, [r7, #8]
 8006096:	689a      	ldr	r2, [r3, #8]
 8006098:	68fb      	ldr	r3, [r7, #12]
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	430a      	orrs	r2, r1
 800609e:	61da      	str	r2, [r3, #28]
 80060a0:	e021      	b.n	80060e6 <HAL_TIM_IC_ConfigChannel+0x126>
 80060a2:	687b      	ldr	r3, [r7, #4]
 80060a4:	2b0c      	cmp	r3, #12
 80060a6:	d11c      	bne.n	80060e2 <HAL_TIM_IC_ConfigChannel+0x122>
 80060a8:	68fb      	ldr	r3, [r7, #12]
 80060aa:	6818      	ldr	r0, [r3, #0]
 80060ac:	68bb      	ldr	r3, [r7, #8]
 80060ae:	6819      	ldr	r1, [r3, #0]
 80060b0:	68bb      	ldr	r3, [r7, #8]
 80060b2:	685a      	ldr	r2, [r3, #4]
 80060b4:	68bb      	ldr	r3, [r7, #8]
 80060b6:	68db      	ldr	r3, [r3, #12]
 80060b8:	f000 ff1e 	bl	8006ef8 <TIM_TI4_SetConfig>
 80060bc:	68fb      	ldr	r3, [r7, #12]
 80060be:	681b      	ldr	r3, [r3, #0]
 80060c0:	69da      	ldr	r2, [r3, #28]
 80060c2:	68fb      	ldr	r3, [r7, #12]
 80060c4:	681b      	ldr	r3, [r3, #0]
 80060c6:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 80060ca:	61da      	str	r2, [r3, #28]
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	681b      	ldr	r3, [r3, #0]
 80060d0:	69d9      	ldr	r1, [r3, #28]
 80060d2:	68bb      	ldr	r3, [r7, #8]
 80060d4:	689b      	ldr	r3, [r3, #8]
 80060d6:	021a      	lsls	r2, r3, #8
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	681b      	ldr	r3, [r3, #0]
 80060dc:	430a      	orrs	r2, r1
 80060de:	61da      	str	r2, [r3, #28]
 80060e0:	e001      	b.n	80060e6 <HAL_TIM_IC_ConfigChannel+0x126>
 80060e2:	2301      	movs	r3, #1
 80060e4:	75fb      	strb	r3, [r7, #23]
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	2200      	movs	r2, #0
 80060ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80060ee:	7dfb      	ldrb	r3, [r7, #23]
 80060f0:	4618      	mov	r0, r3
 80060f2:	3718      	adds	r7, #24
 80060f4:	46bd      	mov	sp, r7
 80060f6:	bd80      	pop	{r7, pc}

080060f8 <HAL_TIM_PWM_ConfigChannel>:
 80060f8:	b580      	push	{r7, lr}
 80060fa:	b086      	sub	sp, #24
 80060fc:	af00      	add	r7, sp, #0
 80060fe:	60f8      	str	r0, [r7, #12]
 8006100:	60b9      	str	r1, [r7, #8]
 8006102:	607a      	str	r2, [r7, #4]
 8006104:	2300      	movs	r3, #0
 8006106:	75fb      	strb	r3, [r7, #23]
 8006108:	68fb      	ldr	r3, [r7, #12]
 800610a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800610e:	2b01      	cmp	r3, #1
 8006110:	d101      	bne.n	8006116 <HAL_TIM_PWM_ConfigChannel+0x1e>
 8006112:	2302      	movs	r3, #2
 8006114:	e0ff      	b.n	8006316 <HAL_TIM_PWM_ConfigChannel+0x21e>
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	2201      	movs	r2, #1
 800611a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800611e:	687b      	ldr	r3, [r7, #4]
 8006120:	2b14      	cmp	r3, #20
 8006122:	f200 80f0 	bhi.w	8006306 <HAL_TIM_PWM_ConfigChannel+0x20e>
 8006126:	a201      	add	r2, pc, #4	@ (adr r2, 800612c <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006128:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800612c:	08006181 	.word	0x08006181
 8006130:	08006307 	.word	0x08006307
 8006134:	08006307 	.word	0x08006307
 8006138:	08006307 	.word	0x08006307
 800613c:	080061c1 	.word	0x080061c1
 8006140:	08006307 	.word	0x08006307
 8006144:	08006307 	.word	0x08006307
 8006148:	08006307 	.word	0x08006307
 800614c:	08006203 	.word	0x08006203
 8006150:	08006307 	.word	0x08006307
 8006154:	08006307 	.word	0x08006307
 8006158:	08006307 	.word	0x08006307
 800615c:	08006243 	.word	0x08006243
 8006160:	08006307 	.word	0x08006307
 8006164:	08006307 	.word	0x08006307
 8006168:	08006307 	.word	0x08006307
 800616c:	08006285 	.word	0x08006285
 8006170:	08006307 	.word	0x08006307
 8006174:	08006307 	.word	0x08006307
 8006178:	08006307 	.word	0x08006307
 800617c:	080062c5 	.word	0x080062c5
 8006180:	68fb      	ldr	r3, [r7, #12]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	68b9      	ldr	r1, [r7, #8]
 8006186:	4618      	mov	r0, r3
 8006188:	f000 fa9a 	bl	80066c0 <TIM_OC1_SetConfig>
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	699a      	ldr	r2, [r3, #24]
 8006192:	68fb      	ldr	r3, [r7, #12]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	f042 0208 	orr.w	r2, r2, #8
 800619a:	619a      	str	r2, [r3, #24]
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	681b      	ldr	r3, [r3, #0]
 80061a0:	699a      	ldr	r2, [r3, #24]
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	f022 0204 	bic.w	r2, r2, #4
 80061aa:	619a      	str	r2, [r3, #24]
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	681b      	ldr	r3, [r3, #0]
 80061b0:	6999      	ldr	r1, [r3, #24]
 80061b2:	68bb      	ldr	r3, [r7, #8]
 80061b4:	691a      	ldr	r2, [r3, #16]
 80061b6:	68fb      	ldr	r3, [r7, #12]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	430a      	orrs	r2, r1
 80061bc:	619a      	str	r2, [r3, #24]
 80061be:	e0a5      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	681b      	ldr	r3, [r3, #0]
 80061c4:	68b9      	ldr	r1, [r7, #8]
 80061c6:	4618      	mov	r0, r3
 80061c8:	f000 fb0a 	bl	80067e0 <TIM_OC2_SetConfig>
 80061cc:	68fb      	ldr	r3, [r7, #12]
 80061ce:	681b      	ldr	r3, [r3, #0]
 80061d0:	699a      	ldr	r2, [r3, #24]
 80061d2:	68fb      	ldr	r3, [r7, #12]
 80061d4:	681b      	ldr	r3, [r3, #0]
 80061d6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80061da:	619a      	str	r2, [r3, #24]
 80061dc:	68fb      	ldr	r3, [r7, #12]
 80061de:	681b      	ldr	r3, [r3, #0]
 80061e0:	699a      	ldr	r2, [r3, #24]
 80061e2:	68fb      	ldr	r3, [r7, #12]
 80061e4:	681b      	ldr	r3, [r3, #0]
 80061e6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80061ea:	619a      	str	r2, [r3, #24]
 80061ec:	68fb      	ldr	r3, [r7, #12]
 80061ee:	681b      	ldr	r3, [r3, #0]
 80061f0:	6999      	ldr	r1, [r3, #24]
 80061f2:	68bb      	ldr	r3, [r7, #8]
 80061f4:	691b      	ldr	r3, [r3, #16]
 80061f6:	021a      	lsls	r2, r3, #8
 80061f8:	68fb      	ldr	r3, [r7, #12]
 80061fa:	681b      	ldr	r3, [r3, #0]
 80061fc:	430a      	orrs	r2, r1
 80061fe:	619a      	str	r2, [r3, #24]
 8006200:	e084      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	681b      	ldr	r3, [r3, #0]
 8006206:	68b9      	ldr	r1, [r7, #8]
 8006208:	4618      	mov	r0, r3
 800620a:	f000 fb73 	bl	80068f4 <TIM_OC3_SetConfig>
 800620e:	68fb      	ldr	r3, [r7, #12]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	69da      	ldr	r2, [r3, #28]
 8006214:	68fb      	ldr	r3, [r7, #12]
 8006216:	681b      	ldr	r3, [r3, #0]
 8006218:	f042 0208 	orr.w	r2, r2, #8
 800621c:	61da      	str	r2, [r3, #28]
 800621e:	68fb      	ldr	r3, [r7, #12]
 8006220:	681b      	ldr	r3, [r3, #0]
 8006222:	69da      	ldr	r2, [r3, #28]
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	681b      	ldr	r3, [r3, #0]
 8006228:	f022 0204 	bic.w	r2, r2, #4
 800622c:	61da      	str	r2, [r3, #28]
 800622e:	68fb      	ldr	r3, [r7, #12]
 8006230:	681b      	ldr	r3, [r3, #0]
 8006232:	69d9      	ldr	r1, [r3, #28]
 8006234:	68bb      	ldr	r3, [r7, #8]
 8006236:	691a      	ldr	r2, [r3, #16]
 8006238:	68fb      	ldr	r3, [r7, #12]
 800623a:	681b      	ldr	r3, [r3, #0]
 800623c:	430a      	orrs	r2, r1
 800623e:	61da      	str	r2, [r3, #28]
 8006240:	e064      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 8006242:	68fb      	ldr	r3, [r7, #12]
 8006244:	681b      	ldr	r3, [r3, #0]
 8006246:	68b9      	ldr	r1, [r7, #8]
 8006248:	4618      	mov	r0, r3
 800624a:	f000 fbdb 	bl	8006a04 <TIM_OC4_SetConfig>
 800624e:	68fb      	ldr	r3, [r7, #12]
 8006250:	681b      	ldr	r3, [r3, #0]
 8006252:	69da      	ldr	r2, [r3, #28]
 8006254:	68fb      	ldr	r3, [r7, #12]
 8006256:	681b      	ldr	r3, [r3, #0]
 8006258:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800625c:	61da      	str	r2, [r3, #28]
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	69da      	ldr	r2, [r3, #28]
 8006264:	68fb      	ldr	r3, [r7, #12]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800626c:	61da      	str	r2, [r3, #28]
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	69d9      	ldr	r1, [r3, #28]
 8006274:	68bb      	ldr	r3, [r7, #8]
 8006276:	691b      	ldr	r3, [r3, #16]
 8006278:	021a      	lsls	r2, r3, #8
 800627a:	68fb      	ldr	r3, [r7, #12]
 800627c:	681b      	ldr	r3, [r3, #0]
 800627e:	430a      	orrs	r2, r1
 8006280:	61da      	str	r2, [r3, #28]
 8006282:	e043      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 8006284:	68fb      	ldr	r3, [r7, #12]
 8006286:	681b      	ldr	r3, [r3, #0]
 8006288:	68b9      	ldr	r1, [r7, #8]
 800628a:	4618      	mov	r0, r3
 800628c:	f000 fc24 	bl	8006ad8 <TIM_OC5_SetConfig>
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8006296:	68fb      	ldr	r3, [r7, #12]
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	f042 0208 	orr.w	r2, r2, #8
 800629e:	655a      	str	r2, [r3, #84]	@ 0x54
 80062a0:	68fb      	ldr	r3, [r7, #12]
 80062a2:	681b      	ldr	r3, [r3, #0]
 80062a4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80062a6:	68fb      	ldr	r3, [r7, #12]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	f022 0204 	bic.w	r2, r2, #4
 80062ae:	655a      	str	r2, [r3, #84]	@ 0x54
 80062b0:	68fb      	ldr	r3, [r7, #12]
 80062b2:	681b      	ldr	r3, [r3, #0]
 80062b4:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80062b6:	68bb      	ldr	r3, [r7, #8]
 80062b8:	691a      	ldr	r2, [r3, #16]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	430a      	orrs	r2, r1
 80062c0:	655a      	str	r2, [r3, #84]	@ 0x54
 80062c2:	e023      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 80062c4:	68fb      	ldr	r3, [r7, #12]
 80062c6:	681b      	ldr	r3, [r3, #0]
 80062c8:	68b9      	ldr	r1, [r7, #8]
 80062ca:	4618      	mov	r0, r3
 80062cc:	f000 fc68 	bl	8006ba0 <TIM_OC6_SetConfig>
 80062d0:	68fb      	ldr	r3, [r7, #12]
 80062d2:	681b      	ldr	r3, [r3, #0]
 80062d4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80062d6:	68fb      	ldr	r3, [r7, #12]
 80062d8:	681b      	ldr	r3, [r3, #0]
 80062da:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80062de:	655a      	str	r2, [r3, #84]	@ 0x54
 80062e0:	68fb      	ldr	r3, [r7, #12]
 80062e2:	681b      	ldr	r3, [r3, #0]
 80062e4:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 80062e6:	68fb      	ldr	r3, [r7, #12]
 80062e8:	681b      	ldr	r3, [r3, #0]
 80062ea:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80062ee:	655a      	str	r2, [r3, #84]	@ 0x54
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	681b      	ldr	r3, [r3, #0]
 80062f4:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 80062f6:	68bb      	ldr	r3, [r7, #8]
 80062f8:	691b      	ldr	r3, [r3, #16]
 80062fa:	021a      	lsls	r2, r3, #8
 80062fc:	68fb      	ldr	r3, [r7, #12]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	430a      	orrs	r2, r1
 8006302:	655a      	str	r2, [r3, #84]	@ 0x54
 8006304:	e002      	b.n	800630c <HAL_TIM_PWM_ConfigChannel+0x214>
 8006306:	2301      	movs	r3, #1
 8006308:	75fb      	strb	r3, [r7, #23]
 800630a:	bf00      	nop
 800630c:	68fb      	ldr	r3, [r7, #12]
 800630e:	2200      	movs	r2, #0
 8006310:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006314:	7dfb      	ldrb	r3, [r7, #23]
 8006316:	4618      	mov	r0, r3
 8006318:	3718      	adds	r7, #24
 800631a:	46bd      	mov	sp, r7
 800631c:	bd80      	pop	{r7, pc}
 800631e:	bf00      	nop

08006320 <HAL_TIM_ConfigClockSource>:
 8006320:	b580      	push	{r7, lr}
 8006322:	b084      	sub	sp, #16
 8006324:	af00      	add	r7, sp, #0
 8006326:	6078      	str	r0, [r7, #4]
 8006328:	6039      	str	r1, [r7, #0]
 800632a:	2300      	movs	r3, #0
 800632c:	73fb      	strb	r3, [r7, #15]
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006334:	2b01      	cmp	r3, #1
 8006336:	d101      	bne.n	800633c <HAL_TIM_ConfigClockSource+0x1c>
 8006338:	2302      	movs	r3, #2
 800633a:	e0b6      	b.n	80064aa <HAL_TIM_ConfigClockSource+0x18a>
 800633c:	687b      	ldr	r3, [r7, #4]
 800633e:	2201      	movs	r2, #1
 8006340:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006344:	687b      	ldr	r3, [r7, #4]
 8006346:	2202      	movs	r2, #2
 8006348:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800634c:	687b      	ldr	r3, [r7, #4]
 800634e:	681b      	ldr	r3, [r3, #0]
 8006350:	689b      	ldr	r3, [r3, #8]
 8006352:	60bb      	str	r3, [r7, #8]
 8006354:	68bb      	ldr	r3, [r7, #8]
 8006356:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800635a:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 800635e:	60bb      	str	r3, [r7, #8]
 8006360:	68bb      	ldr	r3, [r7, #8]
 8006362:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006366:	60bb      	str	r3, [r7, #8]
 8006368:	687b      	ldr	r3, [r7, #4]
 800636a:	681b      	ldr	r3, [r3, #0]
 800636c:	68ba      	ldr	r2, [r7, #8]
 800636e:	609a      	str	r2, [r3, #8]
 8006370:	683b      	ldr	r3, [r7, #0]
 8006372:	681b      	ldr	r3, [r3, #0]
 8006374:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006378:	d03e      	beq.n	80063f8 <HAL_TIM_ConfigClockSource+0xd8>
 800637a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 800637e:	f200 8087 	bhi.w	8006490 <HAL_TIM_ConfigClockSource+0x170>
 8006382:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006386:	f000 8086 	beq.w	8006496 <HAL_TIM_ConfigClockSource+0x176>
 800638a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800638e:	d87f      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 8006390:	2b70      	cmp	r3, #112	@ 0x70
 8006392:	d01a      	beq.n	80063ca <HAL_TIM_ConfigClockSource+0xaa>
 8006394:	2b70      	cmp	r3, #112	@ 0x70
 8006396:	d87b      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 8006398:	2b60      	cmp	r3, #96	@ 0x60
 800639a:	d050      	beq.n	800643e <HAL_TIM_ConfigClockSource+0x11e>
 800639c:	2b60      	cmp	r3, #96	@ 0x60
 800639e:	d877      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063a0:	2b50      	cmp	r3, #80	@ 0x50
 80063a2:	d03c      	beq.n	800641e <HAL_TIM_ConfigClockSource+0xfe>
 80063a4:	2b50      	cmp	r3, #80	@ 0x50
 80063a6:	d873      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063a8:	2b40      	cmp	r3, #64	@ 0x40
 80063aa:	d058      	beq.n	800645e <HAL_TIM_ConfigClockSource+0x13e>
 80063ac:	2b40      	cmp	r3, #64	@ 0x40
 80063ae:	d86f      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063b0:	2b30      	cmp	r3, #48	@ 0x30
 80063b2:	d064      	beq.n	800647e <HAL_TIM_ConfigClockSource+0x15e>
 80063b4:	2b30      	cmp	r3, #48	@ 0x30
 80063b6:	d86b      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063b8:	2b20      	cmp	r3, #32
 80063ba:	d060      	beq.n	800647e <HAL_TIM_ConfigClockSource+0x15e>
 80063bc:	2b20      	cmp	r3, #32
 80063be:	d867      	bhi.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063c0:	2b00      	cmp	r3, #0
 80063c2:	d05c      	beq.n	800647e <HAL_TIM_ConfigClockSource+0x15e>
 80063c4:	2b10      	cmp	r3, #16
 80063c6:	d05a      	beq.n	800647e <HAL_TIM_ConfigClockSource+0x15e>
 80063c8:	e062      	b.n	8006490 <HAL_TIM_ConfigClockSource+0x170>
 80063ca:	687b      	ldr	r3, [r7, #4]
 80063cc:	6818      	ldr	r0, [r3, #0]
 80063ce:	683b      	ldr	r3, [r7, #0]
 80063d0:	6899      	ldr	r1, [r3, #8]
 80063d2:	683b      	ldr	r3, [r7, #0]
 80063d4:	685a      	ldr	r2, [r3, #4]
 80063d6:	683b      	ldr	r3, [r7, #0]
 80063d8:	68db      	ldr	r3, [r3, #12]
 80063da:	f000 fde5 	bl	8006fa8 <TIM_ETR_SetConfig>
 80063de:	687b      	ldr	r3, [r7, #4]
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	689b      	ldr	r3, [r3, #8]
 80063e4:	60bb      	str	r3, [r7, #8]
 80063e6:	68bb      	ldr	r3, [r7, #8]
 80063e8:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80063ec:	60bb      	str	r3, [r7, #8]
 80063ee:	687b      	ldr	r3, [r7, #4]
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	68ba      	ldr	r2, [r7, #8]
 80063f4:	609a      	str	r2, [r3, #8]
 80063f6:	e04f      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 80063f8:	687b      	ldr	r3, [r7, #4]
 80063fa:	6818      	ldr	r0, [r3, #0]
 80063fc:	683b      	ldr	r3, [r7, #0]
 80063fe:	6899      	ldr	r1, [r3, #8]
 8006400:	683b      	ldr	r3, [r7, #0]
 8006402:	685a      	ldr	r2, [r3, #4]
 8006404:	683b      	ldr	r3, [r7, #0]
 8006406:	68db      	ldr	r3, [r3, #12]
 8006408:	f000 fdce 	bl	8006fa8 <TIM_ETR_SetConfig>
 800640c:	687b      	ldr	r3, [r7, #4]
 800640e:	681b      	ldr	r3, [r3, #0]
 8006410:	689a      	ldr	r2, [r3, #8]
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800641a:	609a      	str	r2, [r3, #8]
 800641c:	e03c      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 800641e:	687b      	ldr	r3, [r7, #4]
 8006420:	6818      	ldr	r0, [r3, #0]
 8006422:	683b      	ldr	r3, [r7, #0]
 8006424:	6859      	ldr	r1, [r3, #4]
 8006426:	683b      	ldr	r3, [r7, #0]
 8006428:	68db      	ldr	r3, [r3, #12]
 800642a:	461a      	mov	r2, r3
 800642c:	f000 fc8c 	bl	8006d48 <TIM_TI1_ConfigInputStage>
 8006430:	687b      	ldr	r3, [r7, #4]
 8006432:	681b      	ldr	r3, [r3, #0]
 8006434:	2150      	movs	r1, #80	@ 0x50
 8006436:	4618      	mov	r0, r3
 8006438:	f000 fd9b 	bl	8006f72 <TIM_ITRx_SetConfig>
 800643c:	e02c      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 800643e:	687b      	ldr	r3, [r7, #4]
 8006440:	6818      	ldr	r0, [r3, #0]
 8006442:	683b      	ldr	r3, [r7, #0]
 8006444:	6859      	ldr	r1, [r3, #4]
 8006446:	683b      	ldr	r3, [r7, #0]
 8006448:	68db      	ldr	r3, [r3, #12]
 800644a:	461a      	mov	r2, r3
 800644c:	f000 fce8 	bl	8006e20 <TIM_TI2_ConfigInputStage>
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	2160      	movs	r1, #96	@ 0x60
 8006456:	4618      	mov	r0, r3
 8006458:	f000 fd8b 	bl	8006f72 <TIM_ITRx_SetConfig>
 800645c:	e01c      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 800645e:	687b      	ldr	r3, [r7, #4]
 8006460:	6818      	ldr	r0, [r3, #0]
 8006462:	683b      	ldr	r3, [r7, #0]
 8006464:	6859      	ldr	r1, [r3, #4]
 8006466:	683b      	ldr	r3, [r7, #0]
 8006468:	68db      	ldr	r3, [r3, #12]
 800646a:	461a      	mov	r2, r3
 800646c:	f000 fc6c 	bl	8006d48 <TIM_TI1_ConfigInputStage>
 8006470:	687b      	ldr	r3, [r7, #4]
 8006472:	681b      	ldr	r3, [r3, #0]
 8006474:	2140      	movs	r1, #64	@ 0x40
 8006476:	4618      	mov	r0, r3
 8006478:	f000 fd7b 	bl	8006f72 <TIM_ITRx_SetConfig>
 800647c:	e00c      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 800647e:	687b      	ldr	r3, [r7, #4]
 8006480:	681a      	ldr	r2, [r3, #0]
 8006482:	683b      	ldr	r3, [r7, #0]
 8006484:	681b      	ldr	r3, [r3, #0]
 8006486:	4619      	mov	r1, r3
 8006488:	4610      	mov	r0, r2
 800648a:	f000 fd72 	bl	8006f72 <TIM_ITRx_SetConfig>
 800648e:	e003      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 8006490:	2301      	movs	r3, #1
 8006492:	73fb      	strb	r3, [r7, #15]
 8006494:	e000      	b.n	8006498 <HAL_TIM_ConfigClockSource+0x178>
 8006496:	bf00      	nop
 8006498:	687b      	ldr	r3, [r7, #4]
 800649a:	2201      	movs	r2, #1
 800649c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80064a0:	687b      	ldr	r3, [r7, #4]
 80064a2:	2200      	movs	r2, #0
 80064a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80064a8:	7bfb      	ldrb	r3, [r7, #15]
 80064aa:	4618      	mov	r0, r3
 80064ac:	3710      	adds	r7, #16
 80064ae:	46bd      	mov	sp, r7
 80064b0:	bd80      	pop	{r7, pc}
	...

080064b4 <HAL_TIM_ReadCapturedValue>:
 80064b4:	b480      	push	{r7}
 80064b6:	b085      	sub	sp, #20
 80064b8:	af00      	add	r7, sp, #0
 80064ba:	6078      	str	r0, [r7, #4]
 80064bc:	6039      	str	r1, [r7, #0]
 80064be:	2300      	movs	r3, #0
 80064c0:	60fb      	str	r3, [r7, #12]
 80064c2:	683b      	ldr	r3, [r7, #0]
 80064c4:	2b0c      	cmp	r3, #12
 80064c6:	d831      	bhi.n	800652c <HAL_TIM_ReadCapturedValue+0x78>
 80064c8:	a201      	add	r2, pc, #4	@ (adr r2, 80064d0 <HAL_TIM_ReadCapturedValue+0x1c>)
 80064ca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80064ce:	bf00      	nop
 80064d0:	08006505 	.word	0x08006505
 80064d4:	0800652d 	.word	0x0800652d
 80064d8:	0800652d 	.word	0x0800652d
 80064dc:	0800652d 	.word	0x0800652d
 80064e0:	0800650f 	.word	0x0800650f
 80064e4:	0800652d 	.word	0x0800652d
 80064e8:	0800652d 	.word	0x0800652d
 80064ec:	0800652d 	.word	0x0800652d
 80064f0:	08006519 	.word	0x08006519
 80064f4:	0800652d 	.word	0x0800652d
 80064f8:	0800652d 	.word	0x0800652d
 80064fc:	0800652d 	.word	0x0800652d
 8006500:	08006523 	.word	0x08006523
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800650a:	60fb      	str	r3, [r7, #12]
 800650c:	e00f      	b.n	800652e <HAL_TIM_ReadCapturedValue+0x7a>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	681b      	ldr	r3, [r3, #0]
 8006512:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006514:	60fb      	str	r3, [r7, #12]
 8006516:	e00a      	b.n	800652e <HAL_TIM_ReadCapturedValue+0x7a>
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800651e:	60fb      	str	r3, [r7, #12]
 8006520:	e005      	b.n	800652e <HAL_TIM_ReadCapturedValue+0x7a>
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006528:	60fb      	str	r3, [r7, #12]
 800652a:	e000      	b.n	800652e <HAL_TIM_ReadCapturedValue+0x7a>
 800652c:	bf00      	nop
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	4618      	mov	r0, r3
 8006532:	3714      	adds	r7, #20
 8006534:	46bd      	mov	sp, r7
 8006536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800653a:	4770      	bx	lr

0800653c <HAL_TIM_PeriodElapsedCallback>:
 800653c:	b480      	push	{r7}
 800653e:	b083      	sub	sp, #12
 8006540:	af00      	add	r7, sp, #0
 8006542:	6078      	str	r0, [r7, #4]
 8006544:	bf00      	nop
 8006546:	370c      	adds	r7, #12
 8006548:	46bd      	mov	sp, r7
 800654a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800654e:	4770      	bx	lr

08006550 <HAL_TIM_OC_DelayElapsedCallback>:
 8006550:	b480      	push	{r7}
 8006552:	b083      	sub	sp, #12
 8006554:	af00      	add	r7, sp, #0
 8006556:	6078      	str	r0, [r7, #4]
 8006558:	bf00      	nop
 800655a:	370c      	adds	r7, #12
 800655c:	46bd      	mov	sp, r7
 800655e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006562:	4770      	bx	lr

08006564 <HAL_TIM_PWM_PulseFinishedCallback>:
 8006564:	b480      	push	{r7}
 8006566:	b083      	sub	sp, #12
 8006568:	af00      	add	r7, sp, #0
 800656a:	6078      	str	r0, [r7, #4]
 800656c:	bf00      	nop
 800656e:	370c      	adds	r7, #12
 8006570:	46bd      	mov	sp, r7
 8006572:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006576:	4770      	bx	lr

08006578 <HAL_TIM_TriggerCallback>:
 8006578:	b480      	push	{r7}
 800657a:	b083      	sub	sp, #12
 800657c:	af00      	add	r7, sp, #0
 800657e:	6078      	str	r0, [r7, #4]
 8006580:	bf00      	nop
 8006582:	370c      	adds	r7, #12
 8006584:	46bd      	mov	sp, r7
 8006586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800658a:	4770      	bx	lr

0800658c <TIM_Base_SetConfig>:
 800658c:	b480      	push	{r7}
 800658e:	b085      	sub	sp, #20
 8006590:	af00      	add	r7, sp, #0
 8006592:	6078      	str	r0, [r7, #4]
 8006594:	6039      	str	r1, [r7, #0]
 8006596:	687b      	ldr	r3, [r7, #4]
 8006598:	681b      	ldr	r3, [r3, #0]
 800659a:	60fb      	str	r3, [r7, #12]
 800659c:	687b      	ldr	r3, [r7, #4]
 800659e:	4a40      	ldr	r2, [pc, #256]	@ (80066a0 <TIM_Base_SetConfig+0x114>)
 80065a0:	4293      	cmp	r3, r2
 80065a2:	d013      	beq.n	80065cc <TIM_Base_SetConfig+0x40>
 80065a4:	687b      	ldr	r3, [r7, #4]
 80065a6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80065aa:	d00f      	beq.n	80065cc <TIM_Base_SetConfig+0x40>
 80065ac:	687b      	ldr	r3, [r7, #4]
 80065ae:	4a3d      	ldr	r2, [pc, #244]	@ (80066a4 <TIM_Base_SetConfig+0x118>)
 80065b0:	4293      	cmp	r3, r2
 80065b2:	d00b      	beq.n	80065cc <TIM_Base_SetConfig+0x40>
 80065b4:	687b      	ldr	r3, [r7, #4]
 80065b6:	4a3c      	ldr	r2, [pc, #240]	@ (80066a8 <TIM_Base_SetConfig+0x11c>)
 80065b8:	4293      	cmp	r3, r2
 80065ba:	d007      	beq.n	80065cc <TIM_Base_SetConfig+0x40>
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	4a3b      	ldr	r2, [pc, #236]	@ (80066ac <TIM_Base_SetConfig+0x120>)
 80065c0:	4293      	cmp	r3, r2
 80065c2:	d003      	beq.n	80065cc <TIM_Base_SetConfig+0x40>
 80065c4:	687b      	ldr	r3, [r7, #4]
 80065c6:	4a3a      	ldr	r2, [pc, #232]	@ (80066b0 <TIM_Base_SetConfig+0x124>)
 80065c8:	4293      	cmp	r3, r2
 80065ca:	d108      	bne.n	80065de <TIM_Base_SetConfig+0x52>
 80065cc:	68fb      	ldr	r3, [r7, #12]
 80065ce:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80065d2:	60fb      	str	r3, [r7, #12]
 80065d4:	683b      	ldr	r3, [r7, #0]
 80065d6:	685b      	ldr	r3, [r3, #4]
 80065d8:	68fa      	ldr	r2, [r7, #12]
 80065da:	4313      	orrs	r3, r2
 80065dc:	60fb      	str	r3, [r7, #12]
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	4a2f      	ldr	r2, [pc, #188]	@ (80066a0 <TIM_Base_SetConfig+0x114>)
 80065e2:	4293      	cmp	r3, r2
 80065e4:	d01f      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 80065e6:	687b      	ldr	r3, [r7, #4]
 80065e8:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80065ec:	d01b      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	4a2c      	ldr	r2, [pc, #176]	@ (80066a4 <TIM_Base_SetConfig+0x118>)
 80065f2:	4293      	cmp	r3, r2
 80065f4:	d017      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 80065f6:	687b      	ldr	r3, [r7, #4]
 80065f8:	4a2b      	ldr	r2, [pc, #172]	@ (80066a8 <TIM_Base_SetConfig+0x11c>)
 80065fa:	4293      	cmp	r3, r2
 80065fc:	d013      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	4a2a      	ldr	r2, [pc, #168]	@ (80066ac <TIM_Base_SetConfig+0x120>)
 8006602:	4293      	cmp	r3, r2
 8006604:	d00f      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	4a29      	ldr	r2, [pc, #164]	@ (80066b0 <TIM_Base_SetConfig+0x124>)
 800660a:	4293      	cmp	r3, r2
 800660c:	d00b      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 800660e:	687b      	ldr	r3, [r7, #4]
 8006610:	4a28      	ldr	r2, [pc, #160]	@ (80066b4 <TIM_Base_SetConfig+0x128>)
 8006612:	4293      	cmp	r3, r2
 8006614:	d007      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	4a27      	ldr	r2, [pc, #156]	@ (80066b8 <TIM_Base_SetConfig+0x12c>)
 800661a:	4293      	cmp	r3, r2
 800661c:	d003      	beq.n	8006626 <TIM_Base_SetConfig+0x9a>
 800661e:	687b      	ldr	r3, [r7, #4]
 8006620:	4a26      	ldr	r2, [pc, #152]	@ (80066bc <TIM_Base_SetConfig+0x130>)
 8006622:	4293      	cmp	r3, r2
 8006624:	d108      	bne.n	8006638 <TIM_Base_SetConfig+0xac>
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800662c:	60fb      	str	r3, [r7, #12]
 800662e:	683b      	ldr	r3, [r7, #0]
 8006630:	68db      	ldr	r3, [r3, #12]
 8006632:	68fa      	ldr	r2, [r7, #12]
 8006634:	4313      	orrs	r3, r2
 8006636:	60fb      	str	r3, [r7, #12]
 8006638:	68fb      	ldr	r3, [r7, #12]
 800663a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800663e:	683b      	ldr	r3, [r7, #0]
 8006640:	695b      	ldr	r3, [r3, #20]
 8006642:	4313      	orrs	r3, r2
 8006644:	60fb      	str	r3, [r7, #12]
 8006646:	687b      	ldr	r3, [r7, #4]
 8006648:	68fa      	ldr	r2, [r7, #12]
 800664a:	601a      	str	r2, [r3, #0]
 800664c:	683b      	ldr	r3, [r7, #0]
 800664e:	689a      	ldr	r2, [r3, #8]
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	62da      	str	r2, [r3, #44]	@ 0x2c
 8006654:	683b      	ldr	r3, [r7, #0]
 8006656:	681a      	ldr	r2, [r3, #0]
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	629a      	str	r2, [r3, #40]	@ 0x28
 800665c:	687b      	ldr	r3, [r7, #4]
 800665e:	4a10      	ldr	r2, [pc, #64]	@ (80066a0 <TIM_Base_SetConfig+0x114>)
 8006660:	4293      	cmp	r3, r2
 8006662:	d00f      	beq.n	8006684 <TIM_Base_SetConfig+0xf8>
 8006664:	687b      	ldr	r3, [r7, #4]
 8006666:	4a12      	ldr	r2, [pc, #72]	@ (80066b0 <TIM_Base_SetConfig+0x124>)
 8006668:	4293      	cmp	r3, r2
 800666a:	d00b      	beq.n	8006684 <TIM_Base_SetConfig+0xf8>
 800666c:	687b      	ldr	r3, [r7, #4]
 800666e:	4a11      	ldr	r2, [pc, #68]	@ (80066b4 <TIM_Base_SetConfig+0x128>)
 8006670:	4293      	cmp	r3, r2
 8006672:	d007      	beq.n	8006684 <TIM_Base_SetConfig+0xf8>
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	4a10      	ldr	r2, [pc, #64]	@ (80066b8 <TIM_Base_SetConfig+0x12c>)
 8006678:	4293      	cmp	r3, r2
 800667a:	d003      	beq.n	8006684 <TIM_Base_SetConfig+0xf8>
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	4a0f      	ldr	r2, [pc, #60]	@ (80066bc <TIM_Base_SetConfig+0x130>)
 8006680:	4293      	cmp	r3, r2
 8006682:	d103      	bne.n	800668c <TIM_Base_SetConfig+0x100>
 8006684:	683b      	ldr	r3, [r7, #0]
 8006686:	691a      	ldr	r2, [r3, #16]
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	631a      	str	r2, [r3, #48]	@ 0x30
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	2201      	movs	r2, #1
 8006690:	615a      	str	r2, [r3, #20]
 8006692:	bf00      	nop
 8006694:	3714      	adds	r7, #20
 8006696:	46bd      	mov	sp, r7
 8006698:	f85d 7b04 	ldr.w	r7, [sp], #4
 800669c:	4770      	bx	lr
 800669e:	bf00      	nop
 80066a0:	40012c00 	.word	0x40012c00
 80066a4:	40000400 	.word	0x40000400
 80066a8:	40000800 	.word	0x40000800
 80066ac:	40000c00 	.word	0x40000c00
 80066b0:	40013400 	.word	0x40013400
 80066b4:	40014000 	.word	0x40014000
 80066b8:	40014400 	.word	0x40014400
 80066bc:	40014800 	.word	0x40014800

080066c0 <TIM_OC1_SetConfig>:
 80066c0:	b480      	push	{r7}
 80066c2:	b087      	sub	sp, #28
 80066c4:	af00      	add	r7, sp, #0
 80066c6:	6078      	str	r0, [r7, #4]
 80066c8:	6039      	str	r1, [r7, #0]
 80066ca:	687b      	ldr	r3, [r7, #4]
 80066cc:	6a1b      	ldr	r3, [r3, #32]
 80066ce:	617b      	str	r3, [r7, #20]
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	6a1b      	ldr	r3, [r3, #32]
 80066d4:	f023 0201 	bic.w	r2, r3, #1
 80066d8:	687b      	ldr	r3, [r7, #4]
 80066da:	621a      	str	r2, [r3, #32]
 80066dc:	687b      	ldr	r3, [r7, #4]
 80066de:	685b      	ldr	r3, [r3, #4]
 80066e0:	613b      	str	r3, [r7, #16]
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	699b      	ldr	r3, [r3, #24]
 80066e6:	60fb      	str	r3, [r7, #12]
 80066e8:	68fb      	ldr	r3, [r7, #12]
 80066ea:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80066ee:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80066f2:	60fb      	str	r3, [r7, #12]
 80066f4:	68fb      	ldr	r3, [r7, #12]
 80066f6:	f023 0303 	bic.w	r3, r3, #3
 80066fa:	60fb      	str	r3, [r7, #12]
 80066fc:	683b      	ldr	r3, [r7, #0]
 80066fe:	681b      	ldr	r3, [r3, #0]
 8006700:	68fa      	ldr	r2, [r7, #12]
 8006702:	4313      	orrs	r3, r2
 8006704:	60fb      	str	r3, [r7, #12]
 8006706:	697b      	ldr	r3, [r7, #20]
 8006708:	f023 0302 	bic.w	r3, r3, #2
 800670c:	617b      	str	r3, [r7, #20]
 800670e:	683b      	ldr	r3, [r7, #0]
 8006710:	689b      	ldr	r3, [r3, #8]
 8006712:	697a      	ldr	r2, [r7, #20]
 8006714:	4313      	orrs	r3, r2
 8006716:	617b      	str	r3, [r7, #20]
 8006718:	687b      	ldr	r3, [r7, #4]
 800671a:	4a2c      	ldr	r2, [pc, #176]	@ (80067cc <TIM_OC1_SetConfig+0x10c>)
 800671c:	4293      	cmp	r3, r2
 800671e:	d00f      	beq.n	8006740 <TIM_OC1_SetConfig+0x80>
 8006720:	687b      	ldr	r3, [r7, #4]
 8006722:	4a2b      	ldr	r2, [pc, #172]	@ (80067d0 <TIM_OC1_SetConfig+0x110>)
 8006724:	4293      	cmp	r3, r2
 8006726:	d00b      	beq.n	8006740 <TIM_OC1_SetConfig+0x80>
 8006728:	687b      	ldr	r3, [r7, #4]
 800672a:	4a2a      	ldr	r2, [pc, #168]	@ (80067d4 <TIM_OC1_SetConfig+0x114>)
 800672c:	4293      	cmp	r3, r2
 800672e:	d007      	beq.n	8006740 <TIM_OC1_SetConfig+0x80>
 8006730:	687b      	ldr	r3, [r7, #4]
 8006732:	4a29      	ldr	r2, [pc, #164]	@ (80067d8 <TIM_OC1_SetConfig+0x118>)
 8006734:	4293      	cmp	r3, r2
 8006736:	d003      	beq.n	8006740 <TIM_OC1_SetConfig+0x80>
 8006738:	687b      	ldr	r3, [r7, #4]
 800673a:	4a28      	ldr	r2, [pc, #160]	@ (80067dc <TIM_OC1_SetConfig+0x11c>)
 800673c:	4293      	cmp	r3, r2
 800673e:	d10c      	bne.n	800675a <TIM_OC1_SetConfig+0x9a>
 8006740:	697b      	ldr	r3, [r7, #20]
 8006742:	f023 0308 	bic.w	r3, r3, #8
 8006746:	617b      	str	r3, [r7, #20]
 8006748:	683b      	ldr	r3, [r7, #0]
 800674a:	68db      	ldr	r3, [r3, #12]
 800674c:	697a      	ldr	r2, [r7, #20]
 800674e:	4313      	orrs	r3, r2
 8006750:	617b      	str	r3, [r7, #20]
 8006752:	697b      	ldr	r3, [r7, #20]
 8006754:	f023 0304 	bic.w	r3, r3, #4
 8006758:	617b      	str	r3, [r7, #20]
 800675a:	687b      	ldr	r3, [r7, #4]
 800675c:	4a1b      	ldr	r2, [pc, #108]	@ (80067cc <TIM_OC1_SetConfig+0x10c>)
 800675e:	4293      	cmp	r3, r2
 8006760:	d00f      	beq.n	8006782 <TIM_OC1_SetConfig+0xc2>
 8006762:	687b      	ldr	r3, [r7, #4]
 8006764:	4a1a      	ldr	r2, [pc, #104]	@ (80067d0 <TIM_OC1_SetConfig+0x110>)
 8006766:	4293      	cmp	r3, r2
 8006768:	d00b      	beq.n	8006782 <TIM_OC1_SetConfig+0xc2>
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	4a19      	ldr	r2, [pc, #100]	@ (80067d4 <TIM_OC1_SetConfig+0x114>)
 800676e:	4293      	cmp	r3, r2
 8006770:	d007      	beq.n	8006782 <TIM_OC1_SetConfig+0xc2>
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	4a18      	ldr	r2, [pc, #96]	@ (80067d8 <TIM_OC1_SetConfig+0x118>)
 8006776:	4293      	cmp	r3, r2
 8006778:	d003      	beq.n	8006782 <TIM_OC1_SetConfig+0xc2>
 800677a:	687b      	ldr	r3, [r7, #4]
 800677c:	4a17      	ldr	r2, [pc, #92]	@ (80067dc <TIM_OC1_SetConfig+0x11c>)
 800677e:	4293      	cmp	r3, r2
 8006780:	d111      	bne.n	80067a6 <TIM_OC1_SetConfig+0xe6>
 8006782:	693b      	ldr	r3, [r7, #16]
 8006784:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8006788:	613b      	str	r3, [r7, #16]
 800678a:	693b      	ldr	r3, [r7, #16]
 800678c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006790:	613b      	str	r3, [r7, #16]
 8006792:	683b      	ldr	r3, [r7, #0]
 8006794:	695b      	ldr	r3, [r3, #20]
 8006796:	693a      	ldr	r2, [r7, #16]
 8006798:	4313      	orrs	r3, r2
 800679a:	613b      	str	r3, [r7, #16]
 800679c:	683b      	ldr	r3, [r7, #0]
 800679e:	699b      	ldr	r3, [r3, #24]
 80067a0:	693a      	ldr	r2, [r7, #16]
 80067a2:	4313      	orrs	r3, r2
 80067a4:	613b      	str	r3, [r7, #16]
 80067a6:	687b      	ldr	r3, [r7, #4]
 80067a8:	693a      	ldr	r2, [r7, #16]
 80067aa:	605a      	str	r2, [r3, #4]
 80067ac:	687b      	ldr	r3, [r7, #4]
 80067ae:	68fa      	ldr	r2, [r7, #12]
 80067b0:	619a      	str	r2, [r3, #24]
 80067b2:	683b      	ldr	r3, [r7, #0]
 80067b4:	685a      	ldr	r2, [r3, #4]
 80067b6:	687b      	ldr	r3, [r7, #4]
 80067b8:	635a      	str	r2, [r3, #52]	@ 0x34
 80067ba:	687b      	ldr	r3, [r7, #4]
 80067bc:	697a      	ldr	r2, [r7, #20]
 80067be:	621a      	str	r2, [r3, #32]
 80067c0:	bf00      	nop
 80067c2:	371c      	adds	r7, #28
 80067c4:	46bd      	mov	sp, r7
 80067c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067ca:	4770      	bx	lr
 80067cc:	40012c00 	.word	0x40012c00
 80067d0:	40013400 	.word	0x40013400
 80067d4:	40014000 	.word	0x40014000
 80067d8:	40014400 	.word	0x40014400
 80067dc:	40014800 	.word	0x40014800

080067e0 <TIM_OC2_SetConfig>:
 80067e0:	b480      	push	{r7}
 80067e2:	b087      	sub	sp, #28
 80067e4:	af00      	add	r7, sp, #0
 80067e6:	6078      	str	r0, [r7, #4]
 80067e8:	6039      	str	r1, [r7, #0]
 80067ea:	687b      	ldr	r3, [r7, #4]
 80067ec:	6a1b      	ldr	r3, [r3, #32]
 80067ee:	617b      	str	r3, [r7, #20]
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	6a1b      	ldr	r3, [r3, #32]
 80067f4:	f023 0210 	bic.w	r2, r3, #16
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	621a      	str	r2, [r3, #32]
 80067fc:	687b      	ldr	r3, [r7, #4]
 80067fe:	685b      	ldr	r3, [r3, #4]
 8006800:	613b      	str	r3, [r7, #16]
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	699b      	ldr	r3, [r3, #24]
 8006806:	60fb      	str	r3, [r7, #12]
 8006808:	68fb      	ldr	r3, [r7, #12]
 800680a:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800680e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006812:	60fb      	str	r3, [r7, #12]
 8006814:	68fb      	ldr	r3, [r7, #12]
 8006816:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800681a:	60fb      	str	r3, [r7, #12]
 800681c:	683b      	ldr	r3, [r7, #0]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	021b      	lsls	r3, r3, #8
 8006822:	68fa      	ldr	r2, [r7, #12]
 8006824:	4313      	orrs	r3, r2
 8006826:	60fb      	str	r3, [r7, #12]
 8006828:	697b      	ldr	r3, [r7, #20]
 800682a:	f023 0320 	bic.w	r3, r3, #32
 800682e:	617b      	str	r3, [r7, #20]
 8006830:	683b      	ldr	r3, [r7, #0]
 8006832:	689b      	ldr	r3, [r3, #8]
 8006834:	011b      	lsls	r3, r3, #4
 8006836:	697a      	ldr	r2, [r7, #20]
 8006838:	4313      	orrs	r3, r2
 800683a:	617b      	str	r3, [r7, #20]
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	4a28      	ldr	r2, [pc, #160]	@ (80068e0 <TIM_OC2_SetConfig+0x100>)
 8006840:	4293      	cmp	r3, r2
 8006842:	d003      	beq.n	800684c <TIM_OC2_SetConfig+0x6c>
 8006844:	687b      	ldr	r3, [r7, #4]
 8006846:	4a27      	ldr	r2, [pc, #156]	@ (80068e4 <TIM_OC2_SetConfig+0x104>)
 8006848:	4293      	cmp	r3, r2
 800684a:	d10d      	bne.n	8006868 <TIM_OC2_SetConfig+0x88>
 800684c:	697b      	ldr	r3, [r7, #20]
 800684e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006852:	617b      	str	r3, [r7, #20]
 8006854:	683b      	ldr	r3, [r7, #0]
 8006856:	68db      	ldr	r3, [r3, #12]
 8006858:	011b      	lsls	r3, r3, #4
 800685a:	697a      	ldr	r2, [r7, #20]
 800685c:	4313      	orrs	r3, r2
 800685e:	617b      	str	r3, [r7, #20]
 8006860:	697b      	ldr	r3, [r7, #20]
 8006862:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8006866:	617b      	str	r3, [r7, #20]
 8006868:	687b      	ldr	r3, [r7, #4]
 800686a:	4a1d      	ldr	r2, [pc, #116]	@ (80068e0 <TIM_OC2_SetConfig+0x100>)
 800686c:	4293      	cmp	r3, r2
 800686e:	d00f      	beq.n	8006890 <TIM_OC2_SetConfig+0xb0>
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	4a1c      	ldr	r2, [pc, #112]	@ (80068e4 <TIM_OC2_SetConfig+0x104>)
 8006874:	4293      	cmp	r3, r2
 8006876:	d00b      	beq.n	8006890 <TIM_OC2_SetConfig+0xb0>
 8006878:	687b      	ldr	r3, [r7, #4]
 800687a:	4a1b      	ldr	r2, [pc, #108]	@ (80068e8 <TIM_OC2_SetConfig+0x108>)
 800687c:	4293      	cmp	r3, r2
 800687e:	d007      	beq.n	8006890 <TIM_OC2_SetConfig+0xb0>
 8006880:	687b      	ldr	r3, [r7, #4]
 8006882:	4a1a      	ldr	r2, [pc, #104]	@ (80068ec <TIM_OC2_SetConfig+0x10c>)
 8006884:	4293      	cmp	r3, r2
 8006886:	d003      	beq.n	8006890 <TIM_OC2_SetConfig+0xb0>
 8006888:	687b      	ldr	r3, [r7, #4]
 800688a:	4a19      	ldr	r2, [pc, #100]	@ (80068f0 <TIM_OC2_SetConfig+0x110>)
 800688c:	4293      	cmp	r3, r2
 800688e:	d113      	bne.n	80068b8 <TIM_OC2_SetConfig+0xd8>
 8006890:	693b      	ldr	r3, [r7, #16]
 8006892:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006896:	613b      	str	r3, [r7, #16]
 8006898:	693b      	ldr	r3, [r7, #16]
 800689a:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800689e:	613b      	str	r3, [r7, #16]
 80068a0:	683b      	ldr	r3, [r7, #0]
 80068a2:	695b      	ldr	r3, [r3, #20]
 80068a4:	009b      	lsls	r3, r3, #2
 80068a6:	693a      	ldr	r2, [r7, #16]
 80068a8:	4313      	orrs	r3, r2
 80068aa:	613b      	str	r3, [r7, #16]
 80068ac:	683b      	ldr	r3, [r7, #0]
 80068ae:	699b      	ldr	r3, [r3, #24]
 80068b0:	009b      	lsls	r3, r3, #2
 80068b2:	693a      	ldr	r2, [r7, #16]
 80068b4:	4313      	orrs	r3, r2
 80068b6:	613b      	str	r3, [r7, #16]
 80068b8:	687b      	ldr	r3, [r7, #4]
 80068ba:	693a      	ldr	r2, [r7, #16]
 80068bc:	605a      	str	r2, [r3, #4]
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	68fa      	ldr	r2, [r7, #12]
 80068c2:	619a      	str	r2, [r3, #24]
 80068c4:	683b      	ldr	r3, [r7, #0]
 80068c6:	685a      	ldr	r2, [r3, #4]
 80068c8:	687b      	ldr	r3, [r7, #4]
 80068ca:	639a      	str	r2, [r3, #56]	@ 0x38
 80068cc:	687b      	ldr	r3, [r7, #4]
 80068ce:	697a      	ldr	r2, [r7, #20]
 80068d0:	621a      	str	r2, [r3, #32]
 80068d2:	bf00      	nop
 80068d4:	371c      	adds	r7, #28
 80068d6:	46bd      	mov	sp, r7
 80068d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068dc:	4770      	bx	lr
 80068de:	bf00      	nop
 80068e0:	40012c00 	.word	0x40012c00
 80068e4:	40013400 	.word	0x40013400
 80068e8:	40014000 	.word	0x40014000
 80068ec:	40014400 	.word	0x40014400
 80068f0:	40014800 	.word	0x40014800

080068f4 <TIM_OC3_SetConfig>:
 80068f4:	b480      	push	{r7}
 80068f6:	b087      	sub	sp, #28
 80068f8:	af00      	add	r7, sp, #0
 80068fa:	6078      	str	r0, [r7, #4]
 80068fc:	6039      	str	r1, [r7, #0]
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	6a1b      	ldr	r3, [r3, #32]
 8006902:	617b      	str	r3, [r7, #20]
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	6a1b      	ldr	r3, [r3, #32]
 8006908:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800690c:	687b      	ldr	r3, [r7, #4]
 800690e:	621a      	str	r2, [r3, #32]
 8006910:	687b      	ldr	r3, [r7, #4]
 8006912:	685b      	ldr	r3, [r3, #4]
 8006914:	613b      	str	r3, [r7, #16]
 8006916:	687b      	ldr	r3, [r7, #4]
 8006918:	69db      	ldr	r3, [r3, #28]
 800691a:	60fb      	str	r3, [r7, #12]
 800691c:	68fb      	ldr	r3, [r7, #12]
 800691e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006922:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006926:	60fb      	str	r3, [r7, #12]
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	f023 0303 	bic.w	r3, r3, #3
 800692e:	60fb      	str	r3, [r7, #12]
 8006930:	683b      	ldr	r3, [r7, #0]
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	68fa      	ldr	r2, [r7, #12]
 8006936:	4313      	orrs	r3, r2
 8006938:	60fb      	str	r3, [r7, #12]
 800693a:	697b      	ldr	r3, [r7, #20]
 800693c:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8006940:	617b      	str	r3, [r7, #20]
 8006942:	683b      	ldr	r3, [r7, #0]
 8006944:	689b      	ldr	r3, [r3, #8]
 8006946:	021b      	lsls	r3, r3, #8
 8006948:	697a      	ldr	r2, [r7, #20]
 800694a:	4313      	orrs	r3, r2
 800694c:	617b      	str	r3, [r7, #20]
 800694e:	687b      	ldr	r3, [r7, #4]
 8006950:	4a27      	ldr	r2, [pc, #156]	@ (80069f0 <TIM_OC3_SetConfig+0xfc>)
 8006952:	4293      	cmp	r3, r2
 8006954:	d003      	beq.n	800695e <TIM_OC3_SetConfig+0x6a>
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	4a26      	ldr	r2, [pc, #152]	@ (80069f4 <TIM_OC3_SetConfig+0x100>)
 800695a:	4293      	cmp	r3, r2
 800695c:	d10d      	bne.n	800697a <TIM_OC3_SetConfig+0x86>
 800695e:	697b      	ldr	r3, [r7, #20]
 8006960:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8006964:	617b      	str	r3, [r7, #20]
 8006966:	683b      	ldr	r3, [r7, #0]
 8006968:	68db      	ldr	r3, [r3, #12]
 800696a:	021b      	lsls	r3, r3, #8
 800696c:	697a      	ldr	r2, [r7, #20]
 800696e:	4313      	orrs	r3, r2
 8006970:	617b      	str	r3, [r7, #20]
 8006972:	697b      	ldr	r3, [r7, #20]
 8006974:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8006978:	617b      	str	r3, [r7, #20]
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	4a1c      	ldr	r2, [pc, #112]	@ (80069f0 <TIM_OC3_SetConfig+0xfc>)
 800697e:	4293      	cmp	r3, r2
 8006980:	d00f      	beq.n	80069a2 <TIM_OC3_SetConfig+0xae>
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	4a1b      	ldr	r2, [pc, #108]	@ (80069f4 <TIM_OC3_SetConfig+0x100>)
 8006986:	4293      	cmp	r3, r2
 8006988:	d00b      	beq.n	80069a2 <TIM_OC3_SetConfig+0xae>
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	4a1a      	ldr	r2, [pc, #104]	@ (80069f8 <TIM_OC3_SetConfig+0x104>)
 800698e:	4293      	cmp	r3, r2
 8006990:	d007      	beq.n	80069a2 <TIM_OC3_SetConfig+0xae>
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	4a19      	ldr	r2, [pc, #100]	@ (80069fc <TIM_OC3_SetConfig+0x108>)
 8006996:	4293      	cmp	r3, r2
 8006998:	d003      	beq.n	80069a2 <TIM_OC3_SetConfig+0xae>
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	4a18      	ldr	r2, [pc, #96]	@ (8006a00 <TIM_OC3_SetConfig+0x10c>)
 800699e:	4293      	cmp	r3, r2
 80069a0:	d113      	bne.n	80069ca <TIM_OC3_SetConfig+0xd6>
 80069a2:	693b      	ldr	r3, [r7, #16]
 80069a4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80069a8:	613b      	str	r3, [r7, #16]
 80069aa:	693b      	ldr	r3, [r7, #16]
 80069ac:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 80069b0:	613b      	str	r3, [r7, #16]
 80069b2:	683b      	ldr	r3, [r7, #0]
 80069b4:	695b      	ldr	r3, [r3, #20]
 80069b6:	011b      	lsls	r3, r3, #4
 80069b8:	693a      	ldr	r2, [r7, #16]
 80069ba:	4313      	orrs	r3, r2
 80069bc:	613b      	str	r3, [r7, #16]
 80069be:	683b      	ldr	r3, [r7, #0]
 80069c0:	699b      	ldr	r3, [r3, #24]
 80069c2:	011b      	lsls	r3, r3, #4
 80069c4:	693a      	ldr	r2, [r7, #16]
 80069c6:	4313      	orrs	r3, r2
 80069c8:	613b      	str	r3, [r7, #16]
 80069ca:	687b      	ldr	r3, [r7, #4]
 80069cc:	693a      	ldr	r2, [r7, #16]
 80069ce:	605a      	str	r2, [r3, #4]
 80069d0:	687b      	ldr	r3, [r7, #4]
 80069d2:	68fa      	ldr	r2, [r7, #12]
 80069d4:	61da      	str	r2, [r3, #28]
 80069d6:	683b      	ldr	r3, [r7, #0]
 80069d8:	685a      	ldr	r2, [r3, #4]
 80069da:	687b      	ldr	r3, [r7, #4]
 80069dc:	63da      	str	r2, [r3, #60]	@ 0x3c
 80069de:	687b      	ldr	r3, [r7, #4]
 80069e0:	697a      	ldr	r2, [r7, #20]
 80069e2:	621a      	str	r2, [r3, #32]
 80069e4:	bf00      	nop
 80069e6:	371c      	adds	r7, #28
 80069e8:	46bd      	mov	sp, r7
 80069ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ee:	4770      	bx	lr
 80069f0:	40012c00 	.word	0x40012c00
 80069f4:	40013400 	.word	0x40013400
 80069f8:	40014000 	.word	0x40014000
 80069fc:	40014400 	.word	0x40014400
 8006a00:	40014800 	.word	0x40014800

08006a04 <TIM_OC4_SetConfig>:
 8006a04:	b480      	push	{r7}
 8006a06:	b087      	sub	sp, #28
 8006a08:	af00      	add	r7, sp, #0
 8006a0a:	6078      	str	r0, [r7, #4]
 8006a0c:	6039      	str	r1, [r7, #0]
 8006a0e:	687b      	ldr	r3, [r7, #4]
 8006a10:	6a1b      	ldr	r3, [r3, #32]
 8006a12:	613b      	str	r3, [r7, #16]
 8006a14:	687b      	ldr	r3, [r7, #4]
 8006a16:	6a1b      	ldr	r3, [r3, #32]
 8006a18:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006a1c:	687b      	ldr	r3, [r7, #4]
 8006a1e:	621a      	str	r2, [r3, #32]
 8006a20:	687b      	ldr	r3, [r7, #4]
 8006a22:	685b      	ldr	r3, [r3, #4]
 8006a24:	617b      	str	r3, [r7, #20]
 8006a26:	687b      	ldr	r3, [r7, #4]
 8006a28:	69db      	ldr	r3, [r3, #28]
 8006a2a:	60fb      	str	r3, [r7, #12]
 8006a2c:	68fb      	ldr	r3, [r7, #12]
 8006a2e:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006a32:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006a36:	60fb      	str	r3, [r7, #12]
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006a3e:	60fb      	str	r3, [r7, #12]
 8006a40:	683b      	ldr	r3, [r7, #0]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	021b      	lsls	r3, r3, #8
 8006a46:	68fa      	ldr	r2, [r7, #12]
 8006a48:	4313      	orrs	r3, r2
 8006a4a:	60fb      	str	r3, [r7, #12]
 8006a4c:	693b      	ldr	r3, [r7, #16]
 8006a4e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8006a52:	613b      	str	r3, [r7, #16]
 8006a54:	683b      	ldr	r3, [r7, #0]
 8006a56:	689b      	ldr	r3, [r3, #8]
 8006a58:	031b      	lsls	r3, r3, #12
 8006a5a:	693a      	ldr	r2, [r7, #16]
 8006a5c:	4313      	orrs	r3, r2
 8006a5e:	613b      	str	r3, [r7, #16]
 8006a60:	687b      	ldr	r3, [r7, #4]
 8006a62:	4a18      	ldr	r2, [pc, #96]	@ (8006ac4 <TIM_OC4_SetConfig+0xc0>)
 8006a64:	4293      	cmp	r3, r2
 8006a66:	d00f      	beq.n	8006a88 <TIM_OC4_SetConfig+0x84>
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	4a17      	ldr	r2, [pc, #92]	@ (8006ac8 <TIM_OC4_SetConfig+0xc4>)
 8006a6c:	4293      	cmp	r3, r2
 8006a6e:	d00b      	beq.n	8006a88 <TIM_OC4_SetConfig+0x84>
 8006a70:	687b      	ldr	r3, [r7, #4]
 8006a72:	4a16      	ldr	r2, [pc, #88]	@ (8006acc <TIM_OC4_SetConfig+0xc8>)
 8006a74:	4293      	cmp	r3, r2
 8006a76:	d007      	beq.n	8006a88 <TIM_OC4_SetConfig+0x84>
 8006a78:	687b      	ldr	r3, [r7, #4]
 8006a7a:	4a15      	ldr	r2, [pc, #84]	@ (8006ad0 <TIM_OC4_SetConfig+0xcc>)
 8006a7c:	4293      	cmp	r3, r2
 8006a7e:	d003      	beq.n	8006a88 <TIM_OC4_SetConfig+0x84>
 8006a80:	687b      	ldr	r3, [r7, #4]
 8006a82:	4a14      	ldr	r2, [pc, #80]	@ (8006ad4 <TIM_OC4_SetConfig+0xd0>)
 8006a84:	4293      	cmp	r3, r2
 8006a86:	d109      	bne.n	8006a9c <TIM_OC4_SetConfig+0x98>
 8006a88:	697b      	ldr	r3, [r7, #20]
 8006a8a:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8006a8e:	617b      	str	r3, [r7, #20]
 8006a90:	683b      	ldr	r3, [r7, #0]
 8006a92:	695b      	ldr	r3, [r3, #20]
 8006a94:	019b      	lsls	r3, r3, #6
 8006a96:	697a      	ldr	r2, [r7, #20]
 8006a98:	4313      	orrs	r3, r2
 8006a9a:	617b      	str	r3, [r7, #20]
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	697a      	ldr	r2, [r7, #20]
 8006aa0:	605a      	str	r2, [r3, #4]
 8006aa2:	687b      	ldr	r3, [r7, #4]
 8006aa4:	68fa      	ldr	r2, [r7, #12]
 8006aa6:	61da      	str	r2, [r3, #28]
 8006aa8:	683b      	ldr	r3, [r7, #0]
 8006aaa:	685a      	ldr	r2, [r3, #4]
 8006aac:	687b      	ldr	r3, [r7, #4]
 8006aae:	641a      	str	r2, [r3, #64]	@ 0x40
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	693a      	ldr	r2, [r7, #16]
 8006ab4:	621a      	str	r2, [r3, #32]
 8006ab6:	bf00      	nop
 8006ab8:	371c      	adds	r7, #28
 8006aba:	46bd      	mov	sp, r7
 8006abc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ac0:	4770      	bx	lr
 8006ac2:	bf00      	nop
 8006ac4:	40012c00 	.word	0x40012c00
 8006ac8:	40013400 	.word	0x40013400
 8006acc:	40014000 	.word	0x40014000
 8006ad0:	40014400 	.word	0x40014400
 8006ad4:	40014800 	.word	0x40014800

08006ad8 <TIM_OC5_SetConfig>:
 8006ad8:	b480      	push	{r7}
 8006ada:	b087      	sub	sp, #28
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	6078      	str	r0, [r7, #4]
 8006ae0:	6039      	str	r1, [r7, #0]
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	6a1b      	ldr	r3, [r3, #32]
 8006ae6:	613b      	str	r3, [r7, #16]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	6a1b      	ldr	r3, [r3, #32]
 8006aec:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	621a      	str	r2, [r3, #32]
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	685b      	ldr	r3, [r3, #4]
 8006af8:	617b      	str	r3, [r7, #20]
 8006afa:	687b      	ldr	r3, [r7, #4]
 8006afc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006afe:	60fb      	str	r3, [r7, #12]
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b06:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006b0a:	60fb      	str	r3, [r7, #12]
 8006b0c:	683b      	ldr	r3, [r7, #0]
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	68fa      	ldr	r2, [r7, #12]
 8006b12:	4313      	orrs	r3, r2
 8006b14:	60fb      	str	r3, [r7, #12]
 8006b16:	693b      	ldr	r3, [r7, #16]
 8006b18:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8006b1c:	613b      	str	r3, [r7, #16]
 8006b1e:	683b      	ldr	r3, [r7, #0]
 8006b20:	689b      	ldr	r3, [r3, #8]
 8006b22:	041b      	lsls	r3, r3, #16
 8006b24:	693a      	ldr	r2, [r7, #16]
 8006b26:	4313      	orrs	r3, r2
 8006b28:	613b      	str	r3, [r7, #16]
 8006b2a:	687b      	ldr	r3, [r7, #4]
 8006b2c:	4a17      	ldr	r2, [pc, #92]	@ (8006b8c <TIM_OC5_SetConfig+0xb4>)
 8006b2e:	4293      	cmp	r3, r2
 8006b30:	d00f      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	4a16      	ldr	r2, [pc, #88]	@ (8006b90 <TIM_OC5_SetConfig+0xb8>)
 8006b36:	4293      	cmp	r3, r2
 8006b38:	d00b      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b3a:	687b      	ldr	r3, [r7, #4]
 8006b3c:	4a15      	ldr	r2, [pc, #84]	@ (8006b94 <TIM_OC5_SetConfig+0xbc>)
 8006b3e:	4293      	cmp	r3, r2
 8006b40:	d007      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	4a14      	ldr	r2, [pc, #80]	@ (8006b98 <TIM_OC5_SetConfig+0xc0>)
 8006b46:	4293      	cmp	r3, r2
 8006b48:	d003      	beq.n	8006b52 <TIM_OC5_SetConfig+0x7a>
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	4a13      	ldr	r2, [pc, #76]	@ (8006b9c <TIM_OC5_SetConfig+0xc4>)
 8006b4e:	4293      	cmp	r3, r2
 8006b50:	d109      	bne.n	8006b66 <TIM_OC5_SetConfig+0x8e>
 8006b52:	697b      	ldr	r3, [r7, #20]
 8006b54:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b58:	617b      	str	r3, [r7, #20]
 8006b5a:	683b      	ldr	r3, [r7, #0]
 8006b5c:	695b      	ldr	r3, [r3, #20]
 8006b5e:	021b      	lsls	r3, r3, #8
 8006b60:	697a      	ldr	r2, [r7, #20]
 8006b62:	4313      	orrs	r3, r2
 8006b64:	617b      	str	r3, [r7, #20]
 8006b66:	687b      	ldr	r3, [r7, #4]
 8006b68:	697a      	ldr	r2, [r7, #20]
 8006b6a:	605a      	str	r2, [r3, #4]
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	68fa      	ldr	r2, [r7, #12]
 8006b70:	655a      	str	r2, [r3, #84]	@ 0x54
 8006b72:	683b      	ldr	r3, [r7, #0]
 8006b74:	685a      	ldr	r2, [r3, #4]
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	659a      	str	r2, [r3, #88]	@ 0x58
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	693a      	ldr	r2, [r7, #16]
 8006b7e:	621a      	str	r2, [r3, #32]
 8006b80:	bf00      	nop
 8006b82:	371c      	adds	r7, #28
 8006b84:	46bd      	mov	sp, r7
 8006b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006b8a:	4770      	bx	lr
 8006b8c:	40012c00 	.word	0x40012c00
 8006b90:	40013400 	.word	0x40013400
 8006b94:	40014000 	.word	0x40014000
 8006b98:	40014400 	.word	0x40014400
 8006b9c:	40014800 	.word	0x40014800

08006ba0 <TIM_OC6_SetConfig>:
 8006ba0:	b480      	push	{r7}
 8006ba2:	b087      	sub	sp, #28
 8006ba4:	af00      	add	r7, sp, #0
 8006ba6:	6078      	str	r0, [r7, #4]
 8006ba8:	6039      	str	r1, [r7, #0]
 8006baa:	687b      	ldr	r3, [r7, #4]
 8006bac:	6a1b      	ldr	r3, [r3, #32]
 8006bae:	613b      	str	r3, [r7, #16]
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	6a1b      	ldr	r3, [r3, #32]
 8006bb4:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	621a      	str	r2, [r3, #32]
 8006bbc:	687b      	ldr	r3, [r7, #4]
 8006bbe:	685b      	ldr	r3, [r3, #4]
 8006bc0:	617b      	str	r3, [r7, #20]
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006bc6:	60fb      	str	r3, [r7, #12]
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8006bce:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8006bd2:	60fb      	str	r3, [r7, #12]
 8006bd4:	683b      	ldr	r3, [r7, #0]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	021b      	lsls	r3, r3, #8
 8006bda:	68fa      	ldr	r2, [r7, #12]
 8006bdc:	4313      	orrs	r3, r2
 8006bde:	60fb      	str	r3, [r7, #12]
 8006be0:	693b      	ldr	r3, [r7, #16]
 8006be2:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8006be6:	613b      	str	r3, [r7, #16]
 8006be8:	683b      	ldr	r3, [r7, #0]
 8006bea:	689b      	ldr	r3, [r3, #8]
 8006bec:	051b      	lsls	r3, r3, #20
 8006bee:	693a      	ldr	r2, [r7, #16]
 8006bf0:	4313      	orrs	r3, r2
 8006bf2:	613b      	str	r3, [r7, #16]
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	4a18      	ldr	r2, [pc, #96]	@ (8006c58 <TIM_OC6_SetConfig+0xb8>)
 8006bf8:	4293      	cmp	r3, r2
 8006bfa:	d00f      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	4a17      	ldr	r2, [pc, #92]	@ (8006c5c <TIM_OC6_SetConfig+0xbc>)
 8006c00:	4293      	cmp	r3, r2
 8006c02:	d00b      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	4a16      	ldr	r2, [pc, #88]	@ (8006c60 <TIM_OC6_SetConfig+0xc0>)
 8006c08:	4293      	cmp	r3, r2
 8006c0a:	d007      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c0c:	687b      	ldr	r3, [r7, #4]
 8006c0e:	4a15      	ldr	r2, [pc, #84]	@ (8006c64 <TIM_OC6_SetConfig+0xc4>)
 8006c10:	4293      	cmp	r3, r2
 8006c12:	d003      	beq.n	8006c1c <TIM_OC6_SetConfig+0x7c>
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	4a14      	ldr	r2, [pc, #80]	@ (8006c68 <TIM_OC6_SetConfig+0xc8>)
 8006c18:	4293      	cmp	r3, r2
 8006c1a:	d109      	bne.n	8006c30 <TIM_OC6_SetConfig+0x90>
 8006c1c:	697b      	ldr	r3, [r7, #20]
 8006c1e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006c22:	617b      	str	r3, [r7, #20]
 8006c24:	683b      	ldr	r3, [r7, #0]
 8006c26:	695b      	ldr	r3, [r3, #20]
 8006c28:	029b      	lsls	r3, r3, #10
 8006c2a:	697a      	ldr	r2, [r7, #20]
 8006c2c:	4313      	orrs	r3, r2
 8006c2e:	617b      	str	r3, [r7, #20]
 8006c30:	687b      	ldr	r3, [r7, #4]
 8006c32:	697a      	ldr	r2, [r7, #20]
 8006c34:	605a      	str	r2, [r3, #4]
 8006c36:	687b      	ldr	r3, [r7, #4]
 8006c38:	68fa      	ldr	r2, [r7, #12]
 8006c3a:	655a      	str	r2, [r3, #84]	@ 0x54
 8006c3c:	683b      	ldr	r3, [r7, #0]
 8006c3e:	685a      	ldr	r2, [r3, #4]
 8006c40:	687b      	ldr	r3, [r7, #4]
 8006c42:	65da      	str	r2, [r3, #92]	@ 0x5c
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	693a      	ldr	r2, [r7, #16]
 8006c48:	621a      	str	r2, [r3, #32]
 8006c4a:	bf00      	nop
 8006c4c:	371c      	adds	r7, #28
 8006c4e:	46bd      	mov	sp, r7
 8006c50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c54:	4770      	bx	lr
 8006c56:	bf00      	nop
 8006c58:	40012c00 	.word	0x40012c00
 8006c5c:	40013400 	.word	0x40013400
 8006c60:	40014000 	.word	0x40014000
 8006c64:	40014400 	.word	0x40014400
 8006c68:	40014800 	.word	0x40014800

08006c6c <TIM_TI1_SetConfig>:
 8006c6c:	b480      	push	{r7}
 8006c6e:	b087      	sub	sp, #28
 8006c70:	af00      	add	r7, sp, #0
 8006c72:	60f8      	str	r0, [r7, #12]
 8006c74:	60b9      	str	r1, [r7, #8]
 8006c76:	607a      	str	r2, [r7, #4]
 8006c78:	603b      	str	r3, [r7, #0]
 8006c7a:	68fb      	ldr	r3, [r7, #12]
 8006c7c:	6a1b      	ldr	r3, [r3, #32]
 8006c7e:	613b      	str	r3, [r7, #16]
 8006c80:	68fb      	ldr	r3, [r7, #12]
 8006c82:	6a1b      	ldr	r3, [r3, #32]
 8006c84:	f023 0201 	bic.w	r2, r3, #1
 8006c88:	68fb      	ldr	r3, [r7, #12]
 8006c8a:	621a      	str	r2, [r3, #32]
 8006c8c:	68fb      	ldr	r3, [r7, #12]
 8006c8e:	699b      	ldr	r3, [r3, #24]
 8006c90:	617b      	str	r3, [r7, #20]
 8006c92:	68fb      	ldr	r3, [r7, #12]
 8006c94:	4a26      	ldr	r2, [pc, #152]	@ (8006d30 <TIM_TI1_SetConfig+0xc4>)
 8006c96:	4293      	cmp	r3, r2
 8006c98:	d017      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006c9a:	68fb      	ldr	r3, [r7, #12]
 8006c9c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006ca0:	d013      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006ca2:	68fb      	ldr	r3, [r7, #12]
 8006ca4:	4a23      	ldr	r2, [pc, #140]	@ (8006d34 <TIM_TI1_SetConfig+0xc8>)
 8006ca6:	4293      	cmp	r3, r2
 8006ca8:	d00f      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006caa:	68fb      	ldr	r3, [r7, #12]
 8006cac:	4a22      	ldr	r2, [pc, #136]	@ (8006d38 <TIM_TI1_SetConfig+0xcc>)
 8006cae:	4293      	cmp	r3, r2
 8006cb0:	d00b      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006cb2:	68fb      	ldr	r3, [r7, #12]
 8006cb4:	4a21      	ldr	r2, [pc, #132]	@ (8006d3c <TIM_TI1_SetConfig+0xd0>)
 8006cb6:	4293      	cmp	r3, r2
 8006cb8:	d007      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006cba:	68fb      	ldr	r3, [r7, #12]
 8006cbc:	4a20      	ldr	r2, [pc, #128]	@ (8006d40 <TIM_TI1_SetConfig+0xd4>)
 8006cbe:	4293      	cmp	r3, r2
 8006cc0:	d003      	beq.n	8006cca <TIM_TI1_SetConfig+0x5e>
 8006cc2:	68fb      	ldr	r3, [r7, #12]
 8006cc4:	4a1f      	ldr	r2, [pc, #124]	@ (8006d44 <TIM_TI1_SetConfig+0xd8>)
 8006cc6:	4293      	cmp	r3, r2
 8006cc8:	d101      	bne.n	8006cce <TIM_TI1_SetConfig+0x62>
 8006cca:	2301      	movs	r3, #1
 8006ccc:	e000      	b.n	8006cd0 <TIM_TI1_SetConfig+0x64>
 8006cce:	2300      	movs	r3, #0
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	d008      	beq.n	8006ce6 <TIM_TI1_SetConfig+0x7a>
 8006cd4:	697b      	ldr	r3, [r7, #20]
 8006cd6:	f023 0303 	bic.w	r3, r3, #3
 8006cda:	617b      	str	r3, [r7, #20]
 8006cdc:	697a      	ldr	r2, [r7, #20]
 8006cde:	687b      	ldr	r3, [r7, #4]
 8006ce0:	4313      	orrs	r3, r2
 8006ce2:	617b      	str	r3, [r7, #20]
 8006ce4:	e003      	b.n	8006cee <TIM_TI1_SetConfig+0x82>
 8006ce6:	697b      	ldr	r3, [r7, #20]
 8006ce8:	f043 0301 	orr.w	r3, r3, #1
 8006cec:	617b      	str	r3, [r7, #20]
 8006cee:	697b      	ldr	r3, [r7, #20]
 8006cf0:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006cf4:	617b      	str	r3, [r7, #20]
 8006cf6:	683b      	ldr	r3, [r7, #0]
 8006cf8:	011b      	lsls	r3, r3, #4
 8006cfa:	b2db      	uxtb	r3, r3
 8006cfc:	697a      	ldr	r2, [r7, #20]
 8006cfe:	4313      	orrs	r3, r2
 8006d00:	617b      	str	r3, [r7, #20]
 8006d02:	693b      	ldr	r3, [r7, #16]
 8006d04:	f023 030a 	bic.w	r3, r3, #10
 8006d08:	613b      	str	r3, [r7, #16]
 8006d0a:	68bb      	ldr	r3, [r7, #8]
 8006d0c:	f003 030a 	and.w	r3, r3, #10
 8006d10:	693a      	ldr	r2, [r7, #16]
 8006d12:	4313      	orrs	r3, r2
 8006d14:	613b      	str	r3, [r7, #16]
 8006d16:	68fb      	ldr	r3, [r7, #12]
 8006d18:	697a      	ldr	r2, [r7, #20]
 8006d1a:	619a      	str	r2, [r3, #24]
 8006d1c:	68fb      	ldr	r3, [r7, #12]
 8006d1e:	693a      	ldr	r2, [r7, #16]
 8006d20:	621a      	str	r2, [r3, #32]
 8006d22:	bf00      	nop
 8006d24:	371c      	adds	r7, #28
 8006d26:	46bd      	mov	sp, r7
 8006d28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d2c:	4770      	bx	lr
 8006d2e:	bf00      	nop
 8006d30:	40012c00 	.word	0x40012c00
 8006d34:	40000400 	.word	0x40000400
 8006d38:	40000800 	.word	0x40000800
 8006d3c:	40000c00 	.word	0x40000c00
 8006d40:	40013400 	.word	0x40013400
 8006d44:	40014000 	.word	0x40014000

08006d48 <TIM_TI1_ConfigInputStage>:
 8006d48:	b480      	push	{r7}
 8006d4a:	b087      	sub	sp, #28
 8006d4c:	af00      	add	r7, sp, #0
 8006d4e:	60f8      	str	r0, [r7, #12]
 8006d50:	60b9      	str	r1, [r7, #8]
 8006d52:	607a      	str	r2, [r7, #4]
 8006d54:	68fb      	ldr	r3, [r7, #12]
 8006d56:	6a1b      	ldr	r3, [r3, #32]
 8006d58:	617b      	str	r3, [r7, #20]
 8006d5a:	68fb      	ldr	r3, [r7, #12]
 8006d5c:	6a1b      	ldr	r3, [r3, #32]
 8006d5e:	f023 0201 	bic.w	r2, r3, #1
 8006d62:	68fb      	ldr	r3, [r7, #12]
 8006d64:	621a      	str	r2, [r3, #32]
 8006d66:	68fb      	ldr	r3, [r7, #12]
 8006d68:	699b      	ldr	r3, [r3, #24]
 8006d6a:	613b      	str	r3, [r7, #16]
 8006d6c:	693b      	ldr	r3, [r7, #16]
 8006d6e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006d72:	613b      	str	r3, [r7, #16]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	011b      	lsls	r3, r3, #4
 8006d78:	693a      	ldr	r2, [r7, #16]
 8006d7a:	4313      	orrs	r3, r2
 8006d7c:	613b      	str	r3, [r7, #16]
 8006d7e:	697b      	ldr	r3, [r7, #20]
 8006d80:	f023 030a 	bic.w	r3, r3, #10
 8006d84:	617b      	str	r3, [r7, #20]
 8006d86:	697a      	ldr	r2, [r7, #20]
 8006d88:	68bb      	ldr	r3, [r7, #8]
 8006d8a:	4313      	orrs	r3, r2
 8006d8c:	617b      	str	r3, [r7, #20]
 8006d8e:	68fb      	ldr	r3, [r7, #12]
 8006d90:	693a      	ldr	r2, [r7, #16]
 8006d92:	619a      	str	r2, [r3, #24]
 8006d94:	68fb      	ldr	r3, [r7, #12]
 8006d96:	697a      	ldr	r2, [r7, #20]
 8006d98:	621a      	str	r2, [r3, #32]
 8006d9a:	bf00      	nop
 8006d9c:	371c      	adds	r7, #28
 8006d9e:	46bd      	mov	sp, r7
 8006da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006da4:	4770      	bx	lr

08006da6 <TIM_TI2_SetConfig>:
 8006da6:	b480      	push	{r7}
 8006da8:	b087      	sub	sp, #28
 8006daa:	af00      	add	r7, sp, #0
 8006dac:	60f8      	str	r0, [r7, #12]
 8006dae:	60b9      	str	r1, [r7, #8]
 8006db0:	607a      	str	r2, [r7, #4]
 8006db2:	603b      	str	r3, [r7, #0]
 8006db4:	68fb      	ldr	r3, [r7, #12]
 8006db6:	6a1b      	ldr	r3, [r3, #32]
 8006db8:	617b      	str	r3, [r7, #20]
 8006dba:	68fb      	ldr	r3, [r7, #12]
 8006dbc:	6a1b      	ldr	r3, [r3, #32]
 8006dbe:	f023 0210 	bic.w	r2, r3, #16
 8006dc2:	68fb      	ldr	r3, [r7, #12]
 8006dc4:	621a      	str	r2, [r3, #32]
 8006dc6:	68fb      	ldr	r3, [r7, #12]
 8006dc8:	699b      	ldr	r3, [r3, #24]
 8006dca:	613b      	str	r3, [r7, #16]
 8006dcc:	693b      	ldr	r3, [r7, #16]
 8006dce:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006dd2:	613b      	str	r3, [r7, #16]
 8006dd4:	687b      	ldr	r3, [r7, #4]
 8006dd6:	021b      	lsls	r3, r3, #8
 8006dd8:	693a      	ldr	r2, [r7, #16]
 8006dda:	4313      	orrs	r3, r2
 8006ddc:	613b      	str	r3, [r7, #16]
 8006dde:	693b      	ldr	r3, [r7, #16]
 8006de0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006de4:	613b      	str	r3, [r7, #16]
 8006de6:	683b      	ldr	r3, [r7, #0]
 8006de8:	031b      	lsls	r3, r3, #12
 8006dea:	b29b      	uxth	r3, r3
 8006dec:	693a      	ldr	r2, [r7, #16]
 8006dee:	4313      	orrs	r3, r2
 8006df0:	613b      	str	r3, [r7, #16]
 8006df2:	697b      	ldr	r3, [r7, #20]
 8006df4:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006df8:	617b      	str	r3, [r7, #20]
 8006dfa:	68bb      	ldr	r3, [r7, #8]
 8006dfc:	011b      	lsls	r3, r3, #4
 8006dfe:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 8006e02:	697a      	ldr	r2, [r7, #20]
 8006e04:	4313      	orrs	r3, r2
 8006e06:	617b      	str	r3, [r7, #20]
 8006e08:	68fb      	ldr	r3, [r7, #12]
 8006e0a:	693a      	ldr	r2, [r7, #16]
 8006e0c:	619a      	str	r2, [r3, #24]
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	697a      	ldr	r2, [r7, #20]
 8006e12:	621a      	str	r2, [r3, #32]
 8006e14:	bf00      	nop
 8006e16:	371c      	adds	r7, #28
 8006e18:	46bd      	mov	sp, r7
 8006e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e1e:	4770      	bx	lr

08006e20 <TIM_TI2_ConfigInputStage>:
 8006e20:	b480      	push	{r7}
 8006e22:	b087      	sub	sp, #28
 8006e24:	af00      	add	r7, sp, #0
 8006e26:	60f8      	str	r0, [r7, #12]
 8006e28:	60b9      	str	r1, [r7, #8]
 8006e2a:	607a      	str	r2, [r7, #4]
 8006e2c:	68fb      	ldr	r3, [r7, #12]
 8006e2e:	6a1b      	ldr	r3, [r3, #32]
 8006e30:	617b      	str	r3, [r7, #20]
 8006e32:	68fb      	ldr	r3, [r7, #12]
 8006e34:	6a1b      	ldr	r3, [r3, #32]
 8006e36:	f023 0210 	bic.w	r2, r3, #16
 8006e3a:	68fb      	ldr	r3, [r7, #12]
 8006e3c:	621a      	str	r2, [r3, #32]
 8006e3e:	68fb      	ldr	r3, [r7, #12]
 8006e40:	699b      	ldr	r3, [r3, #24]
 8006e42:	613b      	str	r3, [r7, #16]
 8006e44:	693b      	ldr	r3, [r7, #16]
 8006e46:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006e4a:	613b      	str	r3, [r7, #16]
 8006e4c:	687b      	ldr	r3, [r7, #4]
 8006e4e:	031b      	lsls	r3, r3, #12
 8006e50:	693a      	ldr	r2, [r7, #16]
 8006e52:	4313      	orrs	r3, r2
 8006e54:	613b      	str	r3, [r7, #16]
 8006e56:	697b      	ldr	r3, [r7, #20]
 8006e58:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8006e5c:	617b      	str	r3, [r7, #20]
 8006e5e:	68bb      	ldr	r3, [r7, #8]
 8006e60:	011b      	lsls	r3, r3, #4
 8006e62:	697a      	ldr	r2, [r7, #20]
 8006e64:	4313      	orrs	r3, r2
 8006e66:	617b      	str	r3, [r7, #20]
 8006e68:	68fb      	ldr	r3, [r7, #12]
 8006e6a:	693a      	ldr	r2, [r7, #16]
 8006e6c:	619a      	str	r2, [r3, #24]
 8006e6e:	68fb      	ldr	r3, [r7, #12]
 8006e70:	697a      	ldr	r2, [r7, #20]
 8006e72:	621a      	str	r2, [r3, #32]
 8006e74:	bf00      	nop
 8006e76:	371c      	adds	r7, #28
 8006e78:	46bd      	mov	sp, r7
 8006e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e7e:	4770      	bx	lr

08006e80 <TIM_TI3_SetConfig>:
 8006e80:	b480      	push	{r7}
 8006e82:	b087      	sub	sp, #28
 8006e84:	af00      	add	r7, sp, #0
 8006e86:	60f8      	str	r0, [r7, #12]
 8006e88:	60b9      	str	r1, [r7, #8]
 8006e8a:	607a      	str	r2, [r7, #4]
 8006e8c:	603b      	str	r3, [r7, #0]
 8006e8e:	68fb      	ldr	r3, [r7, #12]
 8006e90:	6a1b      	ldr	r3, [r3, #32]
 8006e92:	617b      	str	r3, [r7, #20]
 8006e94:	68fb      	ldr	r3, [r7, #12]
 8006e96:	6a1b      	ldr	r3, [r3, #32]
 8006e98:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8006e9c:	68fb      	ldr	r3, [r7, #12]
 8006e9e:	621a      	str	r2, [r3, #32]
 8006ea0:	68fb      	ldr	r3, [r7, #12]
 8006ea2:	69db      	ldr	r3, [r3, #28]
 8006ea4:	613b      	str	r3, [r7, #16]
 8006ea6:	693b      	ldr	r3, [r7, #16]
 8006ea8:	f023 0303 	bic.w	r3, r3, #3
 8006eac:	613b      	str	r3, [r7, #16]
 8006eae:	693a      	ldr	r2, [r7, #16]
 8006eb0:	687b      	ldr	r3, [r7, #4]
 8006eb2:	4313      	orrs	r3, r2
 8006eb4:	613b      	str	r3, [r7, #16]
 8006eb6:	693b      	ldr	r3, [r7, #16]
 8006eb8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8006ebc:	613b      	str	r3, [r7, #16]
 8006ebe:	683b      	ldr	r3, [r7, #0]
 8006ec0:	011b      	lsls	r3, r3, #4
 8006ec2:	b2db      	uxtb	r3, r3
 8006ec4:	693a      	ldr	r2, [r7, #16]
 8006ec6:	4313      	orrs	r3, r2
 8006ec8:	613b      	str	r3, [r7, #16]
 8006eca:	697b      	ldr	r3, [r7, #20]
 8006ecc:	f423 6320 	bic.w	r3, r3, #2560	@ 0xa00
 8006ed0:	617b      	str	r3, [r7, #20]
 8006ed2:	68bb      	ldr	r3, [r7, #8]
 8006ed4:	021b      	lsls	r3, r3, #8
 8006ed6:	f403 6320 	and.w	r3, r3, #2560	@ 0xa00
 8006eda:	697a      	ldr	r2, [r7, #20]
 8006edc:	4313      	orrs	r3, r2
 8006ede:	617b      	str	r3, [r7, #20]
 8006ee0:	68fb      	ldr	r3, [r7, #12]
 8006ee2:	693a      	ldr	r2, [r7, #16]
 8006ee4:	61da      	str	r2, [r3, #28]
 8006ee6:	68fb      	ldr	r3, [r7, #12]
 8006ee8:	697a      	ldr	r2, [r7, #20]
 8006eea:	621a      	str	r2, [r3, #32]
 8006eec:	bf00      	nop
 8006eee:	371c      	adds	r7, #28
 8006ef0:	46bd      	mov	sp, r7
 8006ef2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef6:	4770      	bx	lr

08006ef8 <TIM_TI4_SetConfig>:
 8006ef8:	b480      	push	{r7}
 8006efa:	b087      	sub	sp, #28
 8006efc:	af00      	add	r7, sp, #0
 8006efe:	60f8      	str	r0, [r7, #12]
 8006f00:	60b9      	str	r1, [r7, #8]
 8006f02:	607a      	str	r2, [r7, #4]
 8006f04:	603b      	str	r3, [r7, #0]
 8006f06:	68fb      	ldr	r3, [r7, #12]
 8006f08:	6a1b      	ldr	r3, [r3, #32]
 8006f0a:	617b      	str	r3, [r7, #20]
 8006f0c:	68fb      	ldr	r3, [r7, #12]
 8006f0e:	6a1b      	ldr	r3, [r3, #32]
 8006f10:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006f14:	68fb      	ldr	r3, [r7, #12]
 8006f16:	621a      	str	r2, [r3, #32]
 8006f18:	68fb      	ldr	r3, [r7, #12]
 8006f1a:	69db      	ldr	r3, [r3, #28]
 8006f1c:	613b      	str	r3, [r7, #16]
 8006f1e:	693b      	ldr	r3, [r7, #16]
 8006f20:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006f24:	613b      	str	r3, [r7, #16]
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	021b      	lsls	r3, r3, #8
 8006f2a:	693a      	ldr	r2, [r7, #16]
 8006f2c:	4313      	orrs	r3, r2
 8006f2e:	613b      	str	r3, [r7, #16]
 8006f30:	693b      	ldr	r3, [r7, #16]
 8006f32:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006f36:	613b      	str	r3, [r7, #16]
 8006f38:	683b      	ldr	r3, [r7, #0]
 8006f3a:	031b      	lsls	r3, r3, #12
 8006f3c:	b29b      	uxth	r3, r3
 8006f3e:	693a      	ldr	r2, [r7, #16]
 8006f40:	4313      	orrs	r3, r2
 8006f42:	613b      	str	r3, [r7, #16]
 8006f44:	697b      	ldr	r3, [r7, #20]
 8006f46:	f423 4320 	bic.w	r3, r3, #40960	@ 0xa000
 8006f4a:	617b      	str	r3, [r7, #20]
 8006f4c:	68bb      	ldr	r3, [r7, #8]
 8006f4e:	031b      	lsls	r3, r3, #12
 8006f50:	f403 4320 	and.w	r3, r3, #40960	@ 0xa000
 8006f54:	697a      	ldr	r2, [r7, #20]
 8006f56:	4313      	orrs	r3, r2
 8006f58:	617b      	str	r3, [r7, #20]
 8006f5a:	68fb      	ldr	r3, [r7, #12]
 8006f5c:	693a      	ldr	r2, [r7, #16]
 8006f5e:	61da      	str	r2, [r3, #28]
 8006f60:	68fb      	ldr	r3, [r7, #12]
 8006f62:	697a      	ldr	r2, [r7, #20]
 8006f64:	621a      	str	r2, [r3, #32]
 8006f66:	bf00      	nop
 8006f68:	371c      	adds	r7, #28
 8006f6a:	46bd      	mov	sp, r7
 8006f6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f70:	4770      	bx	lr

08006f72 <TIM_ITRx_SetConfig>:
 8006f72:	b480      	push	{r7}
 8006f74:	b085      	sub	sp, #20
 8006f76:	af00      	add	r7, sp, #0
 8006f78:	6078      	str	r0, [r7, #4]
 8006f7a:	6039      	str	r1, [r7, #0]
 8006f7c:	687b      	ldr	r3, [r7, #4]
 8006f7e:	689b      	ldr	r3, [r3, #8]
 8006f80:	60fb      	str	r3, [r7, #12]
 8006f82:	68fb      	ldr	r3, [r7, #12]
 8006f84:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006f88:	60fb      	str	r3, [r7, #12]
 8006f8a:	683a      	ldr	r2, [r7, #0]
 8006f8c:	68fb      	ldr	r3, [r7, #12]
 8006f8e:	4313      	orrs	r3, r2
 8006f90:	f043 0307 	orr.w	r3, r3, #7
 8006f94:	60fb      	str	r3, [r7, #12]
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	68fa      	ldr	r2, [r7, #12]
 8006f9a:	609a      	str	r2, [r3, #8]
 8006f9c:	bf00      	nop
 8006f9e:	3714      	adds	r7, #20
 8006fa0:	46bd      	mov	sp, r7
 8006fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fa6:	4770      	bx	lr

08006fa8 <TIM_ETR_SetConfig>:
 8006fa8:	b480      	push	{r7}
 8006faa:	b087      	sub	sp, #28
 8006fac:	af00      	add	r7, sp, #0
 8006fae:	60f8      	str	r0, [r7, #12]
 8006fb0:	60b9      	str	r1, [r7, #8]
 8006fb2:	607a      	str	r2, [r7, #4]
 8006fb4:	603b      	str	r3, [r7, #0]
 8006fb6:	68fb      	ldr	r3, [r7, #12]
 8006fb8:	689b      	ldr	r3, [r3, #8]
 8006fba:	617b      	str	r3, [r7, #20]
 8006fbc:	697b      	ldr	r3, [r7, #20]
 8006fbe:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8006fc2:	617b      	str	r3, [r7, #20]
 8006fc4:	683b      	ldr	r3, [r7, #0]
 8006fc6:	021a      	lsls	r2, r3, #8
 8006fc8:	687b      	ldr	r3, [r7, #4]
 8006fca:	431a      	orrs	r2, r3
 8006fcc:	68bb      	ldr	r3, [r7, #8]
 8006fce:	4313      	orrs	r3, r2
 8006fd0:	697a      	ldr	r2, [r7, #20]
 8006fd2:	4313      	orrs	r3, r2
 8006fd4:	617b      	str	r3, [r7, #20]
 8006fd6:	68fb      	ldr	r3, [r7, #12]
 8006fd8:	697a      	ldr	r2, [r7, #20]
 8006fda:	609a      	str	r2, [r3, #8]
 8006fdc:	bf00      	nop
 8006fde:	371c      	adds	r7, #28
 8006fe0:	46bd      	mov	sp, r7
 8006fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fe6:	4770      	bx	lr

08006fe8 <TIM_CCxChannelCmd>:
 8006fe8:	b480      	push	{r7}
 8006fea:	b087      	sub	sp, #28
 8006fec:	af00      	add	r7, sp, #0
 8006fee:	60f8      	str	r0, [r7, #12]
 8006ff0:	60b9      	str	r1, [r7, #8]
 8006ff2:	607a      	str	r2, [r7, #4]
 8006ff4:	68bb      	ldr	r3, [r7, #8]
 8006ff6:	f003 031f 	and.w	r3, r3, #31
 8006ffa:	2201      	movs	r2, #1
 8006ffc:	fa02 f303 	lsl.w	r3, r2, r3
 8007000:	617b      	str	r3, [r7, #20]
 8007002:	68fb      	ldr	r3, [r7, #12]
 8007004:	6a1a      	ldr	r2, [r3, #32]
 8007006:	697b      	ldr	r3, [r7, #20]
 8007008:	43db      	mvns	r3, r3
 800700a:	401a      	ands	r2, r3
 800700c:	68fb      	ldr	r3, [r7, #12]
 800700e:	621a      	str	r2, [r3, #32]
 8007010:	68fb      	ldr	r3, [r7, #12]
 8007012:	6a1a      	ldr	r2, [r3, #32]
 8007014:	68bb      	ldr	r3, [r7, #8]
 8007016:	f003 031f 	and.w	r3, r3, #31
 800701a:	6879      	ldr	r1, [r7, #4]
 800701c:	fa01 f303 	lsl.w	r3, r1, r3
 8007020:	431a      	orrs	r2, r3
 8007022:	68fb      	ldr	r3, [r7, #12]
 8007024:	621a      	str	r2, [r3, #32]
 8007026:	bf00      	nop
 8007028:	371c      	adds	r7, #28
 800702a:	46bd      	mov	sp, r7
 800702c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007030:	4770      	bx	lr
	...

08007034 <HAL_TIMEx_MasterConfigSynchronization>:
 8007034:	b480      	push	{r7}
 8007036:	b085      	sub	sp, #20
 8007038:	af00      	add	r7, sp, #0
 800703a:	6078      	str	r0, [r7, #4]
 800703c:	6039      	str	r1, [r7, #0]
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007044:	2b01      	cmp	r3, #1
 8007046:	d101      	bne.n	800704c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007048:	2302      	movs	r3, #2
 800704a:	e068      	b.n	800711e <HAL_TIMEx_MasterConfigSynchronization+0xea>
 800704c:	687b      	ldr	r3, [r7, #4]
 800704e:	2201      	movs	r2, #1
 8007050:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	2202      	movs	r2, #2
 8007058:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800705c:	687b      	ldr	r3, [r7, #4]
 800705e:	681b      	ldr	r3, [r3, #0]
 8007060:	685b      	ldr	r3, [r3, #4]
 8007062:	60fb      	str	r3, [r7, #12]
 8007064:	687b      	ldr	r3, [r7, #4]
 8007066:	681b      	ldr	r3, [r3, #0]
 8007068:	689b      	ldr	r3, [r3, #8]
 800706a:	60bb      	str	r3, [r7, #8]
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	681b      	ldr	r3, [r3, #0]
 8007070:	4a2e      	ldr	r2, [pc, #184]	@ (800712c <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 8007072:	4293      	cmp	r3, r2
 8007074:	d004      	beq.n	8007080 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8007076:	687b      	ldr	r3, [r7, #4]
 8007078:	681b      	ldr	r3, [r3, #0]
 800707a:	4a2d      	ldr	r2, [pc, #180]	@ (8007130 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800707c:	4293      	cmp	r3, r2
 800707e:	d108      	bne.n	8007092 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8007080:	68fb      	ldr	r3, [r7, #12]
 8007082:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8007086:	60fb      	str	r3, [r7, #12]
 8007088:	683b      	ldr	r3, [r7, #0]
 800708a:	685b      	ldr	r3, [r3, #4]
 800708c:	68fa      	ldr	r2, [r7, #12]
 800708e:	4313      	orrs	r3, r2
 8007090:	60fb      	str	r3, [r7, #12]
 8007092:	68fb      	ldr	r3, [r7, #12]
 8007094:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007098:	60fb      	str	r3, [r7, #12]
 800709a:	683b      	ldr	r3, [r7, #0]
 800709c:	681b      	ldr	r3, [r3, #0]
 800709e:	68fa      	ldr	r2, [r7, #12]
 80070a0:	4313      	orrs	r3, r2
 80070a2:	60fb      	str	r3, [r7, #12]
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	68fa      	ldr	r2, [r7, #12]
 80070aa:	605a      	str	r2, [r3, #4]
 80070ac:	687b      	ldr	r3, [r7, #4]
 80070ae:	681b      	ldr	r3, [r3, #0]
 80070b0:	4a1e      	ldr	r2, [pc, #120]	@ (800712c <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 80070b2:	4293      	cmp	r3, r2
 80070b4:	d01d      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	681b      	ldr	r3, [r3, #0]
 80070ba:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070be:	d018      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070c0:	687b      	ldr	r3, [r7, #4]
 80070c2:	681b      	ldr	r3, [r3, #0]
 80070c4:	4a1b      	ldr	r2, [pc, #108]	@ (8007134 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 80070c6:	4293      	cmp	r3, r2
 80070c8:	d013      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070ca:	687b      	ldr	r3, [r7, #4]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	4a1a      	ldr	r2, [pc, #104]	@ (8007138 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 80070d0:	4293      	cmp	r3, r2
 80070d2:	d00e      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070d4:	687b      	ldr	r3, [r7, #4]
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	4a18      	ldr	r2, [pc, #96]	@ (800713c <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 80070da:	4293      	cmp	r3, r2
 80070dc:	d009      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	4a13      	ldr	r2, [pc, #76]	@ (8007130 <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 80070e4:	4293      	cmp	r3, r2
 80070e6:	d004      	beq.n	80070f2 <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 80070e8:	687b      	ldr	r3, [r7, #4]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	4a14      	ldr	r2, [pc, #80]	@ (8007140 <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 80070ee:	4293      	cmp	r3, r2
 80070f0:	d10c      	bne.n	800710c <HAL_TIMEx_MasterConfigSynchronization+0xd8>
 80070f2:	68bb      	ldr	r3, [r7, #8]
 80070f4:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80070f8:	60bb      	str	r3, [r7, #8]
 80070fa:	683b      	ldr	r3, [r7, #0]
 80070fc:	689b      	ldr	r3, [r3, #8]
 80070fe:	68ba      	ldr	r2, [r7, #8]
 8007100:	4313      	orrs	r3, r2
 8007102:	60bb      	str	r3, [r7, #8]
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	68ba      	ldr	r2, [r7, #8]
 800710a:	609a      	str	r2, [r3, #8]
 800710c:	687b      	ldr	r3, [r7, #4]
 800710e:	2201      	movs	r2, #1
 8007110:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007114:	687b      	ldr	r3, [r7, #4]
 8007116:	2200      	movs	r2, #0
 8007118:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800711c:	2300      	movs	r3, #0
 800711e:	4618      	mov	r0, r3
 8007120:	3714      	adds	r7, #20
 8007122:	46bd      	mov	sp, r7
 8007124:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007128:	4770      	bx	lr
 800712a:	bf00      	nop
 800712c:	40012c00 	.word	0x40012c00
 8007130:	40013400 	.word	0x40013400
 8007134:	40000400 	.word	0x40000400
 8007138:	40000800 	.word	0x40000800
 800713c:	40000c00 	.word	0x40000c00
 8007140:	40014000 	.word	0x40014000

08007144 <HAL_TIMEx_ConfigBreakDeadTime>:
 8007144:	b480      	push	{r7}
 8007146:	b085      	sub	sp, #20
 8007148:	af00      	add	r7, sp, #0
 800714a:	6078      	str	r0, [r7, #4]
 800714c:	6039      	str	r1, [r7, #0]
 800714e:	2300      	movs	r3, #0
 8007150:	60fb      	str	r3, [r7, #12]
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007158:	2b01      	cmp	r3, #1
 800715a:	d101      	bne.n	8007160 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800715c:	2302      	movs	r3, #2
 800715e:	e065      	b.n	800722c <HAL_TIMEx_ConfigBreakDeadTime+0xe8>
 8007160:	687b      	ldr	r3, [r7, #4]
 8007162:	2201      	movs	r2, #1
 8007164:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8007168:	68fb      	ldr	r3, [r7, #12]
 800716a:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 800716e:	683b      	ldr	r3, [r7, #0]
 8007170:	68db      	ldr	r3, [r3, #12]
 8007172:	4313      	orrs	r3, r2
 8007174:	60fb      	str	r3, [r7, #12]
 8007176:	68fb      	ldr	r3, [r7, #12]
 8007178:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 800717c:	683b      	ldr	r3, [r7, #0]
 800717e:	689b      	ldr	r3, [r3, #8]
 8007180:	4313      	orrs	r3, r2
 8007182:	60fb      	str	r3, [r7, #12]
 8007184:	68fb      	ldr	r3, [r7, #12]
 8007186:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800718a:	683b      	ldr	r3, [r7, #0]
 800718c:	685b      	ldr	r3, [r3, #4]
 800718e:	4313      	orrs	r3, r2
 8007190:	60fb      	str	r3, [r7, #12]
 8007192:	68fb      	ldr	r3, [r7, #12]
 8007194:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8007198:	683b      	ldr	r3, [r7, #0]
 800719a:	681b      	ldr	r3, [r3, #0]
 800719c:	4313      	orrs	r3, r2
 800719e:	60fb      	str	r3, [r7, #12]
 80071a0:	68fb      	ldr	r3, [r7, #12]
 80071a2:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 80071a6:	683b      	ldr	r3, [r7, #0]
 80071a8:	691b      	ldr	r3, [r3, #16]
 80071aa:	4313      	orrs	r3, r2
 80071ac:	60fb      	str	r3, [r7, #12]
 80071ae:	68fb      	ldr	r3, [r7, #12]
 80071b0:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80071b4:	683b      	ldr	r3, [r7, #0]
 80071b6:	695b      	ldr	r3, [r3, #20]
 80071b8:	4313      	orrs	r3, r2
 80071ba:	60fb      	str	r3, [r7, #12]
 80071bc:	68fb      	ldr	r3, [r7, #12]
 80071be:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80071c2:	683b      	ldr	r3, [r7, #0]
 80071c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80071c6:	4313      	orrs	r3, r2
 80071c8:	60fb      	str	r3, [r7, #12]
 80071ca:	68fb      	ldr	r3, [r7, #12]
 80071cc:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 80071d0:	683b      	ldr	r3, [r7, #0]
 80071d2:	699b      	ldr	r3, [r3, #24]
 80071d4:	041b      	lsls	r3, r3, #16
 80071d6:	4313      	orrs	r3, r2
 80071d8:	60fb      	str	r3, [r7, #12]
 80071da:	687b      	ldr	r3, [r7, #4]
 80071dc:	681b      	ldr	r3, [r3, #0]
 80071de:	4a16      	ldr	r2, [pc, #88]	@ (8007238 <HAL_TIMEx_ConfigBreakDeadTime+0xf4>)
 80071e0:	4293      	cmp	r3, r2
 80071e2:	d004      	beq.n	80071ee <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 80071e4:	687b      	ldr	r3, [r7, #4]
 80071e6:	681b      	ldr	r3, [r3, #0]
 80071e8:	4a14      	ldr	r2, [pc, #80]	@ (800723c <HAL_TIMEx_ConfigBreakDeadTime+0xf8>)
 80071ea:	4293      	cmp	r3, r2
 80071ec:	d115      	bne.n	800721a <HAL_TIMEx_ConfigBreakDeadTime+0xd6>
 80071ee:	68fb      	ldr	r3, [r7, #12]
 80071f0:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 80071f4:	683b      	ldr	r3, [r7, #0]
 80071f6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80071f8:	051b      	lsls	r3, r3, #20
 80071fa:	4313      	orrs	r3, r2
 80071fc:	60fb      	str	r3, [r7, #12]
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8007204:	683b      	ldr	r3, [r7, #0]
 8007206:	69db      	ldr	r3, [r3, #28]
 8007208:	4313      	orrs	r3, r2
 800720a:	60fb      	str	r3, [r7, #12]
 800720c:	68fb      	ldr	r3, [r7, #12]
 800720e:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8007212:	683b      	ldr	r3, [r7, #0]
 8007214:	6a1b      	ldr	r3, [r3, #32]
 8007216:	4313      	orrs	r3, r2
 8007218:	60fb      	str	r3, [r7, #12]
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	681b      	ldr	r3, [r3, #0]
 800721e:	68fa      	ldr	r2, [r7, #12]
 8007220:	645a      	str	r2, [r3, #68]	@ 0x44
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	2200      	movs	r2, #0
 8007226:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800722a:	2300      	movs	r3, #0
 800722c:	4618      	mov	r0, r3
 800722e:	3714      	adds	r7, #20
 8007230:	46bd      	mov	sp, r7
 8007232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007236:	4770      	bx	lr
 8007238:	40012c00 	.word	0x40012c00
 800723c:	40013400 	.word	0x40013400

08007240 <HAL_TIMEx_CommutCallback>:
 8007240:	b480      	push	{r7}
 8007242:	b083      	sub	sp, #12
 8007244:	af00      	add	r7, sp, #0
 8007246:	6078      	str	r0, [r7, #4]
 8007248:	bf00      	nop
 800724a:	370c      	adds	r7, #12
 800724c:	46bd      	mov	sp, r7
 800724e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007252:	4770      	bx	lr

08007254 <HAL_TIMEx_BreakCallback>:
 8007254:	b480      	push	{r7}
 8007256:	b083      	sub	sp, #12
 8007258:	af00      	add	r7, sp, #0
 800725a:	6078      	str	r0, [r7, #4]
 800725c:	bf00      	nop
 800725e:	370c      	adds	r7, #12
 8007260:	46bd      	mov	sp, r7
 8007262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007266:	4770      	bx	lr

08007268 <HAL_TIMEx_Break2Callback>:
 8007268:	b480      	push	{r7}
 800726a:	b083      	sub	sp, #12
 800726c:	af00      	add	r7, sp, #0
 800726e:	6078      	str	r0, [r7, #4]
 8007270:	bf00      	nop
 8007272:	370c      	adds	r7, #12
 8007274:	46bd      	mov	sp, r7
 8007276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800727a:	4770      	bx	lr

0800727c <HAL_UART_Init>:
 800727c:	b580      	push	{r7, lr}
 800727e:	b082      	sub	sp, #8
 8007280:	af00      	add	r7, sp, #0
 8007282:	6078      	str	r0, [r7, #4]
 8007284:	687b      	ldr	r3, [r7, #4]
 8007286:	2b00      	cmp	r3, #0
 8007288:	d101      	bne.n	800728e <HAL_UART_Init+0x12>
 800728a:	2301      	movs	r3, #1
 800728c:	e040      	b.n	8007310 <HAL_UART_Init+0x94>
 800728e:	687b      	ldr	r3, [r7, #4]
 8007290:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8007292:	2b00      	cmp	r3, #0
 8007294:	d106      	bne.n	80072a4 <HAL_UART_Init+0x28>
 8007296:	687b      	ldr	r3, [r7, #4]
 8007298:	2200      	movs	r2, #0
 800729a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800729e:	6878      	ldr	r0, [r7, #4]
 80072a0:	f7fa fe54 	bl	8001f4c <HAL_UART_MspInit>
 80072a4:	687b      	ldr	r3, [r7, #4]
 80072a6:	2224      	movs	r2, #36	@ 0x24
 80072a8:	67da      	str	r2, [r3, #124]	@ 0x7c
 80072aa:	687b      	ldr	r3, [r7, #4]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	681a      	ldr	r2, [r3, #0]
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	681b      	ldr	r3, [r3, #0]
 80072b4:	f022 0201 	bic.w	r2, r2, #1
 80072b8:	601a      	str	r2, [r3, #0]
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80072be:	2b00      	cmp	r3, #0
 80072c0:	d002      	beq.n	80072c8 <HAL_UART_Init+0x4c>
 80072c2:	6878      	ldr	r0, [r7, #4]
 80072c4:	f000 fae0 	bl	8007888 <UART_AdvFeatureConfig>
 80072c8:	6878      	ldr	r0, [r7, #4]
 80072ca:	f000 f825 	bl	8007318 <UART_SetConfig>
 80072ce:	4603      	mov	r3, r0
 80072d0:	2b01      	cmp	r3, #1
 80072d2:	d101      	bne.n	80072d8 <HAL_UART_Init+0x5c>
 80072d4:	2301      	movs	r3, #1
 80072d6:	e01b      	b.n	8007310 <HAL_UART_Init+0x94>
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	681b      	ldr	r3, [r3, #0]
 80072dc:	685a      	ldr	r2, [r3, #4]
 80072de:	687b      	ldr	r3, [r7, #4]
 80072e0:	681b      	ldr	r3, [r3, #0]
 80072e2:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80072e6:	605a      	str	r2, [r3, #4]
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	689a      	ldr	r2, [r3, #8]
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80072f6:	609a      	str	r2, [r3, #8]
 80072f8:	687b      	ldr	r3, [r7, #4]
 80072fa:	681b      	ldr	r3, [r3, #0]
 80072fc:	681a      	ldr	r2, [r3, #0]
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	f042 0201 	orr.w	r2, r2, #1
 8007306:	601a      	str	r2, [r3, #0]
 8007308:	6878      	ldr	r0, [r7, #4]
 800730a:	f000 fb5f 	bl	80079cc <UART_CheckIdleState>
 800730e:	4603      	mov	r3, r0
 8007310:	4618      	mov	r0, r3
 8007312:	3708      	adds	r7, #8
 8007314:	46bd      	mov	sp, r7
 8007316:	bd80      	pop	{r7, pc}

08007318 <UART_SetConfig>:
 8007318:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800731c:	b08a      	sub	sp, #40	@ 0x28
 800731e:	af00      	add	r7, sp, #0
 8007320:	60f8      	str	r0, [r7, #12]
 8007322:	2300      	movs	r3, #0
 8007324:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007328:	68fb      	ldr	r3, [r7, #12]
 800732a:	689a      	ldr	r2, [r3, #8]
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	691b      	ldr	r3, [r3, #16]
 8007330:	431a      	orrs	r2, r3
 8007332:	68fb      	ldr	r3, [r7, #12]
 8007334:	695b      	ldr	r3, [r3, #20]
 8007336:	431a      	orrs	r2, r3
 8007338:	68fb      	ldr	r3, [r7, #12]
 800733a:	69db      	ldr	r3, [r3, #28]
 800733c:	4313      	orrs	r3, r2
 800733e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007340:	68fb      	ldr	r3, [r7, #12]
 8007342:	681b      	ldr	r3, [r3, #0]
 8007344:	681a      	ldr	r2, [r3, #0]
 8007346:	4ba4      	ldr	r3, [pc, #656]	@ (80075d8 <UART_SetConfig+0x2c0>)
 8007348:	4013      	ands	r3, r2
 800734a:	68fa      	ldr	r2, [r7, #12]
 800734c:	6812      	ldr	r2, [r2, #0]
 800734e:	6a79      	ldr	r1, [r7, #36]	@ 0x24
 8007350:	430b      	orrs	r3, r1
 8007352:	6013      	str	r3, [r2, #0]
 8007354:	68fb      	ldr	r3, [r7, #12]
 8007356:	681b      	ldr	r3, [r3, #0]
 8007358:	685b      	ldr	r3, [r3, #4]
 800735a:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800735e:	68fb      	ldr	r3, [r7, #12]
 8007360:	68da      	ldr	r2, [r3, #12]
 8007362:	68fb      	ldr	r3, [r7, #12]
 8007364:	681b      	ldr	r3, [r3, #0]
 8007366:	430a      	orrs	r2, r1
 8007368:	605a      	str	r2, [r3, #4]
 800736a:	68fb      	ldr	r3, [r7, #12]
 800736c:	699b      	ldr	r3, [r3, #24]
 800736e:	627b      	str	r3, [r7, #36]	@ 0x24
 8007370:	68fb      	ldr	r3, [r7, #12]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	4a99      	ldr	r2, [pc, #612]	@ (80075dc <UART_SetConfig+0x2c4>)
 8007376:	4293      	cmp	r3, r2
 8007378:	d004      	beq.n	8007384 <UART_SetConfig+0x6c>
 800737a:	68fb      	ldr	r3, [r7, #12]
 800737c:	6a1b      	ldr	r3, [r3, #32]
 800737e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007380:	4313      	orrs	r3, r2
 8007382:	627b      	str	r3, [r7, #36]	@ 0x24
 8007384:	68fb      	ldr	r3, [r7, #12]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	689b      	ldr	r3, [r3, #8]
 800738a:	f423 6130 	bic.w	r1, r3, #2816	@ 0xb00
 800738e:	68fb      	ldr	r3, [r7, #12]
 8007390:	681b      	ldr	r3, [r3, #0]
 8007392:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8007394:	430a      	orrs	r2, r1
 8007396:	609a      	str	r2, [r3, #8]
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	4a90      	ldr	r2, [pc, #576]	@ (80075e0 <UART_SetConfig+0x2c8>)
 800739e:	4293      	cmp	r3, r2
 80073a0:	d126      	bne.n	80073f0 <UART_SetConfig+0xd8>
 80073a2:	4b90      	ldr	r3, [pc, #576]	@ (80075e4 <UART_SetConfig+0x2cc>)
 80073a4:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80073a8:	f003 0303 	and.w	r3, r3, #3
 80073ac:	2b03      	cmp	r3, #3
 80073ae:	d81b      	bhi.n	80073e8 <UART_SetConfig+0xd0>
 80073b0:	a201      	add	r2, pc, #4	@ (adr r2, 80073b8 <UART_SetConfig+0xa0>)
 80073b2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80073b6:	bf00      	nop
 80073b8:	080073c9 	.word	0x080073c9
 80073bc:	080073d9 	.word	0x080073d9
 80073c0:	080073d1 	.word	0x080073d1
 80073c4:	080073e1 	.word	0x080073e1
 80073c8:	2301      	movs	r3, #1
 80073ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80073ce:	e116      	b.n	80075fe <UART_SetConfig+0x2e6>
 80073d0:	2302      	movs	r3, #2
 80073d2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80073d6:	e112      	b.n	80075fe <UART_SetConfig+0x2e6>
 80073d8:	2304      	movs	r3, #4
 80073da:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80073de:	e10e      	b.n	80075fe <UART_SetConfig+0x2e6>
 80073e0:	2308      	movs	r3, #8
 80073e2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80073e6:	e10a      	b.n	80075fe <UART_SetConfig+0x2e6>
 80073e8:	2310      	movs	r3, #16
 80073ea:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80073ee:	e106      	b.n	80075fe <UART_SetConfig+0x2e6>
 80073f0:	68fb      	ldr	r3, [r7, #12]
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	4a7c      	ldr	r2, [pc, #496]	@ (80075e8 <UART_SetConfig+0x2d0>)
 80073f6:	4293      	cmp	r3, r2
 80073f8:	d138      	bne.n	800746c <UART_SetConfig+0x154>
 80073fa:	4b7a      	ldr	r3, [pc, #488]	@ (80075e4 <UART_SetConfig+0x2cc>)
 80073fc:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007400:	f003 030c 	and.w	r3, r3, #12
 8007404:	2b0c      	cmp	r3, #12
 8007406:	d82d      	bhi.n	8007464 <UART_SetConfig+0x14c>
 8007408:	a201      	add	r2, pc, #4	@ (adr r2, 8007410 <UART_SetConfig+0xf8>)
 800740a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800740e:	bf00      	nop
 8007410:	08007445 	.word	0x08007445
 8007414:	08007465 	.word	0x08007465
 8007418:	08007465 	.word	0x08007465
 800741c:	08007465 	.word	0x08007465
 8007420:	08007455 	.word	0x08007455
 8007424:	08007465 	.word	0x08007465
 8007428:	08007465 	.word	0x08007465
 800742c:	08007465 	.word	0x08007465
 8007430:	0800744d 	.word	0x0800744d
 8007434:	08007465 	.word	0x08007465
 8007438:	08007465 	.word	0x08007465
 800743c:	08007465 	.word	0x08007465
 8007440:	0800745d 	.word	0x0800745d
 8007444:	2300      	movs	r3, #0
 8007446:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800744a:	e0d8      	b.n	80075fe <UART_SetConfig+0x2e6>
 800744c:	2302      	movs	r3, #2
 800744e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007452:	e0d4      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007454:	2304      	movs	r3, #4
 8007456:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800745a:	e0d0      	b.n	80075fe <UART_SetConfig+0x2e6>
 800745c:	2308      	movs	r3, #8
 800745e:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007462:	e0cc      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007464:	2310      	movs	r3, #16
 8007466:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800746a:	e0c8      	b.n	80075fe <UART_SetConfig+0x2e6>
 800746c:	68fb      	ldr	r3, [r7, #12]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	4a5e      	ldr	r2, [pc, #376]	@ (80075ec <UART_SetConfig+0x2d4>)
 8007472:	4293      	cmp	r3, r2
 8007474:	d125      	bne.n	80074c2 <UART_SetConfig+0x1aa>
 8007476:	4b5b      	ldr	r3, [pc, #364]	@ (80075e4 <UART_SetConfig+0x2cc>)
 8007478:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800747c:	f003 0330 	and.w	r3, r3, #48	@ 0x30
 8007480:	2b30      	cmp	r3, #48	@ 0x30
 8007482:	d016      	beq.n	80074b2 <UART_SetConfig+0x19a>
 8007484:	2b30      	cmp	r3, #48	@ 0x30
 8007486:	d818      	bhi.n	80074ba <UART_SetConfig+0x1a2>
 8007488:	2b20      	cmp	r3, #32
 800748a:	d00a      	beq.n	80074a2 <UART_SetConfig+0x18a>
 800748c:	2b20      	cmp	r3, #32
 800748e:	d814      	bhi.n	80074ba <UART_SetConfig+0x1a2>
 8007490:	2b00      	cmp	r3, #0
 8007492:	d002      	beq.n	800749a <UART_SetConfig+0x182>
 8007494:	2b10      	cmp	r3, #16
 8007496:	d008      	beq.n	80074aa <UART_SetConfig+0x192>
 8007498:	e00f      	b.n	80074ba <UART_SetConfig+0x1a2>
 800749a:	2300      	movs	r3, #0
 800749c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074a0:	e0ad      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074a2:	2302      	movs	r3, #2
 80074a4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074a8:	e0a9      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074aa:	2304      	movs	r3, #4
 80074ac:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074b0:	e0a5      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074b2:	2308      	movs	r3, #8
 80074b4:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074b8:	e0a1      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074ba:	2310      	movs	r3, #16
 80074bc:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074c0:	e09d      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074c2:	68fb      	ldr	r3, [r7, #12]
 80074c4:	681b      	ldr	r3, [r3, #0]
 80074c6:	4a4a      	ldr	r2, [pc, #296]	@ (80075f0 <UART_SetConfig+0x2d8>)
 80074c8:	4293      	cmp	r3, r2
 80074ca:	d125      	bne.n	8007518 <UART_SetConfig+0x200>
 80074cc:	4b45      	ldr	r3, [pc, #276]	@ (80075e4 <UART_SetConfig+0x2cc>)
 80074ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80074d2:	f003 03c0 	and.w	r3, r3, #192	@ 0xc0
 80074d6:	2bc0      	cmp	r3, #192	@ 0xc0
 80074d8:	d016      	beq.n	8007508 <UART_SetConfig+0x1f0>
 80074da:	2bc0      	cmp	r3, #192	@ 0xc0
 80074dc:	d818      	bhi.n	8007510 <UART_SetConfig+0x1f8>
 80074de:	2b80      	cmp	r3, #128	@ 0x80
 80074e0:	d00a      	beq.n	80074f8 <UART_SetConfig+0x1e0>
 80074e2:	2b80      	cmp	r3, #128	@ 0x80
 80074e4:	d814      	bhi.n	8007510 <UART_SetConfig+0x1f8>
 80074e6:	2b00      	cmp	r3, #0
 80074e8:	d002      	beq.n	80074f0 <UART_SetConfig+0x1d8>
 80074ea:	2b40      	cmp	r3, #64	@ 0x40
 80074ec:	d008      	beq.n	8007500 <UART_SetConfig+0x1e8>
 80074ee:	e00f      	b.n	8007510 <UART_SetConfig+0x1f8>
 80074f0:	2300      	movs	r3, #0
 80074f2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074f6:	e082      	b.n	80075fe <UART_SetConfig+0x2e6>
 80074f8:	2302      	movs	r3, #2
 80074fa:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80074fe:	e07e      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007500:	2304      	movs	r3, #4
 8007502:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007506:	e07a      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007508:	2308      	movs	r3, #8
 800750a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800750e:	e076      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007510:	2310      	movs	r3, #16
 8007512:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007516:	e072      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007518:	68fb      	ldr	r3, [r7, #12]
 800751a:	681b      	ldr	r3, [r3, #0]
 800751c:	4a35      	ldr	r2, [pc, #212]	@ (80075f4 <UART_SetConfig+0x2dc>)
 800751e:	4293      	cmp	r3, r2
 8007520:	d12a      	bne.n	8007578 <UART_SetConfig+0x260>
 8007522:	4b30      	ldr	r3, [pc, #192]	@ (80075e4 <UART_SetConfig+0x2cc>)
 8007524:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007528:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800752c:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007530:	d01a      	beq.n	8007568 <UART_SetConfig+0x250>
 8007532:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8007536:	d81b      	bhi.n	8007570 <UART_SetConfig+0x258>
 8007538:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800753c:	d00c      	beq.n	8007558 <UART_SetConfig+0x240>
 800753e:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8007542:	d815      	bhi.n	8007570 <UART_SetConfig+0x258>
 8007544:	2b00      	cmp	r3, #0
 8007546:	d003      	beq.n	8007550 <UART_SetConfig+0x238>
 8007548:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800754c:	d008      	beq.n	8007560 <UART_SetConfig+0x248>
 800754e:	e00f      	b.n	8007570 <UART_SetConfig+0x258>
 8007550:	2300      	movs	r3, #0
 8007552:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007556:	e052      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007558:	2302      	movs	r3, #2
 800755a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800755e:	e04e      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007560:	2304      	movs	r3, #4
 8007562:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007566:	e04a      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007568:	2308      	movs	r3, #8
 800756a:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 800756e:	e046      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007570:	2310      	movs	r3, #16
 8007572:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 8007576:	e042      	b.n	80075fe <UART_SetConfig+0x2e6>
 8007578:	68fb      	ldr	r3, [r7, #12]
 800757a:	681b      	ldr	r3, [r3, #0]
 800757c:	4a17      	ldr	r2, [pc, #92]	@ (80075dc <UART_SetConfig+0x2c4>)
 800757e:	4293      	cmp	r3, r2
 8007580:	d13a      	bne.n	80075f8 <UART_SetConfig+0x2e0>
 8007582:	4b18      	ldr	r3, [pc, #96]	@ (80075e4 <UART_SetConfig+0x2cc>)
 8007584:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8007588:	f403 6340 	and.w	r3, r3, #3072	@ 0xc00
 800758c:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007590:	d01a      	beq.n	80075c8 <UART_SetConfig+0x2b0>
 8007592:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8007596:	d81b      	bhi.n	80075d0 <UART_SetConfig+0x2b8>
 8007598:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800759c:	d00c      	beq.n	80075b8 <UART_SetConfig+0x2a0>
 800759e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80075a2:	d815      	bhi.n	80075d0 <UART_SetConfig+0x2b8>
 80075a4:	2b00      	cmp	r3, #0
 80075a6:	d003      	beq.n	80075b0 <UART_SetConfig+0x298>
 80075a8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80075ac:	d008      	beq.n	80075c0 <UART_SetConfig+0x2a8>
 80075ae:	e00f      	b.n	80075d0 <UART_SetConfig+0x2b8>
 80075b0:	2300      	movs	r3, #0
 80075b2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075b6:	e022      	b.n	80075fe <UART_SetConfig+0x2e6>
 80075b8:	2302      	movs	r3, #2
 80075ba:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075be:	e01e      	b.n	80075fe <UART_SetConfig+0x2e6>
 80075c0:	2304      	movs	r3, #4
 80075c2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075c6:	e01a      	b.n	80075fe <UART_SetConfig+0x2e6>
 80075c8:	2308      	movs	r3, #8
 80075ca:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075ce:	e016      	b.n	80075fe <UART_SetConfig+0x2e6>
 80075d0:	2310      	movs	r3, #16
 80075d2:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075d6:	e012      	b.n	80075fe <UART_SetConfig+0x2e6>
 80075d8:	efff69f3 	.word	0xefff69f3
 80075dc:	40008000 	.word	0x40008000
 80075e0:	40013800 	.word	0x40013800
 80075e4:	40021000 	.word	0x40021000
 80075e8:	40004400 	.word	0x40004400
 80075ec:	40004800 	.word	0x40004800
 80075f0:	40004c00 	.word	0x40004c00
 80075f4:	40005000 	.word	0x40005000
 80075f8:	2310      	movs	r3, #16
 80075fa:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
 80075fe:	68fb      	ldr	r3, [r7, #12]
 8007600:	681b      	ldr	r3, [r3, #0]
 8007602:	4a9f      	ldr	r2, [pc, #636]	@ (8007880 <UART_SetConfig+0x568>)
 8007604:	4293      	cmp	r3, r2
 8007606:	d17a      	bne.n	80076fe <UART_SetConfig+0x3e6>
 8007608:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800760c:	2b08      	cmp	r3, #8
 800760e:	d824      	bhi.n	800765a <UART_SetConfig+0x342>
 8007610:	a201      	add	r2, pc, #4	@ (adr r2, 8007618 <UART_SetConfig+0x300>)
 8007612:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007616:	bf00      	nop
 8007618:	0800763d 	.word	0x0800763d
 800761c:	0800765b 	.word	0x0800765b
 8007620:	08007645 	.word	0x08007645
 8007624:	0800765b 	.word	0x0800765b
 8007628:	0800764b 	.word	0x0800764b
 800762c:	0800765b 	.word	0x0800765b
 8007630:	0800765b 	.word	0x0800765b
 8007634:	0800765b 	.word	0x0800765b
 8007638:	08007653 	.word	0x08007653
 800763c:	f7fd f958 	bl	80048f0 <HAL_RCC_GetPCLK1Freq>
 8007640:	61f8      	str	r0, [r7, #28]
 8007642:	e010      	b.n	8007666 <UART_SetConfig+0x34e>
 8007644:	4b8f      	ldr	r3, [pc, #572]	@ (8007884 <UART_SetConfig+0x56c>)
 8007646:	61fb      	str	r3, [r7, #28]
 8007648:	e00d      	b.n	8007666 <UART_SetConfig+0x34e>
 800764a:	f7fd f8b9 	bl	80047c0 <HAL_RCC_GetSysClockFreq>
 800764e:	61f8      	str	r0, [r7, #28]
 8007650:	e009      	b.n	8007666 <UART_SetConfig+0x34e>
 8007652:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8007656:	61fb      	str	r3, [r7, #28]
 8007658:	e005      	b.n	8007666 <UART_SetConfig+0x34e>
 800765a:	2300      	movs	r3, #0
 800765c:	61fb      	str	r3, [r7, #28]
 800765e:	2301      	movs	r3, #1
 8007660:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007664:	bf00      	nop
 8007666:	69fb      	ldr	r3, [r7, #28]
 8007668:	2b00      	cmp	r3, #0
 800766a:	f000 80fb 	beq.w	8007864 <UART_SetConfig+0x54c>
 800766e:	68fb      	ldr	r3, [r7, #12]
 8007670:	685a      	ldr	r2, [r3, #4]
 8007672:	4613      	mov	r3, r2
 8007674:	005b      	lsls	r3, r3, #1
 8007676:	4413      	add	r3, r2
 8007678:	69fa      	ldr	r2, [r7, #28]
 800767a:	429a      	cmp	r2, r3
 800767c:	d305      	bcc.n	800768a <UART_SetConfig+0x372>
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	685b      	ldr	r3, [r3, #4]
 8007682:	031b      	lsls	r3, r3, #12
 8007684:	69fa      	ldr	r2, [r7, #28]
 8007686:	429a      	cmp	r2, r3
 8007688:	d903      	bls.n	8007692 <UART_SetConfig+0x37a>
 800768a:	2301      	movs	r3, #1
 800768c:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007690:	e0e8      	b.n	8007864 <UART_SetConfig+0x54c>
 8007692:	69fb      	ldr	r3, [r7, #28]
 8007694:	2200      	movs	r2, #0
 8007696:	461c      	mov	r4, r3
 8007698:	4615      	mov	r5, r2
 800769a:	f04f 0200 	mov.w	r2, #0
 800769e:	f04f 0300 	mov.w	r3, #0
 80076a2:	022b      	lsls	r3, r5, #8
 80076a4:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 80076a8:	0222      	lsls	r2, r4, #8
 80076aa:	68f9      	ldr	r1, [r7, #12]
 80076ac:	6849      	ldr	r1, [r1, #4]
 80076ae:	0849      	lsrs	r1, r1, #1
 80076b0:	2000      	movs	r0, #0
 80076b2:	4688      	mov	r8, r1
 80076b4:	4681      	mov	r9, r0
 80076b6:	eb12 0a08 	adds.w	sl, r2, r8
 80076ba:	eb43 0b09 	adc.w	fp, r3, r9
 80076be:	68fb      	ldr	r3, [r7, #12]
 80076c0:	685b      	ldr	r3, [r3, #4]
 80076c2:	2200      	movs	r2, #0
 80076c4:	603b      	str	r3, [r7, #0]
 80076c6:	607a      	str	r2, [r7, #4]
 80076c8:	e9d7 2300 	ldrd	r2, r3, [r7]
 80076cc:	4650      	mov	r0, sl
 80076ce:	4659      	mov	r1, fp
 80076d0:	f7f8 fdce 	bl	8000270 <__aeabi_uldivmod>
 80076d4:	4602      	mov	r2, r0
 80076d6:	460b      	mov	r3, r1
 80076d8:	4613      	mov	r3, r2
 80076da:	61bb      	str	r3, [r7, #24]
 80076dc:	69bb      	ldr	r3, [r7, #24]
 80076de:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80076e2:	d308      	bcc.n	80076f6 <UART_SetConfig+0x3de>
 80076e4:	69bb      	ldr	r3, [r7, #24]
 80076e6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80076ea:	d204      	bcs.n	80076f6 <UART_SetConfig+0x3de>
 80076ec:	68fb      	ldr	r3, [r7, #12]
 80076ee:	681b      	ldr	r3, [r3, #0]
 80076f0:	69ba      	ldr	r2, [r7, #24]
 80076f2:	60da      	str	r2, [r3, #12]
 80076f4:	e0b6      	b.n	8007864 <UART_SetConfig+0x54c>
 80076f6:	2301      	movs	r3, #1
 80076f8:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80076fc:	e0b2      	b.n	8007864 <UART_SetConfig+0x54c>
 80076fe:	68fb      	ldr	r3, [r7, #12]
 8007700:	69db      	ldr	r3, [r3, #28]
 8007702:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8007706:	d15e      	bne.n	80077c6 <UART_SetConfig+0x4ae>
 8007708:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800770c:	2b08      	cmp	r3, #8
 800770e:	d828      	bhi.n	8007762 <UART_SetConfig+0x44a>
 8007710:	a201      	add	r2, pc, #4	@ (adr r2, 8007718 <UART_SetConfig+0x400>)
 8007712:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007716:	bf00      	nop
 8007718:	0800773d 	.word	0x0800773d
 800771c:	08007745 	.word	0x08007745
 8007720:	0800774d 	.word	0x0800774d
 8007724:	08007763 	.word	0x08007763
 8007728:	08007753 	.word	0x08007753
 800772c:	08007763 	.word	0x08007763
 8007730:	08007763 	.word	0x08007763
 8007734:	08007763 	.word	0x08007763
 8007738:	0800775b 	.word	0x0800775b
 800773c:	f7fd f8d8 	bl	80048f0 <HAL_RCC_GetPCLK1Freq>
 8007740:	61f8      	str	r0, [r7, #28]
 8007742:	e014      	b.n	800776e <UART_SetConfig+0x456>
 8007744:	f7fd f8ea 	bl	800491c <HAL_RCC_GetPCLK2Freq>
 8007748:	61f8      	str	r0, [r7, #28]
 800774a:	e010      	b.n	800776e <UART_SetConfig+0x456>
 800774c:	4b4d      	ldr	r3, [pc, #308]	@ (8007884 <UART_SetConfig+0x56c>)
 800774e:	61fb      	str	r3, [r7, #28]
 8007750:	e00d      	b.n	800776e <UART_SetConfig+0x456>
 8007752:	f7fd f835 	bl	80047c0 <HAL_RCC_GetSysClockFreq>
 8007756:	61f8      	str	r0, [r7, #28]
 8007758:	e009      	b.n	800776e <UART_SetConfig+0x456>
 800775a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800775e:	61fb      	str	r3, [r7, #28]
 8007760:	e005      	b.n	800776e <UART_SetConfig+0x456>
 8007762:	2300      	movs	r3, #0
 8007764:	61fb      	str	r3, [r7, #28]
 8007766:	2301      	movs	r3, #1
 8007768:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800776c:	bf00      	nop
 800776e:	69fb      	ldr	r3, [r7, #28]
 8007770:	2b00      	cmp	r3, #0
 8007772:	d077      	beq.n	8007864 <UART_SetConfig+0x54c>
 8007774:	69fb      	ldr	r3, [r7, #28]
 8007776:	005a      	lsls	r2, r3, #1
 8007778:	68fb      	ldr	r3, [r7, #12]
 800777a:	685b      	ldr	r3, [r3, #4]
 800777c:	085b      	lsrs	r3, r3, #1
 800777e:	441a      	add	r2, r3
 8007780:	68fb      	ldr	r3, [r7, #12]
 8007782:	685b      	ldr	r3, [r3, #4]
 8007784:	fbb2 f3f3 	udiv	r3, r2, r3
 8007788:	61bb      	str	r3, [r7, #24]
 800778a:	69bb      	ldr	r3, [r7, #24]
 800778c:	2b0f      	cmp	r3, #15
 800778e:	d916      	bls.n	80077be <UART_SetConfig+0x4a6>
 8007790:	69bb      	ldr	r3, [r7, #24]
 8007792:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007796:	d212      	bcs.n	80077be <UART_SetConfig+0x4a6>
 8007798:	69bb      	ldr	r3, [r7, #24]
 800779a:	b29b      	uxth	r3, r3
 800779c:	f023 030f 	bic.w	r3, r3, #15
 80077a0:	82fb      	strh	r3, [r7, #22]
 80077a2:	69bb      	ldr	r3, [r7, #24]
 80077a4:	085b      	lsrs	r3, r3, #1
 80077a6:	b29b      	uxth	r3, r3
 80077a8:	f003 0307 	and.w	r3, r3, #7
 80077ac:	b29a      	uxth	r2, r3
 80077ae:	8afb      	ldrh	r3, [r7, #22]
 80077b0:	4313      	orrs	r3, r2
 80077b2:	82fb      	strh	r3, [r7, #22]
 80077b4:	68fb      	ldr	r3, [r7, #12]
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	8afa      	ldrh	r2, [r7, #22]
 80077ba:	60da      	str	r2, [r3, #12]
 80077bc:	e052      	b.n	8007864 <UART_SetConfig+0x54c>
 80077be:	2301      	movs	r3, #1
 80077c0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 80077c4:	e04e      	b.n	8007864 <UART_SetConfig+0x54c>
 80077c6:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 80077ca:	2b08      	cmp	r3, #8
 80077cc:	d827      	bhi.n	800781e <UART_SetConfig+0x506>
 80077ce:	a201      	add	r2, pc, #4	@ (adr r2, 80077d4 <UART_SetConfig+0x4bc>)
 80077d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80077d4:	080077f9 	.word	0x080077f9
 80077d8:	08007801 	.word	0x08007801
 80077dc:	08007809 	.word	0x08007809
 80077e0:	0800781f 	.word	0x0800781f
 80077e4:	0800780f 	.word	0x0800780f
 80077e8:	0800781f 	.word	0x0800781f
 80077ec:	0800781f 	.word	0x0800781f
 80077f0:	0800781f 	.word	0x0800781f
 80077f4:	08007817 	.word	0x08007817
 80077f8:	f7fd f87a 	bl	80048f0 <HAL_RCC_GetPCLK1Freq>
 80077fc:	61f8      	str	r0, [r7, #28]
 80077fe:	e014      	b.n	800782a <UART_SetConfig+0x512>
 8007800:	f7fd f88c 	bl	800491c <HAL_RCC_GetPCLK2Freq>
 8007804:	61f8      	str	r0, [r7, #28]
 8007806:	e010      	b.n	800782a <UART_SetConfig+0x512>
 8007808:	4b1e      	ldr	r3, [pc, #120]	@ (8007884 <UART_SetConfig+0x56c>)
 800780a:	61fb      	str	r3, [r7, #28]
 800780c:	e00d      	b.n	800782a <UART_SetConfig+0x512>
 800780e:	f7fc ffd7 	bl	80047c0 <HAL_RCC_GetSysClockFreq>
 8007812:	61f8      	str	r0, [r7, #28]
 8007814:	e009      	b.n	800782a <UART_SetConfig+0x512>
 8007816:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800781a:	61fb      	str	r3, [r7, #28]
 800781c:	e005      	b.n	800782a <UART_SetConfig+0x512>
 800781e:	2300      	movs	r3, #0
 8007820:	61fb      	str	r3, [r7, #28]
 8007822:	2301      	movs	r3, #1
 8007824:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007828:	bf00      	nop
 800782a:	69fb      	ldr	r3, [r7, #28]
 800782c:	2b00      	cmp	r3, #0
 800782e:	d019      	beq.n	8007864 <UART_SetConfig+0x54c>
 8007830:	68fb      	ldr	r3, [r7, #12]
 8007832:	685b      	ldr	r3, [r3, #4]
 8007834:	085a      	lsrs	r2, r3, #1
 8007836:	69fb      	ldr	r3, [r7, #28]
 8007838:	441a      	add	r2, r3
 800783a:	68fb      	ldr	r3, [r7, #12]
 800783c:	685b      	ldr	r3, [r3, #4]
 800783e:	fbb2 f3f3 	udiv	r3, r2, r3
 8007842:	61bb      	str	r3, [r7, #24]
 8007844:	69bb      	ldr	r3, [r7, #24]
 8007846:	2b0f      	cmp	r3, #15
 8007848:	d909      	bls.n	800785e <UART_SetConfig+0x546>
 800784a:	69bb      	ldr	r3, [r7, #24]
 800784c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007850:	d205      	bcs.n	800785e <UART_SetConfig+0x546>
 8007852:	69bb      	ldr	r3, [r7, #24]
 8007854:	b29a      	uxth	r2, r3
 8007856:	68fb      	ldr	r3, [r7, #12]
 8007858:	681b      	ldr	r3, [r3, #0]
 800785a:	60da      	str	r2, [r3, #12]
 800785c:	e002      	b.n	8007864 <UART_SetConfig+0x54c>
 800785e:	2301      	movs	r3, #1
 8007860:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 8007864:	68fb      	ldr	r3, [r7, #12]
 8007866:	2200      	movs	r2, #0
 8007868:	669a      	str	r2, [r3, #104]	@ 0x68
 800786a:	68fb      	ldr	r3, [r7, #12]
 800786c:	2200      	movs	r2, #0
 800786e:	66da      	str	r2, [r3, #108]	@ 0x6c
 8007870:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8007874:	4618      	mov	r0, r3
 8007876:	3728      	adds	r7, #40	@ 0x28
 8007878:	46bd      	mov	sp, r7
 800787a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800787e:	bf00      	nop
 8007880:	40008000 	.word	0x40008000
 8007884:	00f42400 	.word	0x00f42400

08007888 <UART_AdvFeatureConfig>:
 8007888:	b480      	push	{r7}
 800788a:	b083      	sub	sp, #12
 800788c:	af00      	add	r7, sp, #0
 800788e:	6078      	str	r0, [r7, #4]
 8007890:	687b      	ldr	r3, [r7, #4]
 8007892:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007894:	f003 0308 	and.w	r3, r3, #8
 8007898:	2b00      	cmp	r3, #0
 800789a:	d00a      	beq.n	80078b2 <UART_AdvFeatureConfig+0x2a>
 800789c:	687b      	ldr	r3, [r7, #4]
 800789e:	681b      	ldr	r3, [r3, #0]
 80078a0:	685b      	ldr	r3, [r3, #4]
 80078a2:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 80078a6:	687b      	ldr	r3, [r7, #4]
 80078a8:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80078aa:	687b      	ldr	r3, [r7, #4]
 80078ac:	681b      	ldr	r3, [r3, #0]
 80078ae:	430a      	orrs	r2, r1
 80078b0:	605a      	str	r2, [r3, #4]
 80078b2:	687b      	ldr	r3, [r7, #4]
 80078b4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078b6:	f003 0301 	and.w	r3, r3, #1
 80078ba:	2b00      	cmp	r3, #0
 80078bc:	d00a      	beq.n	80078d4 <UART_AdvFeatureConfig+0x4c>
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	685b      	ldr	r3, [r3, #4]
 80078c4:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	681b      	ldr	r3, [r3, #0]
 80078d0:	430a      	orrs	r2, r1
 80078d2:	605a      	str	r2, [r3, #4]
 80078d4:	687b      	ldr	r3, [r7, #4]
 80078d6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078d8:	f003 0302 	and.w	r3, r3, #2
 80078dc:	2b00      	cmp	r3, #0
 80078de:	d00a      	beq.n	80078f6 <UART_AdvFeatureConfig+0x6e>
 80078e0:	687b      	ldr	r3, [r7, #4]
 80078e2:	681b      	ldr	r3, [r3, #0]
 80078e4:	685b      	ldr	r3, [r3, #4]
 80078e6:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80078ea:	687b      	ldr	r3, [r7, #4]
 80078ec:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	681b      	ldr	r3, [r3, #0]
 80078f2:	430a      	orrs	r2, r1
 80078f4:	605a      	str	r2, [r3, #4]
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80078fa:	f003 0304 	and.w	r3, r3, #4
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d00a      	beq.n	8007918 <UART_AdvFeatureConfig+0x90>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	681b      	ldr	r3, [r3, #0]
 8007906:	685b      	ldr	r3, [r3, #4]
 8007908:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	430a      	orrs	r2, r1
 8007916:	605a      	str	r2, [r3, #4]
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800791c:	f003 0310 	and.w	r3, r3, #16
 8007920:	2b00      	cmp	r3, #0
 8007922:	d00a      	beq.n	800793a <UART_AdvFeatureConfig+0xb2>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	681b      	ldr	r3, [r3, #0]
 8007928:	689b      	ldr	r3, [r3, #8]
 800792a:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800792e:	687b      	ldr	r3, [r7, #4]
 8007930:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	681b      	ldr	r3, [r3, #0]
 8007936:	430a      	orrs	r2, r1
 8007938:	609a      	str	r2, [r3, #8]
 800793a:	687b      	ldr	r3, [r7, #4]
 800793c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800793e:	f003 0320 	and.w	r3, r3, #32
 8007942:	2b00      	cmp	r3, #0
 8007944:	d00a      	beq.n	800795c <UART_AdvFeatureConfig+0xd4>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	681b      	ldr	r3, [r3, #0]
 800794a:	689b      	ldr	r3, [r3, #8]
 800794c:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8007954:	687b      	ldr	r3, [r7, #4]
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	430a      	orrs	r2, r1
 800795a:	609a      	str	r2, [r3, #8]
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007960:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007964:	2b00      	cmp	r3, #0
 8007966:	d01a      	beq.n	800799e <UART_AdvFeatureConfig+0x116>
 8007968:	687b      	ldr	r3, [r7, #4]
 800796a:	681b      	ldr	r3, [r3, #0]
 800796c:	685b      	ldr	r3, [r3, #4]
 800796e:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	430a      	orrs	r2, r1
 800797c:	605a      	str	r2, [r3, #4]
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007982:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8007986:	d10a      	bne.n	800799e <UART_AdvFeatureConfig+0x116>
 8007988:	687b      	ldr	r3, [r7, #4]
 800798a:	681b      	ldr	r3, [r3, #0]
 800798c:	685b      	ldr	r3, [r3, #4]
 800798e:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8007992:	687b      	ldr	r3, [r7, #4]
 8007994:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	430a      	orrs	r2, r1
 800799c:	605a      	str	r2, [r3, #4]
 800799e:	687b      	ldr	r3, [r7, #4]
 80079a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80079a2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80079a6:	2b00      	cmp	r3, #0
 80079a8:	d00a      	beq.n	80079c0 <UART_AdvFeatureConfig+0x138>
 80079aa:	687b      	ldr	r3, [r7, #4]
 80079ac:	681b      	ldr	r3, [r3, #0]
 80079ae:	685b      	ldr	r3, [r3, #4]
 80079b0:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 80079b4:	687b      	ldr	r3, [r7, #4]
 80079b6:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	681b      	ldr	r3, [r3, #0]
 80079bc:	430a      	orrs	r2, r1
 80079be:	605a      	str	r2, [r3, #4]
 80079c0:	bf00      	nop
 80079c2:	370c      	adds	r7, #12
 80079c4:	46bd      	mov	sp, r7
 80079c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80079ca:	4770      	bx	lr

080079cc <UART_CheckIdleState>:
 80079cc:	b580      	push	{r7, lr}
 80079ce:	b098      	sub	sp, #96	@ 0x60
 80079d0:	af02      	add	r7, sp, #8
 80079d2:	6078      	str	r0, [r7, #4]
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	2200      	movs	r2, #0
 80079d8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 80079dc:	f7fa fc84 	bl	80022e8 <HAL_GetTick>
 80079e0:	6578      	str	r0, [r7, #84]	@ 0x54
 80079e2:	687b      	ldr	r3, [r7, #4]
 80079e4:	681b      	ldr	r3, [r3, #0]
 80079e6:	681b      	ldr	r3, [r3, #0]
 80079e8:	f003 0308 	and.w	r3, r3, #8
 80079ec:	2b08      	cmp	r3, #8
 80079ee:	d12e      	bne.n	8007a4e <UART_CheckIdleState+0x82>
 80079f0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 80079f4:	9300      	str	r3, [sp, #0]
 80079f6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 80079f8:	2200      	movs	r2, #0
 80079fa:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 80079fe:	6878      	ldr	r0, [r7, #4]
 8007a00:	f000 f88c 	bl	8007b1c <UART_WaitOnFlagUntilTimeout>
 8007a04:	4603      	mov	r3, r0
 8007a06:	2b00      	cmp	r3, #0
 8007a08:	d021      	beq.n	8007a4e <UART_CheckIdleState+0x82>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	681b      	ldr	r3, [r3, #0]
 8007a0e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007a10:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007a12:	e853 3f00 	ldrex	r3, [r3]
 8007a16:	637b      	str	r3, [r7, #52]	@ 0x34
 8007a18:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007a1a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007a1e:	653b      	str	r3, [r7, #80]	@ 0x50
 8007a20:	687b      	ldr	r3, [r7, #4]
 8007a22:	681b      	ldr	r3, [r3, #0]
 8007a24:	461a      	mov	r2, r3
 8007a26:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8007a28:	647b      	str	r3, [r7, #68]	@ 0x44
 8007a2a:	643a      	str	r2, [r7, #64]	@ 0x40
 8007a2c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8007a2e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8007a30:	e841 2300 	strex	r3, r2, [r1]
 8007a34:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8007a36:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d1e6      	bne.n	8007a0a <UART_CheckIdleState+0x3e>
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	2220      	movs	r2, #32
 8007a40:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	2200      	movs	r2, #0
 8007a46:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007a4a:	2303      	movs	r3, #3
 8007a4c:	e062      	b.n	8007b14 <UART_CheckIdleState+0x148>
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	681b      	ldr	r3, [r3, #0]
 8007a52:	681b      	ldr	r3, [r3, #0]
 8007a54:	f003 0304 	and.w	r3, r3, #4
 8007a58:	2b04      	cmp	r3, #4
 8007a5a:	d149      	bne.n	8007af0 <UART_CheckIdleState+0x124>
 8007a5c:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8007a60:	9300      	str	r3, [sp, #0]
 8007a62:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8007a64:	2200      	movs	r2, #0
 8007a66:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8007a6a:	6878      	ldr	r0, [r7, #4]
 8007a6c:	f000 f856 	bl	8007b1c <UART_WaitOnFlagUntilTimeout>
 8007a70:	4603      	mov	r3, r0
 8007a72:	2b00      	cmp	r3, #0
 8007a74:	d03c      	beq.n	8007af0 <UART_CheckIdleState+0x124>
 8007a76:	687b      	ldr	r3, [r7, #4]
 8007a78:	681b      	ldr	r3, [r3, #0]
 8007a7a:	627b      	str	r3, [r7, #36]	@ 0x24
 8007a7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007a7e:	e853 3f00 	ldrex	r3, [r3]
 8007a82:	623b      	str	r3, [r7, #32]
 8007a84:	6a3b      	ldr	r3, [r7, #32]
 8007a86:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007a8a:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007a8c:	687b      	ldr	r3, [r7, #4]
 8007a8e:	681b      	ldr	r3, [r3, #0]
 8007a90:	461a      	mov	r2, r3
 8007a92:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007a94:	633b      	str	r3, [r7, #48]	@ 0x30
 8007a96:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007a98:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8007a9a:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8007a9c:	e841 2300 	strex	r3, r2, [r1]
 8007aa0:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007aa2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8007aa4:	2b00      	cmp	r3, #0
 8007aa6:	d1e6      	bne.n	8007a76 <UART_CheckIdleState+0xaa>
 8007aa8:	687b      	ldr	r3, [r7, #4]
 8007aaa:	681b      	ldr	r3, [r3, #0]
 8007aac:	3308      	adds	r3, #8
 8007aae:	613b      	str	r3, [r7, #16]
 8007ab0:	693b      	ldr	r3, [r7, #16]
 8007ab2:	e853 3f00 	ldrex	r3, [r3]
 8007ab6:	60fb      	str	r3, [r7, #12]
 8007ab8:	68fb      	ldr	r3, [r7, #12]
 8007aba:	f023 0301 	bic.w	r3, r3, #1
 8007abe:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007ac0:	687b      	ldr	r3, [r7, #4]
 8007ac2:	681b      	ldr	r3, [r3, #0]
 8007ac4:	3308      	adds	r3, #8
 8007ac6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007ac8:	61fa      	str	r2, [r7, #28]
 8007aca:	61bb      	str	r3, [r7, #24]
 8007acc:	69b9      	ldr	r1, [r7, #24]
 8007ace:	69fa      	ldr	r2, [r7, #28]
 8007ad0:	e841 2300 	strex	r3, r2, [r1]
 8007ad4:	617b      	str	r3, [r7, #20]
 8007ad6:	697b      	ldr	r3, [r7, #20]
 8007ad8:	2b00      	cmp	r3, #0
 8007ada:	d1e5      	bne.n	8007aa8 <UART_CheckIdleState+0xdc>
 8007adc:	687b      	ldr	r3, [r7, #4]
 8007ade:	2220      	movs	r2, #32
 8007ae0:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	2200      	movs	r2, #0
 8007ae8:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007aec:	2303      	movs	r3, #3
 8007aee:	e011      	b.n	8007b14 <UART_CheckIdleState+0x148>
 8007af0:	687b      	ldr	r3, [r7, #4]
 8007af2:	2220      	movs	r2, #32
 8007af4:	67da      	str	r2, [r3, #124]	@ 0x7c
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	2220      	movs	r2, #32
 8007afa:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007afe:	687b      	ldr	r3, [r7, #4]
 8007b00:	2200      	movs	r2, #0
 8007b02:	661a      	str	r2, [r3, #96]	@ 0x60
 8007b04:	687b      	ldr	r3, [r7, #4]
 8007b06:	2200      	movs	r2, #0
 8007b08:	665a      	str	r2, [r3, #100]	@ 0x64
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	2200      	movs	r2, #0
 8007b0e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007b12:	2300      	movs	r3, #0
 8007b14:	4618      	mov	r0, r3
 8007b16:	3758      	adds	r7, #88	@ 0x58
 8007b18:	46bd      	mov	sp, r7
 8007b1a:	bd80      	pop	{r7, pc}

08007b1c <UART_WaitOnFlagUntilTimeout>:
 8007b1c:	b580      	push	{r7, lr}
 8007b1e:	b084      	sub	sp, #16
 8007b20:	af00      	add	r7, sp, #0
 8007b22:	60f8      	str	r0, [r7, #12]
 8007b24:	60b9      	str	r1, [r7, #8]
 8007b26:	603b      	str	r3, [r7, #0]
 8007b28:	4613      	mov	r3, r2
 8007b2a:	71fb      	strb	r3, [r7, #7]
 8007b2c:	e049      	b.n	8007bc2 <UART_WaitOnFlagUntilTimeout+0xa6>
 8007b2e:	69bb      	ldr	r3, [r7, #24]
 8007b30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007b34:	d045      	beq.n	8007bc2 <UART_WaitOnFlagUntilTimeout+0xa6>
 8007b36:	f7fa fbd7 	bl	80022e8 <HAL_GetTick>
 8007b3a:	4602      	mov	r2, r0
 8007b3c:	683b      	ldr	r3, [r7, #0]
 8007b3e:	1ad3      	subs	r3, r2, r3
 8007b40:	69ba      	ldr	r2, [r7, #24]
 8007b42:	429a      	cmp	r2, r3
 8007b44:	d302      	bcc.n	8007b4c <UART_WaitOnFlagUntilTimeout+0x30>
 8007b46:	69bb      	ldr	r3, [r7, #24]
 8007b48:	2b00      	cmp	r3, #0
 8007b4a:	d101      	bne.n	8007b50 <UART_WaitOnFlagUntilTimeout+0x34>
 8007b4c:	2303      	movs	r3, #3
 8007b4e:	e048      	b.n	8007be2 <UART_WaitOnFlagUntilTimeout+0xc6>
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	681b      	ldr	r3, [r3, #0]
 8007b56:	f003 0304 	and.w	r3, r3, #4
 8007b5a:	2b00      	cmp	r3, #0
 8007b5c:	d031      	beq.n	8007bc2 <UART_WaitOnFlagUntilTimeout+0xa6>
 8007b5e:	68fb      	ldr	r3, [r7, #12]
 8007b60:	681b      	ldr	r3, [r3, #0]
 8007b62:	69db      	ldr	r3, [r3, #28]
 8007b64:	f003 0308 	and.w	r3, r3, #8
 8007b68:	2b08      	cmp	r3, #8
 8007b6a:	d110      	bne.n	8007b8e <UART_WaitOnFlagUntilTimeout+0x72>
 8007b6c:	68fb      	ldr	r3, [r7, #12]
 8007b6e:	681b      	ldr	r3, [r3, #0]
 8007b70:	2208      	movs	r2, #8
 8007b72:	621a      	str	r2, [r3, #32]
 8007b74:	68f8      	ldr	r0, [r7, #12]
 8007b76:	f000 f838 	bl	8007bea <UART_EndRxTransfer>
 8007b7a:	68fb      	ldr	r3, [r7, #12]
 8007b7c:	2208      	movs	r2, #8
 8007b7e:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007b82:	68fb      	ldr	r3, [r7, #12]
 8007b84:	2200      	movs	r2, #0
 8007b86:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007b8a:	2301      	movs	r3, #1
 8007b8c:	e029      	b.n	8007be2 <UART_WaitOnFlagUntilTimeout+0xc6>
 8007b8e:	68fb      	ldr	r3, [r7, #12]
 8007b90:	681b      	ldr	r3, [r3, #0]
 8007b92:	69db      	ldr	r3, [r3, #28]
 8007b94:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8007b98:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8007b9c:	d111      	bne.n	8007bc2 <UART_WaitOnFlagUntilTimeout+0xa6>
 8007b9e:	68fb      	ldr	r3, [r7, #12]
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8007ba6:	621a      	str	r2, [r3, #32]
 8007ba8:	68f8      	ldr	r0, [r7, #12]
 8007baa:	f000 f81e 	bl	8007bea <UART_EndRxTransfer>
 8007bae:	68fb      	ldr	r3, [r7, #12]
 8007bb0:	2220      	movs	r2, #32
 8007bb2:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
 8007bb6:	68fb      	ldr	r3, [r7, #12]
 8007bb8:	2200      	movs	r2, #0
 8007bba:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 8007bbe:	2303      	movs	r3, #3
 8007bc0:	e00f      	b.n	8007be2 <UART_WaitOnFlagUntilTimeout+0xc6>
 8007bc2:	68fb      	ldr	r3, [r7, #12]
 8007bc4:	681b      	ldr	r3, [r3, #0]
 8007bc6:	69da      	ldr	r2, [r3, #28]
 8007bc8:	68bb      	ldr	r3, [r7, #8]
 8007bca:	4013      	ands	r3, r2
 8007bcc:	68ba      	ldr	r2, [r7, #8]
 8007bce:	429a      	cmp	r2, r3
 8007bd0:	bf0c      	ite	eq
 8007bd2:	2301      	moveq	r3, #1
 8007bd4:	2300      	movne	r3, #0
 8007bd6:	b2db      	uxtb	r3, r3
 8007bd8:	461a      	mov	r2, r3
 8007bda:	79fb      	ldrb	r3, [r7, #7]
 8007bdc:	429a      	cmp	r2, r3
 8007bde:	d0a6      	beq.n	8007b2e <UART_WaitOnFlagUntilTimeout+0x12>
 8007be0:	2300      	movs	r3, #0
 8007be2:	4618      	mov	r0, r3
 8007be4:	3710      	adds	r7, #16
 8007be6:	46bd      	mov	sp, r7
 8007be8:	bd80      	pop	{r7, pc}

08007bea <UART_EndRxTransfer>:
 8007bea:	b480      	push	{r7}
 8007bec:	b095      	sub	sp, #84	@ 0x54
 8007bee:	af00      	add	r7, sp, #0
 8007bf0:	6078      	str	r0, [r7, #4]
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	681b      	ldr	r3, [r3, #0]
 8007bf6:	637b      	str	r3, [r7, #52]	@ 0x34
 8007bf8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8007bfa:	e853 3f00 	ldrex	r3, [r3]
 8007bfe:	633b      	str	r3, [r7, #48]	@ 0x30
 8007c00:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8007c02:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8007c06:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	681b      	ldr	r3, [r3, #0]
 8007c0c:	461a      	mov	r2, r3
 8007c0e:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8007c10:	643b      	str	r3, [r7, #64]	@ 0x40
 8007c12:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8007c14:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8007c16:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8007c18:	e841 2300 	strex	r3, r2, [r1]
 8007c1c:	63bb      	str	r3, [r7, #56]	@ 0x38
 8007c1e:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8007c20:	2b00      	cmp	r3, #0
 8007c22:	d1e6      	bne.n	8007bf2 <UART_EndRxTransfer+0x8>
 8007c24:	687b      	ldr	r3, [r7, #4]
 8007c26:	681b      	ldr	r3, [r3, #0]
 8007c28:	3308      	adds	r3, #8
 8007c2a:	623b      	str	r3, [r7, #32]
 8007c2c:	6a3b      	ldr	r3, [r7, #32]
 8007c2e:	e853 3f00 	ldrex	r3, [r3]
 8007c32:	61fb      	str	r3, [r7, #28]
 8007c34:	69fb      	ldr	r3, [r7, #28]
 8007c36:	f023 0301 	bic.w	r3, r3, #1
 8007c3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8007c3c:	687b      	ldr	r3, [r7, #4]
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	3308      	adds	r3, #8
 8007c42:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8007c44:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8007c46:	62bb      	str	r3, [r7, #40]	@ 0x28
 8007c48:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8007c4a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8007c4c:	e841 2300 	strex	r3, r2, [r1]
 8007c50:	627b      	str	r3, [r7, #36]	@ 0x24
 8007c52:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007c54:	2b00      	cmp	r3, #0
 8007c56:	d1e5      	bne.n	8007c24 <UART_EndRxTransfer+0x3a>
 8007c58:	687b      	ldr	r3, [r7, #4]
 8007c5a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007c5c:	2b01      	cmp	r3, #1
 8007c5e:	d118      	bne.n	8007c92 <UART_EndRxTransfer+0xa8>
 8007c60:	687b      	ldr	r3, [r7, #4]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	60fb      	str	r3, [r7, #12]
 8007c66:	68fb      	ldr	r3, [r7, #12]
 8007c68:	e853 3f00 	ldrex	r3, [r3]
 8007c6c:	60bb      	str	r3, [r7, #8]
 8007c6e:	68bb      	ldr	r3, [r7, #8]
 8007c70:	f023 0310 	bic.w	r3, r3, #16
 8007c74:	647b      	str	r3, [r7, #68]	@ 0x44
 8007c76:	687b      	ldr	r3, [r7, #4]
 8007c78:	681b      	ldr	r3, [r3, #0]
 8007c7a:	461a      	mov	r2, r3
 8007c7c:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8007c7e:	61bb      	str	r3, [r7, #24]
 8007c80:	617a      	str	r2, [r7, #20]
 8007c82:	6979      	ldr	r1, [r7, #20]
 8007c84:	69ba      	ldr	r2, [r7, #24]
 8007c86:	e841 2300 	strex	r3, r2, [r1]
 8007c8a:	613b      	str	r3, [r7, #16]
 8007c8c:	693b      	ldr	r3, [r7, #16]
 8007c8e:	2b00      	cmp	r3, #0
 8007c90:	d1e6      	bne.n	8007c60 <UART_EndRxTransfer+0x76>
 8007c92:	687b      	ldr	r3, [r7, #4]
 8007c94:	2220      	movs	r2, #32
 8007c96:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	2200      	movs	r2, #0
 8007c9e:	661a      	str	r2, [r3, #96]	@ 0x60
 8007ca0:	687b      	ldr	r3, [r7, #4]
 8007ca2:	2200      	movs	r2, #0
 8007ca4:	669a      	str	r2, [r3, #104]	@ 0x68
 8007ca6:	bf00      	nop
 8007ca8:	3754      	adds	r7, #84	@ 0x54
 8007caa:	46bd      	mov	sp, r7
 8007cac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cb0:	4770      	bx	lr
	...

08007cb4 <std>:
 8007cb4:	2300      	movs	r3, #0
 8007cb6:	b510      	push	{r4, lr}
 8007cb8:	4604      	mov	r4, r0
 8007cba:	e9c0 3300 	strd	r3, r3, [r0]
 8007cbe:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8007cc2:	6083      	str	r3, [r0, #8]
 8007cc4:	8181      	strh	r1, [r0, #12]
 8007cc6:	6643      	str	r3, [r0, #100]	@ 0x64
 8007cc8:	81c2      	strh	r2, [r0, #14]
 8007cca:	6183      	str	r3, [r0, #24]
 8007ccc:	4619      	mov	r1, r3
 8007cce:	2208      	movs	r2, #8
 8007cd0:	305c      	adds	r0, #92	@ 0x5c
 8007cd2:	f000 f906 	bl	8007ee2 <memset>
 8007cd6:	4b0d      	ldr	r3, [pc, #52]	@ (8007d0c <std+0x58>)
 8007cd8:	6263      	str	r3, [r4, #36]	@ 0x24
 8007cda:	4b0d      	ldr	r3, [pc, #52]	@ (8007d10 <std+0x5c>)
 8007cdc:	62a3      	str	r3, [r4, #40]	@ 0x28
 8007cde:	4b0d      	ldr	r3, [pc, #52]	@ (8007d14 <std+0x60>)
 8007ce0:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8007ce2:	4b0d      	ldr	r3, [pc, #52]	@ (8007d18 <std+0x64>)
 8007ce4:	6323      	str	r3, [r4, #48]	@ 0x30
 8007ce6:	4b0d      	ldr	r3, [pc, #52]	@ (8007d1c <std+0x68>)
 8007ce8:	6224      	str	r4, [r4, #32]
 8007cea:	429c      	cmp	r4, r3
 8007cec:	d006      	beq.n	8007cfc <std+0x48>
 8007cee:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8007cf2:	4294      	cmp	r4, r2
 8007cf4:	d002      	beq.n	8007cfc <std+0x48>
 8007cf6:	33d0      	adds	r3, #208	@ 0xd0
 8007cf8:	429c      	cmp	r4, r3
 8007cfa:	d105      	bne.n	8007d08 <std+0x54>
 8007cfc:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8007d00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d04:	f000 b966 	b.w	8007fd4 <__retarget_lock_init_recursive>
 8007d08:	bd10      	pop	{r4, pc}
 8007d0a:	bf00      	nop
 8007d0c:	08007e5d 	.word	0x08007e5d
 8007d10:	08007e7f 	.word	0x08007e7f
 8007d14:	08007eb7 	.word	0x08007eb7
 8007d18:	08007edb 	.word	0x08007edb
 8007d1c:	200005b8 	.word	0x200005b8

08007d20 <stdio_exit_handler>:
 8007d20:	4a02      	ldr	r2, [pc, #8]	@ (8007d2c <stdio_exit_handler+0xc>)
 8007d22:	4903      	ldr	r1, [pc, #12]	@ (8007d30 <stdio_exit_handler+0x10>)
 8007d24:	4803      	ldr	r0, [pc, #12]	@ (8007d34 <stdio_exit_handler+0x14>)
 8007d26:	f000 b869 	b.w	8007dfc <_fwalk_sglue>
 8007d2a:	bf00      	nop
 8007d2c:	2000000c 	.word	0x2000000c
 8007d30:	08008875 	.word	0x08008875
 8007d34:	2000001c 	.word	0x2000001c

08007d38 <cleanup_stdio>:
 8007d38:	6841      	ldr	r1, [r0, #4]
 8007d3a:	4b0c      	ldr	r3, [pc, #48]	@ (8007d6c <cleanup_stdio+0x34>)
 8007d3c:	4299      	cmp	r1, r3
 8007d3e:	b510      	push	{r4, lr}
 8007d40:	4604      	mov	r4, r0
 8007d42:	d001      	beq.n	8007d48 <cleanup_stdio+0x10>
 8007d44:	f000 fd96 	bl	8008874 <_fflush_r>
 8007d48:	68a1      	ldr	r1, [r4, #8]
 8007d4a:	4b09      	ldr	r3, [pc, #36]	@ (8007d70 <cleanup_stdio+0x38>)
 8007d4c:	4299      	cmp	r1, r3
 8007d4e:	d002      	beq.n	8007d56 <cleanup_stdio+0x1e>
 8007d50:	4620      	mov	r0, r4
 8007d52:	f000 fd8f 	bl	8008874 <_fflush_r>
 8007d56:	68e1      	ldr	r1, [r4, #12]
 8007d58:	4b06      	ldr	r3, [pc, #24]	@ (8007d74 <cleanup_stdio+0x3c>)
 8007d5a:	4299      	cmp	r1, r3
 8007d5c:	d004      	beq.n	8007d68 <cleanup_stdio+0x30>
 8007d5e:	4620      	mov	r0, r4
 8007d60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007d64:	f000 bd86 	b.w	8008874 <_fflush_r>
 8007d68:	bd10      	pop	{r4, pc}
 8007d6a:	bf00      	nop
 8007d6c:	200005b8 	.word	0x200005b8
 8007d70:	20000620 	.word	0x20000620
 8007d74:	20000688 	.word	0x20000688

08007d78 <global_stdio_init.part.0>:
 8007d78:	b510      	push	{r4, lr}
 8007d7a:	4b0b      	ldr	r3, [pc, #44]	@ (8007da8 <global_stdio_init.part.0+0x30>)
 8007d7c:	4c0b      	ldr	r4, [pc, #44]	@ (8007dac <global_stdio_init.part.0+0x34>)
 8007d7e:	4a0c      	ldr	r2, [pc, #48]	@ (8007db0 <global_stdio_init.part.0+0x38>)
 8007d80:	601a      	str	r2, [r3, #0]
 8007d82:	4620      	mov	r0, r4
 8007d84:	2200      	movs	r2, #0
 8007d86:	2104      	movs	r1, #4
 8007d88:	f7ff ff94 	bl	8007cb4 <std>
 8007d8c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8007d90:	2201      	movs	r2, #1
 8007d92:	2109      	movs	r1, #9
 8007d94:	f7ff ff8e 	bl	8007cb4 <std>
 8007d98:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8007d9c:	2202      	movs	r2, #2
 8007d9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007da2:	2112      	movs	r1, #18
 8007da4:	f7ff bf86 	b.w	8007cb4 <std>
 8007da8:	200006f0 	.word	0x200006f0
 8007dac:	200005b8 	.word	0x200005b8
 8007db0:	08007d21 	.word	0x08007d21

08007db4 <__sfp_lock_acquire>:
 8007db4:	4801      	ldr	r0, [pc, #4]	@ (8007dbc <__sfp_lock_acquire+0x8>)
 8007db6:	f000 b90e 	b.w	8007fd6 <__retarget_lock_acquire_recursive>
 8007dba:	bf00      	nop
 8007dbc:	200006f9 	.word	0x200006f9

08007dc0 <__sfp_lock_release>:
 8007dc0:	4801      	ldr	r0, [pc, #4]	@ (8007dc8 <__sfp_lock_release+0x8>)
 8007dc2:	f000 b909 	b.w	8007fd8 <__retarget_lock_release_recursive>
 8007dc6:	bf00      	nop
 8007dc8:	200006f9 	.word	0x200006f9

08007dcc <__sinit>:
 8007dcc:	b510      	push	{r4, lr}
 8007dce:	4604      	mov	r4, r0
 8007dd0:	f7ff fff0 	bl	8007db4 <__sfp_lock_acquire>
 8007dd4:	6a23      	ldr	r3, [r4, #32]
 8007dd6:	b11b      	cbz	r3, 8007de0 <__sinit+0x14>
 8007dd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8007ddc:	f7ff bff0 	b.w	8007dc0 <__sfp_lock_release>
 8007de0:	4b04      	ldr	r3, [pc, #16]	@ (8007df4 <__sinit+0x28>)
 8007de2:	6223      	str	r3, [r4, #32]
 8007de4:	4b04      	ldr	r3, [pc, #16]	@ (8007df8 <__sinit+0x2c>)
 8007de6:	681b      	ldr	r3, [r3, #0]
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d1f5      	bne.n	8007dd8 <__sinit+0xc>
 8007dec:	f7ff ffc4 	bl	8007d78 <global_stdio_init.part.0>
 8007df0:	e7f2      	b.n	8007dd8 <__sinit+0xc>
 8007df2:	bf00      	nop
 8007df4:	08007d39 	.word	0x08007d39
 8007df8:	200006f0 	.word	0x200006f0

08007dfc <_fwalk_sglue>:
 8007dfc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007e00:	4607      	mov	r7, r0
 8007e02:	4688      	mov	r8, r1
 8007e04:	4614      	mov	r4, r2
 8007e06:	2600      	movs	r6, #0
 8007e08:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8007e0c:	f1b9 0901 	subs.w	r9, r9, #1
 8007e10:	d505      	bpl.n	8007e1e <_fwalk_sglue+0x22>
 8007e12:	6824      	ldr	r4, [r4, #0]
 8007e14:	2c00      	cmp	r4, #0
 8007e16:	d1f7      	bne.n	8007e08 <_fwalk_sglue+0xc>
 8007e18:	4630      	mov	r0, r6
 8007e1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007e1e:	89ab      	ldrh	r3, [r5, #12]
 8007e20:	2b01      	cmp	r3, #1
 8007e22:	d907      	bls.n	8007e34 <_fwalk_sglue+0x38>
 8007e24:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8007e28:	3301      	adds	r3, #1
 8007e2a:	d003      	beq.n	8007e34 <_fwalk_sglue+0x38>
 8007e2c:	4629      	mov	r1, r5
 8007e2e:	4638      	mov	r0, r7
 8007e30:	47c0      	blx	r8
 8007e32:	4306      	orrs	r6, r0
 8007e34:	3568      	adds	r5, #104	@ 0x68
 8007e36:	e7e9      	b.n	8007e0c <_fwalk_sglue+0x10>

08007e38 <iprintf>:
 8007e38:	b40f      	push	{r0, r1, r2, r3}
 8007e3a:	b507      	push	{r0, r1, r2, lr}
 8007e3c:	4906      	ldr	r1, [pc, #24]	@ (8007e58 <iprintf+0x20>)
 8007e3e:	ab04      	add	r3, sp, #16
 8007e40:	6808      	ldr	r0, [r1, #0]
 8007e42:	f853 2b04 	ldr.w	r2, [r3], #4
 8007e46:	6881      	ldr	r1, [r0, #8]
 8007e48:	9301      	str	r3, [sp, #4]
 8007e4a:	f000 f9e9 	bl	8008220 <_vfiprintf_r>
 8007e4e:	b003      	add	sp, #12
 8007e50:	f85d eb04 	ldr.w	lr, [sp], #4
 8007e54:	b004      	add	sp, #16
 8007e56:	4770      	bx	lr
 8007e58:	20000018 	.word	0x20000018

08007e5c <__sread>:
 8007e5c:	b510      	push	{r4, lr}
 8007e5e:	460c      	mov	r4, r1
 8007e60:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e64:	f000 f868 	bl	8007f38 <_read_r>
 8007e68:	2800      	cmp	r0, #0
 8007e6a:	bfab      	itete	ge
 8007e6c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8007e6e:	89a3      	ldrhlt	r3, [r4, #12]
 8007e70:	181b      	addge	r3, r3, r0
 8007e72:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8007e76:	bfac      	ite	ge
 8007e78:	6563      	strge	r3, [r4, #84]	@ 0x54
 8007e7a:	81a3      	strhlt	r3, [r4, #12]
 8007e7c:	bd10      	pop	{r4, pc}

08007e7e <__swrite>:
 8007e7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e82:	461f      	mov	r7, r3
 8007e84:	898b      	ldrh	r3, [r1, #12]
 8007e86:	05db      	lsls	r3, r3, #23
 8007e88:	4605      	mov	r5, r0
 8007e8a:	460c      	mov	r4, r1
 8007e8c:	4616      	mov	r6, r2
 8007e8e:	d505      	bpl.n	8007e9c <__swrite+0x1e>
 8007e90:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e94:	2302      	movs	r3, #2
 8007e96:	2200      	movs	r2, #0
 8007e98:	f000 f83c 	bl	8007f14 <_lseek_r>
 8007e9c:	89a3      	ldrh	r3, [r4, #12]
 8007e9e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007ea2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007ea6:	81a3      	strh	r3, [r4, #12]
 8007ea8:	4632      	mov	r2, r6
 8007eaa:	463b      	mov	r3, r7
 8007eac:	4628      	mov	r0, r5
 8007eae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007eb2:	f000 b853 	b.w	8007f5c <_write_r>

08007eb6 <__sseek>:
 8007eb6:	b510      	push	{r4, lr}
 8007eb8:	460c      	mov	r4, r1
 8007eba:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007ebe:	f000 f829 	bl	8007f14 <_lseek_r>
 8007ec2:	1c43      	adds	r3, r0, #1
 8007ec4:	89a3      	ldrh	r3, [r4, #12]
 8007ec6:	bf15      	itete	ne
 8007ec8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8007eca:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8007ece:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8007ed2:	81a3      	strheq	r3, [r4, #12]
 8007ed4:	bf18      	it	ne
 8007ed6:	81a3      	strhne	r3, [r4, #12]
 8007ed8:	bd10      	pop	{r4, pc}

08007eda <__sclose>:
 8007eda:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007ede:	f000 b809 	b.w	8007ef4 <_close_r>

08007ee2 <memset>:
 8007ee2:	4402      	add	r2, r0
 8007ee4:	4603      	mov	r3, r0
 8007ee6:	4293      	cmp	r3, r2
 8007ee8:	d100      	bne.n	8007eec <memset+0xa>
 8007eea:	4770      	bx	lr
 8007eec:	f803 1b01 	strb.w	r1, [r3], #1
 8007ef0:	e7f9      	b.n	8007ee6 <memset+0x4>
	...

08007ef4 <_close_r>:
 8007ef4:	b538      	push	{r3, r4, r5, lr}
 8007ef6:	4d06      	ldr	r5, [pc, #24]	@ (8007f10 <_close_r+0x1c>)
 8007ef8:	2300      	movs	r3, #0
 8007efa:	4604      	mov	r4, r0
 8007efc:	4608      	mov	r0, r1
 8007efe:	602b      	str	r3, [r5, #0]
 8007f00:	f7fa f8e3 	bl	80020ca <_close>
 8007f04:	1c43      	adds	r3, r0, #1
 8007f06:	d102      	bne.n	8007f0e <_close_r+0x1a>
 8007f08:	682b      	ldr	r3, [r5, #0]
 8007f0a:	b103      	cbz	r3, 8007f0e <_close_r+0x1a>
 8007f0c:	6023      	str	r3, [r4, #0]
 8007f0e:	bd38      	pop	{r3, r4, r5, pc}
 8007f10:	200006f4 	.word	0x200006f4

08007f14 <_lseek_r>:
 8007f14:	b538      	push	{r3, r4, r5, lr}
 8007f16:	4d07      	ldr	r5, [pc, #28]	@ (8007f34 <_lseek_r+0x20>)
 8007f18:	4604      	mov	r4, r0
 8007f1a:	4608      	mov	r0, r1
 8007f1c:	4611      	mov	r1, r2
 8007f1e:	2200      	movs	r2, #0
 8007f20:	602a      	str	r2, [r5, #0]
 8007f22:	461a      	mov	r2, r3
 8007f24:	f7fa f8f8 	bl	8002118 <_lseek>
 8007f28:	1c43      	adds	r3, r0, #1
 8007f2a:	d102      	bne.n	8007f32 <_lseek_r+0x1e>
 8007f2c:	682b      	ldr	r3, [r5, #0]
 8007f2e:	b103      	cbz	r3, 8007f32 <_lseek_r+0x1e>
 8007f30:	6023      	str	r3, [r4, #0]
 8007f32:	bd38      	pop	{r3, r4, r5, pc}
 8007f34:	200006f4 	.word	0x200006f4

08007f38 <_read_r>:
 8007f38:	b538      	push	{r3, r4, r5, lr}
 8007f3a:	4d07      	ldr	r5, [pc, #28]	@ (8007f58 <_read_r+0x20>)
 8007f3c:	4604      	mov	r4, r0
 8007f3e:	4608      	mov	r0, r1
 8007f40:	4611      	mov	r1, r2
 8007f42:	2200      	movs	r2, #0
 8007f44:	602a      	str	r2, [r5, #0]
 8007f46:	461a      	mov	r2, r3
 8007f48:	f7fa f8a2 	bl	8002090 <_read>
 8007f4c:	1c43      	adds	r3, r0, #1
 8007f4e:	d102      	bne.n	8007f56 <_read_r+0x1e>
 8007f50:	682b      	ldr	r3, [r5, #0]
 8007f52:	b103      	cbz	r3, 8007f56 <_read_r+0x1e>
 8007f54:	6023      	str	r3, [r4, #0]
 8007f56:	bd38      	pop	{r3, r4, r5, pc}
 8007f58:	200006f4 	.word	0x200006f4

08007f5c <_write_r>:
 8007f5c:	b538      	push	{r3, r4, r5, lr}
 8007f5e:	4d07      	ldr	r5, [pc, #28]	@ (8007f7c <_write_r+0x20>)
 8007f60:	4604      	mov	r4, r0
 8007f62:	4608      	mov	r0, r1
 8007f64:	4611      	mov	r1, r2
 8007f66:	2200      	movs	r2, #0
 8007f68:	602a      	str	r2, [r5, #0]
 8007f6a:	461a      	mov	r2, r3
 8007f6c:	f7f9 fbf6 	bl	800175c <_write>
 8007f70:	1c43      	adds	r3, r0, #1
 8007f72:	d102      	bne.n	8007f7a <_write_r+0x1e>
 8007f74:	682b      	ldr	r3, [r5, #0]
 8007f76:	b103      	cbz	r3, 8007f7a <_write_r+0x1e>
 8007f78:	6023      	str	r3, [r4, #0]
 8007f7a:	bd38      	pop	{r3, r4, r5, pc}
 8007f7c:	200006f4 	.word	0x200006f4

08007f80 <__errno>:
 8007f80:	4b01      	ldr	r3, [pc, #4]	@ (8007f88 <__errno+0x8>)
 8007f82:	6818      	ldr	r0, [r3, #0]
 8007f84:	4770      	bx	lr
 8007f86:	bf00      	nop
 8007f88:	20000018 	.word	0x20000018

08007f8c <__libc_init_array>:
 8007f8c:	b570      	push	{r4, r5, r6, lr}
 8007f8e:	4d0d      	ldr	r5, [pc, #52]	@ (8007fc4 <__libc_init_array+0x38>)
 8007f90:	4c0d      	ldr	r4, [pc, #52]	@ (8007fc8 <__libc_init_array+0x3c>)
 8007f92:	1b64      	subs	r4, r4, r5
 8007f94:	10a4      	asrs	r4, r4, #2
 8007f96:	2600      	movs	r6, #0
 8007f98:	42a6      	cmp	r6, r4
 8007f9a:	d109      	bne.n	8007fb0 <__libc_init_array+0x24>
 8007f9c:	4d0b      	ldr	r5, [pc, #44]	@ (8007fcc <__libc_init_array+0x40>)
 8007f9e:	4c0c      	ldr	r4, [pc, #48]	@ (8007fd0 <__libc_init_array+0x44>)
 8007fa0:	f000 fdb8 	bl	8008b14 <_init>
 8007fa4:	1b64      	subs	r4, r4, r5
 8007fa6:	10a4      	asrs	r4, r4, #2
 8007fa8:	2600      	movs	r6, #0
 8007faa:	42a6      	cmp	r6, r4
 8007fac:	d105      	bne.n	8007fba <__libc_init_array+0x2e>
 8007fae:	bd70      	pop	{r4, r5, r6, pc}
 8007fb0:	f855 3b04 	ldr.w	r3, [r5], #4
 8007fb4:	4798      	blx	r3
 8007fb6:	3601      	adds	r6, #1
 8007fb8:	e7ee      	b.n	8007f98 <__libc_init_array+0xc>
 8007fba:	f855 3b04 	ldr.w	r3, [r5], #4
 8007fbe:	4798      	blx	r3
 8007fc0:	3601      	adds	r6, #1
 8007fc2:	e7f2      	b.n	8007faa <__libc_init_array+0x1e>
 8007fc4:	08008be0 	.word	0x08008be0
 8007fc8:	08008be0 	.word	0x08008be0
 8007fcc:	08008be0 	.word	0x08008be0
 8007fd0:	08008be4 	.word	0x08008be4

08007fd4 <__retarget_lock_init_recursive>:
 8007fd4:	4770      	bx	lr

08007fd6 <__retarget_lock_acquire_recursive>:
 8007fd6:	4770      	bx	lr

08007fd8 <__retarget_lock_release_recursive>:
 8007fd8:	4770      	bx	lr
	...

08007fdc <_free_r>:
 8007fdc:	b538      	push	{r3, r4, r5, lr}
 8007fde:	4605      	mov	r5, r0
 8007fe0:	2900      	cmp	r1, #0
 8007fe2:	d041      	beq.n	8008068 <_free_r+0x8c>
 8007fe4:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007fe8:	1f0c      	subs	r4, r1, #4
 8007fea:	2b00      	cmp	r3, #0
 8007fec:	bfb8      	it	lt
 8007fee:	18e4      	addlt	r4, r4, r3
 8007ff0:	f000 f8e0 	bl	80081b4 <__malloc_lock>
 8007ff4:	4a1d      	ldr	r2, [pc, #116]	@ (800806c <_free_r+0x90>)
 8007ff6:	6813      	ldr	r3, [r2, #0]
 8007ff8:	b933      	cbnz	r3, 8008008 <_free_r+0x2c>
 8007ffa:	6063      	str	r3, [r4, #4]
 8007ffc:	6014      	str	r4, [r2, #0]
 8007ffe:	4628      	mov	r0, r5
 8008000:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008004:	f000 b8dc 	b.w	80081c0 <__malloc_unlock>
 8008008:	42a3      	cmp	r3, r4
 800800a:	d908      	bls.n	800801e <_free_r+0x42>
 800800c:	6820      	ldr	r0, [r4, #0]
 800800e:	1821      	adds	r1, r4, r0
 8008010:	428b      	cmp	r3, r1
 8008012:	bf01      	itttt	eq
 8008014:	6819      	ldreq	r1, [r3, #0]
 8008016:	685b      	ldreq	r3, [r3, #4]
 8008018:	1809      	addeq	r1, r1, r0
 800801a:	6021      	streq	r1, [r4, #0]
 800801c:	e7ed      	b.n	8007ffa <_free_r+0x1e>
 800801e:	461a      	mov	r2, r3
 8008020:	685b      	ldr	r3, [r3, #4]
 8008022:	b10b      	cbz	r3, 8008028 <_free_r+0x4c>
 8008024:	42a3      	cmp	r3, r4
 8008026:	d9fa      	bls.n	800801e <_free_r+0x42>
 8008028:	6811      	ldr	r1, [r2, #0]
 800802a:	1850      	adds	r0, r2, r1
 800802c:	42a0      	cmp	r0, r4
 800802e:	d10b      	bne.n	8008048 <_free_r+0x6c>
 8008030:	6820      	ldr	r0, [r4, #0]
 8008032:	4401      	add	r1, r0
 8008034:	1850      	adds	r0, r2, r1
 8008036:	4283      	cmp	r3, r0
 8008038:	6011      	str	r1, [r2, #0]
 800803a:	d1e0      	bne.n	8007ffe <_free_r+0x22>
 800803c:	6818      	ldr	r0, [r3, #0]
 800803e:	685b      	ldr	r3, [r3, #4]
 8008040:	6053      	str	r3, [r2, #4]
 8008042:	4408      	add	r0, r1
 8008044:	6010      	str	r0, [r2, #0]
 8008046:	e7da      	b.n	8007ffe <_free_r+0x22>
 8008048:	d902      	bls.n	8008050 <_free_r+0x74>
 800804a:	230c      	movs	r3, #12
 800804c:	602b      	str	r3, [r5, #0]
 800804e:	e7d6      	b.n	8007ffe <_free_r+0x22>
 8008050:	6820      	ldr	r0, [r4, #0]
 8008052:	1821      	adds	r1, r4, r0
 8008054:	428b      	cmp	r3, r1
 8008056:	bf04      	itt	eq
 8008058:	6819      	ldreq	r1, [r3, #0]
 800805a:	685b      	ldreq	r3, [r3, #4]
 800805c:	6063      	str	r3, [r4, #4]
 800805e:	bf04      	itt	eq
 8008060:	1809      	addeq	r1, r1, r0
 8008062:	6021      	streq	r1, [r4, #0]
 8008064:	6054      	str	r4, [r2, #4]
 8008066:	e7ca      	b.n	8007ffe <_free_r+0x22>
 8008068:	bd38      	pop	{r3, r4, r5, pc}
 800806a:	bf00      	nop
 800806c:	20000700 	.word	0x20000700

08008070 <sbrk_aligned>:
 8008070:	b570      	push	{r4, r5, r6, lr}
 8008072:	4e0f      	ldr	r6, [pc, #60]	@ (80080b0 <sbrk_aligned+0x40>)
 8008074:	460c      	mov	r4, r1
 8008076:	6831      	ldr	r1, [r6, #0]
 8008078:	4605      	mov	r5, r0
 800807a:	b911      	cbnz	r1, 8008082 <sbrk_aligned+0x12>
 800807c:	f000 fcb6 	bl	80089ec <_sbrk_r>
 8008080:	6030      	str	r0, [r6, #0]
 8008082:	4621      	mov	r1, r4
 8008084:	4628      	mov	r0, r5
 8008086:	f000 fcb1 	bl	80089ec <_sbrk_r>
 800808a:	1c43      	adds	r3, r0, #1
 800808c:	d103      	bne.n	8008096 <sbrk_aligned+0x26>
 800808e:	f04f 34ff 	mov.w	r4, #4294967295
 8008092:	4620      	mov	r0, r4
 8008094:	bd70      	pop	{r4, r5, r6, pc}
 8008096:	1cc4      	adds	r4, r0, #3
 8008098:	f024 0403 	bic.w	r4, r4, #3
 800809c:	42a0      	cmp	r0, r4
 800809e:	d0f8      	beq.n	8008092 <sbrk_aligned+0x22>
 80080a0:	1a21      	subs	r1, r4, r0
 80080a2:	4628      	mov	r0, r5
 80080a4:	f000 fca2 	bl	80089ec <_sbrk_r>
 80080a8:	3001      	adds	r0, #1
 80080aa:	d1f2      	bne.n	8008092 <sbrk_aligned+0x22>
 80080ac:	e7ef      	b.n	800808e <sbrk_aligned+0x1e>
 80080ae:	bf00      	nop
 80080b0:	200006fc 	.word	0x200006fc

080080b4 <_malloc_r>:
 80080b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80080b8:	1ccd      	adds	r5, r1, #3
 80080ba:	f025 0503 	bic.w	r5, r5, #3
 80080be:	3508      	adds	r5, #8
 80080c0:	2d0c      	cmp	r5, #12
 80080c2:	bf38      	it	cc
 80080c4:	250c      	movcc	r5, #12
 80080c6:	2d00      	cmp	r5, #0
 80080c8:	4606      	mov	r6, r0
 80080ca:	db01      	blt.n	80080d0 <_malloc_r+0x1c>
 80080cc:	42a9      	cmp	r1, r5
 80080ce:	d904      	bls.n	80080da <_malloc_r+0x26>
 80080d0:	230c      	movs	r3, #12
 80080d2:	6033      	str	r3, [r6, #0]
 80080d4:	2000      	movs	r0, #0
 80080d6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80080da:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80081b0 <_malloc_r+0xfc>
 80080de:	f000 f869 	bl	80081b4 <__malloc_lock>
 80080e2:	f8d8 3000 	ldr.w	r3, [r8]
 80080e6:	461c      	mov	r4, r3
 80080e8:	bb44      	cbnz	r4, 800813c <_malloc_r+0x88>
 80080ea:	4629      	mov	r1, r5
 80080ec:	4630      	mov	r0, r6
 80080ee:	f7ff ffbf 	bl	8008070 <sbrk_aligned>
 80080f2:	1c43      	adds	r3, r0, #1
 80080f4:	4604      	mov	r4, r0
 80080f6:	d158      	bne.n	80081aa <_malloc_r+0xf6>
 80080f8:	f8d8 4000 	ldr.w	r4, [r8]
 80080fc:	4627      	mov	r7, r4
 80080fe:	2f00      	cmp	r7, #0
 8008100:	d143      	bne.n	800818a <_malloc_r+0xd6>
 8008102:	2c00      	cmp	r4, #0
 8008104:	d04b      	beq.n	800819e <_malloc_r+0xea>
 8008106:	6823      	ldr	r3, [r4, #0]
 8008108:	4639      	mov	r1, r7
 800810a:	4630      	mov	r0, r6
 800810c:	eb04 0903 	add.w	r9, r4, r3
 8008110:	f000 fc6c 	bl	80089ec <_sbrk_r>
 8008114:	4581      	cmp	r9, r0
 8008116:	d142      	bne.n	800819e <_malloc_r+0xea>
 8008118:	6821      	ldr	r1, [r4, #0]
 800811a:	1a6d      	subs	r5, r5, r1
 800811c:	4629      	mov	r1, r5
 800811e:	4630      	mov	r0, r6
 8008120:	f7ff ffa6 	bl	8008070 <sbrk_aligned>
 8008124:	3001      	adds	r0, #1
 8008126:	d03a      	beq.n	800819e <_malloc_r+0xea>
 8008128:	6823      	ldr	r3, [r4, #0]
 800812a:	442b      	add	r3, r5
 800812c:	6023      	str	r3, [r4, #0]
 800812e:	f8d8 3000 	ldr.w	r3, [r8]
 8008132:	685a      	ldr	r2, [r3, #4]
 8008134:	bb62      	cbnz	r2, 8008190 <_malloc_r+0xdc>
 8008136:	f8c8 7000 	str.w	r7, [r8]
 800813a:	e00f      	b.n	800815c <_malloc_r+0xa8>
 800813c:	6822      	ldr	r2, [r4, #0]
 800813e:	1b52      	subs	r2, r2, r5
 8008140:	d420      	bmi.n	8008184 <_malloc_r+0xd0>
 8008142:	2a0b      	cmp	r2, #11
 8008144:	d917      	bls.n	8008176 <_malloc_r+0xc2>
 8008146:	1961      	adds	r1, r4, r5
 8008148:	42a3      	cmp	r3, r4
 800814a:	6025      	str	r5, [r4, #0]
 800814c:	bf18      	it	ne
 800814e:	6059      	strne	r1, [r3, #4]
 8008150:	6863      	ldr	r3, [r4, #4]
 8008152:	bf08      	it	eq
 8008154:	f8c8 1000 	streq.w	r1, [r8]
 8008158:	5162      	str	r2, [r4, r5]
 800815a:	604b      	str	r3, [r1, #4]
 800815c:	4630      	mov	r0, r6
 800815e:	f000 f82f 	bl	80081c0 <__malloc_unlock>
 8008162:	f104 000b 	add.w	r0, r4, #11
 8008166:	1d23      	adds	r3, r4, #4
 8008168:	f020 0007 	bic.w	r0, r0, #7
 800816c:	1ac2      	subs	r2, r0, r3
 800816e:	bf1c      	itt	ne
 8008170:	1a1b      	subne	r3, r3, r0
 8008172:	50a3      	strne	r3, [r4, r2]
 8008174:	e7af      	b.n	80080d6 <_malloc_r+0x22>
 8008176:	6862      	ldr	r2, [r4, #4]
 8008178:	42a3      	cmp	r3, r4
 800817a:	bf0c      	ite	eq
 800817c:	f8c8 2000 	streq.w	r2, [r8]
 8008180:	605a      	strne	r2, [r3, #4]
 8008182:	e7eb      	b.n	800815c <_malloc_r+0xa8>
 8008184:	4623      	mov	r3, r4
 8008186:	6864      	ldr	r4, [r4, #4]
 8008188:	e7ae      	b.n	80080e8 <_malloc_r+0x34>
 800818a:	463c      	mov	r4, r7
 800818c:	687f      	ldr	r7, [r7, #4]
 800818e:	e7b6      	b.n	80080fe <_malloc_r+0x4a>
 8008190:	461a      	mov	r2, r3
 8008192:	685b      	ldr	r3, [r3, #4]
 8008194:	42a3      	cmp	r3, r4
 8008196:	d1fb      	bne.n	8008190 <_malloc_r+0xdc>
 8008198:	2300      	movs	r3, #0
 800819a:	6053      	str	r3, [r2, #4]
 800819c:	e7de      	b.n	800815c <_malloc_r+0xa8>
 800819e:	230c      	movs	r3, #12
 80081a0:	6033      	str	r3, [r6, #0]
 80081a2:	4630      	mov	r0, r6
 80081a4:	f000 f80c 	bl	80081c0 <__malloc_unlock>
 80081a8:	e794      	b.n	80080d4 <_malloc_r+0x20>
 80081aa:	6005      	str	r5, [r0, #0]
 80081ac:	e7d6      	b.n	800815c <_malloc_r+0xa8>
 80081ae:	bf00      	nop
 80081b0:	20000700 	.word	0x20000700

080081b4 <__malloc_lock>:
 80081b4:	4801      	ldr	r0, [pc, #4]	@ (80081bc <__malloc_lock+0x8>)
 80081b6:	f7ff bf0e 	b.w	8007fd6 <__retarget_lock_acquire_recursive>
 80081ba:	bf00      	nop
 80081bc:	200006f8 	.word	0x200006f8

080081c0 <__malloc_unlock>:
 80081c0:	4801      	ldr	r0, [pc, #4]	@ (80081c8 <__malloc_unlock+0x8>)
 80081c2:	f7ff bf09 	b.w	8007fd8 <__retarget_lock_release_recursive>
 80081c6:	bf00      	nop
 80081c8:	200006f8 	.word	0x200006f8

080081cc <__sfputc_r>:
 80081cc:	6893      	ldr	r3, [r2, #8]
 80081ce:	3b01      	subs	r3, #1
 80081d0:	2b00      	cmp	r3, #0
 80081d2:	b410      	push	{r4}
 80081d4:	6093      	str	r3, [r2, #8]
 80081d6:	da08      	bge.n	80081ea <__sfputc_r+0x1e>
 80081d8:	6994      	ldr	r4, [r2, #24]
 80081da:	42a3      	cmp	r3, r4
 80081dc:	db01      	blt.n	80081e2 <__sfputc_r+0x16>
 80081de:	290a      	cmp	r1, #10
 80081e0:	d103      	bne.n	80081ea <__sfputc_r+0x1e>
 80081e2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80081e6:	f000 bb6d 	b.w	80088c4 <__swbuf_r>
 80081ea:	6813      	ldr	r3, [r2, #0]
 80081ec:	1c58      	adds	r0, r3, #1
 80081ee:	6010      	str	r0, [r2, #0]
 80081f0:	7019      	strb	r1, [r3, #0]
 80081f2:	4608      	mov	r0, r1
 80081f4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80081f8:	4770      	bx	lr

080081fa <__sfputs_r>:
 80081fa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80081fc:	4606      	mov	r6, r0
 80081fe:	460f      	mov	r7, r1
 8008200:	4614      	mov	r4, r2
 8008202:	18d5      	adds	r5, r2, r3
 8008204:	42ac      	cmp	r4, r5
 8008206:	d101      	bne.n	800820c <__sfputs_r+0x12>
 8008208:	2000      	movs	r0, #0
 800820a:	e007      	b.n	800821c <__sfputs_r+0x22>
 800820c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008210:	463a      	mov	r2, r7
 8008212:	4630      	mov	r0, r6
 8008214:	f7ff ffda 	bl	80081cc <__sfputc_r>
 8008218:	1c43      	adds	r3, r0, #1
 800821a:	d1f3      	bne.n	8008204 <__sfputs_r+0xa>
 800821c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008220 <_vfiprintf_r>:
 8008220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008224:	460d      	mov	r5, r1
 8008226:	b09d      	sub	sp, #116	@ 0x74
 8008228:	4614      	mov	r4, r2
 800822a:	4698      	mov	r8, r3
 800822c:	4606      	mov	r6, r0
 800822e:	b118      	cbz	r0, 8008238 <_vfiprintf_r+0x18>
 8008230:	6a03      	ldr	r3, [r0, #32]
 8008232:	b90b      	cbnz	r3, 8008238 <_vfiprintf_r+0x18>
 8008234:	f7ff fdca 	bl	8007dcc <__sinit>
 8008238:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800823a:	07d9      	lsls	r1, r3, #31
 800823c:	d405      	bmi.n	800824a <_vfiprintf_r+0x2a>
 800823e:	89ab      	ldrh	r3, [r5, #12]
 8008240:	059a      	lsls	r2, r3, #22
 8008242:	d402      	bmi.n	800824a <_vfiprintf_r+0x2a>
 8008244:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008246:	f7ff fec6 	bl	8007fd6 <__retarget_lock_acquire_recursive>
 800824a:	89ab      	ldrh	r3, [r5, #12]
 800824c:	071b      	lsls	r3, r3, #28
 800824e:	d501      	bpl.n	8008254 <_vfiprintf_r+0x34>
 8008250:	692b      	ldr	r3, [r5, #16]
 8008252:	b99b      	cbnz	r3, 800827c <_vfiprintf_r+0x5c>
 8008254:	4629      	mov	r1, r5
 8008256:	4630      	mov	r0, r6
 8008258:	f000 fb72 	bl	8008940 <__swsetup_r>
 800825c:	b170      	cbz	r0, 800827c <_vfiprintf_r+0x5c>
 800825e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008260:	07dc      	lsls	r4, r3, #31
 8008262:	d504      	bpl.n	800826e <_vfiprintf_r+0x4e>
 8008264:	f04f 30ff 	mov.w	r0, #4294967295
 8008268:	b01d      	add	sp, #116	@ 0x74
 800826a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800826e:	89ab      	ldrh	r3, [r5, #12]
 8008270:	0598      	lsls	r0, r3, #22
 8008272:	d4f7      	bmi.n	8008264 <_vfiprintf_r+0x44>
 8008274:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008276:	f7ff feaf 	bl	8007fd8 <__retarget_lock_release_recursive>
 800827a:	e7f3      	b.n	8008264 <_vfiprintf_r+0x44>
 800827c:	2300      	movs	r3, #0
 800827e:	9309      	str	r3, [sp, #36]	@ 0x24
 8008280:	2320      	movs	r3, #32
 8008282:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8008286:	f8cd 800c 	str.w	r8, [sp, #12]
 800828a:	2330      	movs	r3, #48	@ 0x30
 800828c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800843c <_vfiprintf_r+0x21c>
 8008290:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8008294:	f04f 0901 	mov.w	r9, #1
 8008298:	4623      	mov	r3, r4
 800829a:	469a      	mov	sl, r3
 800829c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80082a0:	b10a      	cbz	r2, 80082a6 <_vfiprintf_r+0x86>
 80082a2:	2a25      	cmp	r2, #37	@ 0x25
 80082a4:	d1f9      	bne.n	800829a <_vfiprintf_r+0x7a>
 80082a6:	ebba 0b04 	subs.w	fp, sl, r4
 80082aa:	d00b      	beq.n	80082c4 <_vfiprintf_r+0xa4>
 80082ac:	465b      	mov	r3, fp
 80082ae:	4622      	mov	r2, r4
 80082b0:	4629      	mov	r1, r5
 80082b2:	4630      	mov	r0, r6
 80082b4:	f7ff ffa1 	bl	80081fa <__sfputs_r>
 80082b8:	3001      	adds	r0, #1
 80082ba:	f000 80a7 	beq.w	800840c <_vfiprintf_r+0x1ec>
 80082be:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80082c0:	445a      	add	r2, fp
 80082c2:	9209      	str	r2, [sp, #36]	@ 0x24
 80082c4:	f89a 3000 	ldrb.w	r3, [sl]
 80082c8:	2b00      	cmp	r3, #0
 80082ca:	f000 809f 	beq.w	800840c <_vfiprintf_r+0x1ec>
 80082ce:	2300      	movs	r3, #0
 80082d0:	f04f 32ff 	mov.w	r2, #4294967295
 80082d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80082d8:	f10a 0a01 	add.w	sl, sl, #1
 80082dc:	9304      	str	r3, [sp, #16]
 80082de:	9307      	str	r3, [sp, #28]
 80082e0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 80082e4:	931a      	str	r3, [sp, #104]	@ 0x68
 80082e6:	4654      	mov	r4, sl
 80082e8:	2205      	movs	r2, #5
 80082ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80082ee:	4853      	ldr	r0, [pc, #332]	@ (800843c <_vfiprintf_r+0x21c>)
 80082f0:	f7f7 ff6e 	bl	80001d0 <memchr>
 80082f4:	9a04      	ldr	r2, [sp, #16]
 80082f6:	b9d8      	cbnz	r0, 8008330 <_vfiprintf_r+0x110>
 80082f8:	06d1      	lsls	r1, r2, #27
 80082fa:	bf44      	itt	mi
 80082fc:	2320      	movmi	r3, #32
 80082fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008302:	0713      	lsls	r3, r2, #28
 8008304:	bf44      	itt	mi
 8008306:	232b      	movmi	r3, #43	@ 0x2b
 8008308:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800830c:	f89a 3000 	ldrb.w	r3, [sl]
 8008310:	2b2a      	cmp	r3, #42	@ 0x2a
 8008312:	d015      	beq.n	8008340 <_vfiprintf_r+0x120>
 8008314:	9a07      	ldr	r2, [sp, #28]
 8008316:	4654      	mov	r4, sl
 8008318:	2000      	movs	r0, #0
 800831a:	f04f 0c0a 	mov.w	ip, #10
 800831e:	4621      	mov	r1, r4
 8008320:	f811 3b01 	ldrb.w	r3, [r1], #1
 8008324:	3b30      	subs	r3, #48	@ 0x30
 8008326:	2b09      	cmp	r3, #9
 8008328:	d94b      	bls.n	80083c2 <_vfiprintf_r+0x1a2>
 800832a:	b1b0      	cbz	r0, 800835a <_vfiprintf_r+0x13a>
 800832c:	9207      	str	r2, [sp, #28]
 800832e:	e014      	b.n	800835a <_vfiprintf_r+0x13a>
 8008330:	eba0 0308 	sub.w	r3, r0, r8
 8008334:	fa09 f303 	lsl.w	r3, r9, r3
 8008338:	4313      	orrs	r3, r2
 800833a:	9304      	str	r3, [sp, #16]
 800833c:	46a2      	mov	sl, r4
 800833e:	e7d2      	b.n	80082e6 <_vfiprintf_r+0xc6>
 8008340:	9b03      	ldr	r3, [sp, #12]
 8008342:	1d19      	adds	r1, r3, #4
 8008344:	681b      	ldr	r3, [r3, #0]
 8008346:	9103      	str	r1, [sp, #12]
 8008348:	2b00      	cmp	r3, #0
 800834a:	bfbb      	ittet	lt
 800834c:	425b      	neglt	r3, r3
 800834e:	f042 0202 	orrlt.w	r2, r2, #2
 8008352:	9307      	strge	r3, [sp, #28]
 8008354:	9307      	strlt	r3, [sp, #28]
 8008356:	bfb8      	it	lt
 8008358:	9204      	strlt	r2, [sp, #16]
 800835a:	7823      	ldrb	r3, [r4, #0]
 800835c:	2b2e      	cmp	r3, #46	@ 0x2e
 800835e:	d10a      	bne.n	8008376 <_vfiprintf_r+0x156>
 8008360:	7863      	ldrb	r3, [r4, #1]
 8008362:	2b2a      	cmp	r3, #42	@ 0x2a
 8008364:	d132      	bne.n	80083cc <_vfiprintf_r+0x1ac>
 8008366:	9b03      	ldr	r3, [sp, #12]
 8008368:	1d1a      	adds	r2, r3, #4
 800836a:	681b      	ldr	r3, [r3, #0]
 800836c:	9203      	str	r2, [sp, #12]
 800836e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8008372:	3402      	adds	r4, #2
 8008374:	9305      	str	r3, [sp, #20]
 8008376:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800844c <_vfiprintf_r+0x22c>
 800837a:	7821      	ldrb	r1, [r4, #0]
 800837c:	2203      	movs	r2, #3
 800837e:	4650      	mov	r0, sl
 8008380:	f7f7 ff26 	bl	80001d0 <memchr>
 8008384:	b138      	cbz	r0, 8008396 <_vfiprintf_r+0x176>
 8008386:	9b04      	ldr	r3, [sp, #16]
 8008388:	eba0 000a 	sub.w	r0, r0, sl
 800838c:	2240      	movs	r2, #64	@ 0x40
 800838e:	4082      	lsls	r2, r0
 8008390:	4313      	orrs	r3, r2
 8008392:	3401      	adds	r4, #1
 8008394:	9304      	str	r3, [sp, #16]
 8008396:	f814 1b01 	ldrb.w	r1, [r4], #1
 800839a:	4829      	ldr	r0, [pc, #164]	@ (8008440 <_vfiprintf_r+0x220>)
 800839c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80083a0:	2206      	movs	r2, #6
 80083a2:	f7f7 ff15 	bl	80001d0 <memchr>
 80083a6:	2800      	cmp	r0, #0
 80083a8:	d03f      	beq.n	800842a <_vfiprintf_r+0x20a>
 80083aa:	4b26      	ldr	r3, [pc, #152]	@ (8008444 <_vfiprintf_r+0x224>)
 80083ac:	bb1b      	cbnz	r3, 80083f6 <_vfiprintf_r+0x1d6>
 80083ae:	9b03      	ldr	r3, [sp, #12]
 80083b0:	3307      	adds	r3, #7
 80083b2:	f023 0307 	bic.w	r3, r3, #7
 80083b6:	3308      	adds	r3, #8
 80083b8:	9303      	str	r3, [sp, #12]
 80083ba:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80083bc:	443b      	add	r3, r7
 80083be:	9309      	str	r3, [sp, #36]	@ 0x24
 80083c0:	e76a      	b.n	8008298 <_vfiprintf_r+0x78>
 80083c2:	fb0c 3202 	mla	r2, ip, r2, r3
 80083c6:	460c      	mov	r4, r1
 80083c8:	2001      	movs	r0, #1
 80083ca:	e7a8      	b.n	800831e <_vfiprintf_r+0xfe>
 80083cc:	2300      	movs	r3, #0
 80083ce:	3401      	adds	r4, #1
 80083d0:	9305      	str	r3, [sp, #20]
 80083d2:	4619      	mov	r1, r3
 80083d4:	f04f 0c0a 	mov.w	ip, #10
 80083d8:	4620      	mov	r0, r4
 80083da:	f810 2b01 	ldrb.w	r2, [r0], #1
 80083de:	3a30      	subs	r2, #48	@ 0x30
 80083e0:	2a09      	cmp	r2, #9
 80083e2:	d903      	bls.n	80083ec <_vfiprintf_r+0x1cc>
 80083e4:	2b00      	cmp	r3, #0
 80083e6:	d0c6      	beq.n	8008376 <_vfiprintf_r+0x156>
 80083e8:	9105      	str	r1, [sp, #20]
 80083ea:	e7c4      	b.n	8008376 <_vfiprintf_r+0x156>
 80083ec:	fb0c 2101 	mla	r1, ip, r1, r2
 80083f0:	4604      	mov	r4, r0
 80083f2:	2301      	movs	r3, #1
 80083f4:	e7f0      	b.n	80083d8 <_vfiprintf_r+0x1b8>
 80083f6:	ab03      	add	r3, sp, #12
 80083f8:	9300      	str	r3, [sp, #0]
 80083fa:	462a      	mov	r2, r5
 80083fc:	4b12      	ldr	r3, [pc, #72]	@ (8008448 <_vfiprintf_r+0x228>)
 80083fe:	a904      	add	r1, sp, #16
 8008400:	4630      	mov	r0, r6
 8008402:	f3af 8000 	nop.w
 8008406:	4607      	mov	r7, r0
 8008408:	1c78      	adds	r0, r7, #1
 800840a:	d1d6      	bne.n	80083ba <_vfiprintf_r+0x19a>
 800840c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800840e:	07d9      	lsls	r1, r3, #31
 8008410:	d405      	bmi.n	800841e <_vfiprintf_r+0x1fe>
 8008412:	89ab      	ldrh	r3, [r5, #12]
 8008414:	059a      	lsls	r2, r3, #22
 8008416:	d402      	bmi.n	800841e <_vfiprintf_r+0x1fe>
 8008418:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800841a:	f7ff fddd 	bl	8007fd8 <__retarget_lock_release_recursive>
 800841e:	89ab      	ldrh	r3, [r5, #12]
 8008420:	065b      	lsls	r3, r3, #25
 8008422:	f53f af1f 	bmi.w	8008264 <_vfiprintf_r+0x44>
 8008426:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008428:	e71e      	b.n	8008268 <_vfiprintf_r+0x48>
 800842a:	ab03      	add	r3, sp, #12
 800842c:	9300      	str	r3, [sp, #0]
 800842e:	462a      	mov	r2, r5
 8008430:	4b05      	ldr	r3, [pc, #20]	@ (8008448 <_vfiprintf_r+0x228>)
 8008432:	a904      	add	r1, sp, #16
 8008434:	4630      	mov	r0, r6
 8008436:	f000 f879 	bl	800852c <_printf_i>
 800843a:	e7e4      	b.n	8008406 <_vfiprintf_r+0x1e6>
 800843c:	08008ba4 	.word	0x08008ba4
 8008440:	08008bae 	.word	0x08008bae
 8008444:	00000000 	.word	0x00000000
 8008448:	080081fb 	.word	0x080081fb
 800844c:	08008baa 	.word	0x08008baa

08008450 <_printf_common>:
 8008450:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8008454:	4616      	mov	r6, r2
 8008456:	4698      	mov	r8, r3
 8008458:	688a      	ldr	r2, [r1, #8]
 800845a:	690b      	ldr	r3, [r1, #16]
 800845c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8008460:	4293      	cmp	r3, r2
 8008462:	bfb8      	it	lt
 8008464:	4613      	movlt	r3, r2
 8008466:	6033      	str	r3, [r6, #0]
 8008468:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800846c:	4607      	mov	r7, r0
 800846e:	460c      	mov	r4, r1
 8008470:	b10a      	cbz	r2, 8008476 <_printf_common+0x26>
 8008472:	3301      	adds	r3, #1
 8008474:	6033      	str	r3, [r6, #0]
 8008476:	6823      	ldr	r3, [r4, #0]
 8008478:	0699      	lsls	r1, r3, #26
 800847a:	bf42      	ittt	mi
 800847c:	6833      	ldrmi	r3, [r6, #0]
 800847e:	3302      	addmi	r3, #2
 8008480:	6033      	strmi	r3, [r6, #0]
 8008482:	6825      	ldr	r5, [r4, #0]
 8008484:	f015 0506 	ands.w	r5, r5, #6
 8008488:	d106      	bne.n	8008498 <_printf_common+0x48>
 800848a:	f104 0a19 	add.w	sl, r4, #25
 800848e:	68e3      	ldr	r3, [r4, #12]
 8008490:	6832      	ldr	r2, [r6, #0]
 8008492:	1a9b      	subs	r3, r3, r2
 8008494:	42ab      	cmp	r3, r5
 8008496:	dc26      	bgt.n	80084e6 <_printf_common+0x96>
 8008498:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800849c:	6822      	ldr	r2, [r4, #0]
 800849e:	3b00      	subs	r3, #0
 80084a0:	bf18      	it	ne
 80084a2:	2301      	movne	r3, #1
 80084a4:	0692      	lsls	r2, r2, #26
 80084a6:	d42b      	bmi.n	8008500 <_printf_common+0xb0>
 80084a8:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80084ac:	4641      	mov	r1, r8
 80084ae:	4638      	mov	r0, r7
 80084b0:	47c8      	blx	r9
 80084b2:	3001      	adds	r0, #1
 80084b4:	d01e      	beq.n	80084f4 <_printf_common+0xa4>
 80084b6:	6823      	ldr	r3, [r4, #0]
 80084b8:	6922      	ldr	r2, [r4, #16]
 80084ba:	f003 0306 	and.w	r3, r3, #6
 80084be:	2b04      	cmp	r3, #4
 80084c0:	bf02      	ittt	eq
 80084c2:	68e5      	ldreq	r5, [r4, #12]
 80084c4:	6833      	ldreq	r3, [r6, #0]
 80084c6:	1aed      	subeq	r5, r5, r3
 80084c8:	68a3      	ldr	r3, [r4, #8]
 80084ca:	bf0c      	ite	eq
 80084cc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80084d0:	2500      	movne	r5, #0
 80084d2:	4293      	cmp	r3, r2
 80084d4:	bfc4      	itt	gt
 80084d6:	1a9b      	subgt	r3, r3, r2
 80084d8:	18ed      	addgt	r5, r5, r3
 80084da:	2600      	movs	r6, #0
 80084dc:	341a      	adds	r4, #26
 80084de:	42b5      	cmp	r5, r6
 80084e0:	d11a      	bne.n	8008518 <_printf_common+0xc8>
 80084e2:	2000      	movs	r0, #0
 80084e4:	e008      	b.n	80084f8 <_printf_common+0xa8>
 80084e6:	2301      	movs	r3, #1
 80084e8:	4652      	mov	r2, sl
 80084ea:	4641      	mov	r1, r8
 80084ec:	4638      	mov	r0, r7
 80084ee:	47c8      	blx	r9
 80084f0:	3001      	adds	r0, #1
 80084f2:	d103      	bne.n	80084fc <_printf_common+0xac>
 80084f4:	f04f 30ff 	mov.w	r0, #4294967295
 80084f8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80084fc:	3501      	adds	r5, #1
 80084fe:	e7c6      	b.n	800848e <_printf_common+0x3e>
 8008500:	18e1      	adds	r1, r4, r3
 8008502:	1c5a      	adds	r2, r3, #1
 8008504:	2030      	movs	r0, #48	@ 0x30
 8008506:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800850a:	4422      	add	r2, r4
 800850c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8008510:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8008514:	3302      	adds	r3, #2
 8008516:	e7c7      	b.n	80084a8 <_printf_common+0x58>
 8008518:	2301      	movs	r3, #1
 800851a:	4622      	mov	r2, r4
 800851c:	4641      	mov	r1, r8
 800851e:	4638      	mov	r0, r7
 8008520:	47c8      	blx	r9
 8008522:	3001      	adds	r0, #1
 8008524:	d0e6      	beq.n	80084f4 <_printf_common+0xa4>
 8008526:	3601      	adds	r6, #1
 8008528:	e7d9      	b.n	80084de <_printf_common+0x8e>
	...

0800852c <_printf_i>:
 800852c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8008530:	7e0f      	ldrb	r7, [r1, #24]
 8008532:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8008534:	2f78      	cmp	r7, #120	@ 0x78
 8008536:	4691      	mov	r9, r2
 8008538:	4680      	mov	r8, r0
 800853a:	460c      	mov	r4, r1
 800853c:	469a      	mov	sl, r3
 800853e:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8008542:	d807      	bhi.n	8008554 <_printf_i+0x28>
 8008544:	2f62      	cmp	r7, #98	@ 0x62
 8008546:	d80a      	bhi.n	800855e <_printf_i+0x32>
 8008548:	2f00      	cmp	r7, #0
 800854a:	f000 80d2 	beq.w	80086f2 <_printf_i+0x1c6>
 800854e:	2f58      	cmp	r7, #88	@ 0x58
 8008550:	f000 80b9 	beq.w	80086c6 <_printf_i+0x19a>
 8008554:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8008558:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800855c:	e03a      	b.n	80085d4 <_printf_i+0xa8>
 800855e:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8008562:	2b15      	cmp	r3, #21
 8008564:	d8f6      	bhi.n	8008554 <_printf_i+0x28>
 8008566:	a101      	add	r1, pc, #4	@ (adr r1, 800856c <_printf_i+0x40>)
 8008568:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800856c:	080085c5 	.word	0x080085c5
 8008570:	080085d9 	.word	0x080085d9
 8008574:	08008555 	.word	0x08008555
 8008578:	08008555 	.word	0x08008555
 800857c:	08008555 	.word	0x08008555
 8008580:	08008555 	.word	0x08008555
 8008584:	080085d9 	.word	0x080085d9
 8008588:	08008555 	.word	0x08008555
 800858c:	08008555 	.word	0x08008555
 8008590:	08008555 	.word	0x08008555
 8008594:	08008555 	.word	0x08008555
 8008598:	080086d9 	.word	0x080086d9
 800859c:	08008603 	.word	0x08008603
 80085a0:	08008693 	.word	0x08008693
 80085a4:	08008555 	.word	0x08008555
 80085a8:	08008555 	.word	0x08008555
 80085ac:	080086fb 	.word	0x080086fb
 80085b0:	08008555 	.word	0x08008555
 80085b4:	08008603 	.word	0x08008603
 80085b8:	08008555 	.word	0x08008555
 80085bc:	08008555 	.word	0x08008555
 80085c0:	0800869b 	.word	0x0800869b
 80085c4:	6833      	ldr	r3, [r6, #0]
 80085c6:	1d1a      	adds	r2, r3, #4
 80085c8:	681b      	ldr	r3, [r3, #0]
 80085ca:	6032      	str	r2, [r6, #0]
 80085cc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80085d0:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80085d4:	2301      	movs	r3, #1
 80085d6:	e09d      	b.n	8008714 <_printf_i+0x1e8>
 80085d8:	6833      	ldr	r3, [r6, #0]
 80085da:	6820      	ldr	r0, [r4, #0]
 80085dc:	1d19      	adds	r1, r3, #4
 80085de:	6031      	str	r1, [r6, #0]
 80085e0:	0606      	lsls	r6, r0, #24
 80085e2:	d501      	bpl.n	80085e8 <_printf_i+0xbc>
 80085e4:	681d      	ldr	r5, [r3, #0]
 80085e6:	e003      	b.n	80085f0 <_printf_i+0xc4>
 80085e8:	0645      	lsls	r5, r0, #25
 80085ea:	d5fb      	bpl.n	80085e4 <_printf_i+0xb8>
 80085ec:	f9b3 5000 	ldrsh.w	r5, [r3]
 80085f0:	2d00      	cmp	r5, #0
 80085f2:	da03      	bge.n	80085fc <_printf_i+0xd0>
 80085f4:	232d      	movs	r3, #45	@ 0x2d
 80085f6:	426d      	negs	r5, r5
 80085f8:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80085fc:	4859      	ldr	r0, [pc, #356]	@ (8008764 <_printf_i+0x238>)
 80085fe:	230a      	movs	r3, #10
 8008600:	e011      	b.n	8008626 <_printf_i+0xfa>
 8008602:	6821      	ldr	r1, [r4, #0]
 8008604:	6833      	ldr	r3, [r6, #0]
 8008606:	0608      	lsls	r0, r1, #24
 8008608:	f853 5b04 	ldr.w	r5, [r3], #4
 800860c:	d402      	bmi.n	8008614 <_printf_i+0xe8>
 800860e:	0649      	lsls	r1, r1, #25
 8008610:	bf48      	it	mi
 8008612:	b2ad      	uxthmi	r5, r5
 8008614:	2f6f      	cmp	r7, #111	@ 0x6f
 8008616:	4853      	ldr	r0, [pc, #332]	@ (8008764 <_printf_i+0x238>)
 8008618:	6033      	str	r3, [r6, #0]
 800861a:	bf14      	ite	ne
 800861c:	230a      	movne	r3, #10
 800861e:	2308      	moveq	r3, #8
 8008620:	2100      	movs	r1, #0
 8008622:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8008626:	6866      	ldr	r6, [r4, #4]
 8008628:	60a6      	str	r6, [r4, #8]
 800862a:	2e00      	cmp	r6, #0
 800862c:	bfa2      	ittt	ge
 800862e:	6821      	ldrge	r1, [r4, #0]
 8008630:	f021 0104 	bicge.w	r1, r1, #4
 8008634:	6021      	strge	r1, [r4, #0]
 8008636:	b90d      	cbnz	r5, 800863c <_printf_i+0x110>
 8008638:	2e00      	cmp	r6, #0
 800863a:	d04b      	beq.n	80086d4 <_printf_i+0x1a8>
 800863c:	4616      	mov	r6, r2
 800863e:	fbb5 f1f3 	udiv	r1, r5, r3
 8008642:	fb03 5711 	mls	r7, r3, r1, r5
 8008646:	5dc7      	ldrb	r7, [r0, r7]
 8008648:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800864c:	462f      	mov	r7, r5
 800864e:	42bb      	cmp	r3, r7
 8008650:	460d      	mov	r5, r1
 8008652:	d9f4      	bls.n	800863e <_printf_i+0x112>
 8008654:	2b08      	cmp	r3, #8
 8008656:	d10b      	bne.n	8008670 <_printf_i+0x144>
 8008658:	6823      	ldr	r3, [r4, #0]
 800865a:	07df      	lsls	r7, r3, #31
 800865c:	d508      	bpl.n	8008670 <_printf_i+0x144>
 800865e:	6923      	ldr	r3, [r4, #16]
 8008660:	6861      	ldr	r1, [r4, #4]
 8008662:	4299      	cmp	r1, r3
 8008664:	bfde      	ittt	le
 8008666:	2330      	movle	r3, #48	@ 0x30
 8008668:	f806 3c01 	strble.w	r3, [r6, #-1]
 800866c:	f106 36ff 	addle.w	r6, r6, #4294967295
 8008670:	1b92      	subs	r2, r2, r6
 8008672:	6122      	str	r2, [r4, #16]
 8008674:	f8cd a000 	str.w	sl, [sp]
 8008678:	464b      	mov	r3, r9
 800867a:	aa03      	add	r2, sp, #12
 800867c:	4621      	mov	r1, r4
 800867e:	4640      	mov	r0, r8
 8008680:	f7ff fee6 	bl	8008450 <_printf_common>
 8008684:	3001      	adds	r0, #1
 8008686:	d14a      	bne.n	800871e <_printf_i+0x1f2>
 8008688:	f04f 30ff 	mov.w	r0, #4294967295
 800868c:	b004      	add	sp, #16
 800868e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8008692:	6823      	ldr	r3, [r4, #0]
 8008694:	f043 0320 	orr.w	r3, r3, #32
 8008698:	6023      	str	r3, [r4, #0]
 800869a:	4833      	ldr	r0, [pc, #204]	@ (8008768 <_printf_i+0x23c>)
 800869c:	2778      	movs	r7, #120	@ 0x78
 800869e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80086a2:	6823      	ldr	r3, [r4, #0]
 80086a4:	6831      	ldr	r1, [r6, #0]
 80086a6:	061f      	lsls	r7, r3, #24
 80086a8:	f851 5b04 	ldr.w	r5, [r1], #4
 80086ac:	d402      	bmi.n	80086b4 <_printf_i+0x188>
 80086ae:	065f      	lsls	r7, r3, #25
 80086b0:	bf48      	it	mi
 80086b2:	b2ad      	uxthmi	r5, r5
 80086b4:	6031      	str	r1, [r6, #0]
 80086b6:	07d9      	lsls	r1, r3, #31
 80086b8:	bf44      	itt	mi
 80086ba:	f043 0320 	orrmi.w	r3, r3, #32
 80086be:	6023      	strmi	r3, [r4, #0]
 80086c0:	b11d      	cbz	r5, 80086ca <_printf_i+0x19e>
 80086c2:	2310      	movs	r3, #16
 80086c4:	e7ac      	b.n	8008620 <_printf_i+0xf4>
 80086c6:	4827      	ldr	r0, [pc, #156]	@ (8008764 <_printf_i+0x238>)
 80086c8:	e7e9      	b.n	800869e <_printf_i+0x172>
 80086ca:	6823      	ldr	r3, [r4, #0]
 80086cc:	f023 0320 	bic.w	r3, r3, #32
 80086d0:	6023      	str	r3, [r4, #0]
 80086d2:	e7f6      	b.n	80086c2 <_printf_i+0x196>
 80086d4:	4616      	mov	r6, r2
 80086d6:	e7bd      	b.n	8008654 <_printf_i+0x128>
 80086d8:	6833      	ldr	r3, [r6, #0]
 80086da:	6825      	ldr	r5, [r4, #0]
 80086dc:	6961      	ldr	r1, [r4, #20]
 80086de:	1d18      	adds	r0, r3, #4
 80086e0:	6030      	str	r0, [r6, #0]
 80086e2:	062e      	lsls	r6, r5, #24
 80086e4:	681b      	ldr	r3, [r3, #0]
 80086e6:	d501      	bpl.n	80086ec <_printf_i+0x1c0>
 80086e8:	6019      	str	r1, [r3, #0]
 80086ea:	e002      	b.n	80086f2 <_printf_i+0x1c6>
 80086ec:	0668      	lsls	r0, r5, #25
 80086ee:	d5fb      	bpl.n	80086e8 <_printf_i+0x1bc>
 80086f0:	8019      	strh	r1, [r3, #0]
 80086f2:	2300      	movs	r3, #0
 80086f4:	6123      	str	r3, [r4, #16]
 80086f6:	4616      	mov	r6, r2
 80086f8:	e7bc      	b.n	8008674 <_printf_i+0x148>
 80086fa:	6833      	ldr	r3, [r6, #0]
 80086fc:	1d1a      	adds	r2, r3, #4
 80086fe:	6032      	str	r2, [r6, #0]
 8008700:	681e      	ldr	r6, [r3, #0]
 8008702:	6862      	ldr	r2, [r4, #4]
 8008704:	2100      	movs	r1, #0
 8008706:	4630      	mov	r0, r6
 8008708:	f7f7 fd62 	bl	80001d0 <memchr>
 800870c:	b108      	cbz	r0, 8008712 <_printf_i+0x1e6>
 800870e:	1b80      	subs	r0, r0, r6
 8008710:	6060      	str	r0, [r4, #4]
 8008712:	6863      	ldr	r3, [r4, #4]
 8008714:	6123      	str	r3, [r4, #16]
 8008716:	2300      	movs	r3, #0
 8008718:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800871c:	e7aa      	b.n	8008674 <_printf_i+0x148>
 800871e:	6923      	ldr	r3, [r4, #16]
 8008720:	4632      	mov	r2, r6
 8008722:	4649      	mov	r1, r9
 8008724:	4640      	mov	r0, r8
 8008726:	47d0      	blx	sl
 8008728:	3001      	adds	r0, #1
 800872a:	d0ad      	beq.n	8008688 <_printf_i+0x15c>
 800872c:	6823      	ldr	r3, [r4, #0]
 800872e:	079b      	lsls	r3, r3, #30
 8008730:	d413      	bmi.n	800875a <_printf_i+0x22e>
 8008732:	68e0      	ldr	r0, [r4, #12]
 8008734:	9b03      	ldr	r3, [sp, #12]
 8008736:	4298      	cmp	r0, r3
 8008738:	bfb8      	it	lt
 800873a:	4618      	movlt	r0, r3
 800873c:	e7a6      	b.n	800868c <_printf_i+0x160>
 800873e:	2301      	movs	r3, #1
 8008740:	4632      	mov	r2, r6
 8008742:	4649      	mov	r1, r9
 8008744:	4640      	mov	r0, r8
 8008746:	47d0      	blx	sl
 8008748:	3001      	adds	r0, #1
 800874a:	d09d      	beq.n	8008688 <_printf_i+0x15c>
 800874c:	3501      	adds	r5, #1
 800874e:	68e3      	ldr	r3, [r4, #12]
 8008750:	9903      	ldr	r1, [sp, #12]
 8008752:	1a5b      	subs	r3, r3, r1
 8008754:	42ab      	cmp	r3, r5
 8008756:	dcf2      	bgt.n	800873e <_printf_i+0x212>
 8008758:	e7eb      	b.n	8008732 <_printf_i+0x206>
 800875a:	2500      	movs	r5, #0
 800875c:	f104 0619 	add.w	r6, r4, #25
 8008760:	e7f5      	b.n	800874e <_printf_i+0x222>
 8008762:	bf00      	nop
 8008764:	08008bb5 	.word	0x08008bb5
 8008768:	08008bc6 	.word	0x08008bc6

0800876c <__sflush_r>:
 800876c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8008770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008774:	0716      	lsls	r6, r2, #28
 8008776:	4605      	mov	r5, r0
 8008778:	460c      	mov	r4, r1
 800877a:	d454      	bmi.n	8008826 <__sflush_r+0xba>
 800877c:	684b      	ldr	r3, [r1, #4]
 800877e:	2b00      	cmp	r3, #0
 8008780:	dc02      	bgt.n	8008788 <__sflush_r+0x1c>
 8008782:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8008784:	2b00      	cmp	r3, #0
 8008786:	dd48      	ble.n	800881a <__sflush_r+0xae>
 8008788:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800878a:	2e00      	cmp	r6, #0
 800878c:	d045      	beq.n	800881a <__sflush_r+0xae>
 800878e:	2300      	movs	r3, #0
 8008790:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8008794:	682f      	ldr	r7, [r5, #0]
 8008796:	6a21      	ldr	r1, [r4, #32]
 8008798:	602b      	str	r3, [r5, #0]
 800879a:	d030      	beq.n	80087fe <__sflush_r+0x92>
 800879c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800879e:	89a3      	ldrh	r3, [r4, #12]
 80087a0:	0759      	lsls	r1, r3, #29
 80087a2:	d505      	bpl.n	80087b0 <__sflush_r+0x44>
 80087a4:	6863      	ldr	r3, [r4, #4]
 80087a6:	1ad2      	subs	r2, r2, r3
 80087a8:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80087aa:	b10b      	cbz	r3, 80087b0 <__sflush_r+0x44>
 80087ac:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80087ae:	1ad2      	subs	r2, r2, r3
 80087b0:	2300      	movs	r3, #0
 80087b2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80087b4:	6a21      	ldr	r1, [r4, #32]
 80087b6:	4628      	mov	r0, r5
 80087b8:	47b0      	blx	r6
 80087ba:	1c43      	adds	r3, r0, #1
 80087bc:	89a3      	ldrh	r3, [r4, #12]
 80087be:	d106      	bne.n	80087ce <__sflush_r+0x62>
 80087c0:	6829      	ldr	r1, [r5, #0]
 80087c2:	291d      	cmp	r1, #29
 80087c4:	d82b      	bhi.n	800881e <__sflush_r+0xb2>
 80087c6:	4a2a      	ldr	r2, [pc, #168]	@ (8008870 <__sflush_r+0x104>)
 80087c8:	410a      	asrs	r2, r1
 80087ca:	07d6      	lsls	r6, r2, #31
 80087cc:	d427      	bmi.n	800881e <__sflush_r+0xb2>
 80087ce:	2200      	movs	r2, #0
 80087d0:	6062      	str	r2, [r4, #4]
 80087d2:	04d9      	lsls	r1, r3, #19
 80087d4:	6922      	ldr	r2, [r4, #16]
 80087d6:	6022      	str	r2, [r4, #0]
 80087d8:	d504      	bpl.n	80087e4 <__sflush_r+0x78>
 80087da:	1c42      	adds	r2, r0, #1
 80087dc:	d101      	bne.n	80087e2 <__sflush_r+0x76>
 80087de:	682b      	ldr	r3, [r5, #0]
 80087e0:	b903      	cbnz	r3, 80087e4 <__sflush_r+0x78>
 80087e2:	6560      	str	r0, [r4, #84]	@ 0x54
 80087e4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80087e6:	602f      	str	r7, [r5, #0]
 80087e8:	b1b9      	cbz	r1, 800881a <__sflush_r+0xae>
 80087ea:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80087ee:	4299      	cmp	r1, r3
 80087f0:	d002      	beq.n	80087f8 <__sflush_r+0x8c>
 80087f2:	4628      	mov	r0, r5
 80087f4:	f7ff fbf2 	bl	8007fdc <_free_r>
 80087f8:	2300      	movs	r3, #0
 80087fa:	6363      	str	r3, [r4, #52]	@ 0x34
 80087fc:	e00d      	b.n	800881a <__sflush_r+0xae>
 80087fe:	2301      	movs	r3, #1
 8008800:	4628      	mov	r0, r5
 8008802:	47b0      	blx	r6
 8008804:	4602      	mov	r2, r0
 8008806:	1c50      	adds	r0, r2, #1
 8008808:	d1c9      	bne.n	800879e <__sflush_r+0x32>
 800880a:	682b      	ldr	r3, [r5, #0]
 800880c:	2b00      	cmp	r3, #0
 800880e:	d0c6      	beq.n	800879e <__sflush_r+0x32>
 8008810:	2b1d      	cmp	r3, #29
 8008812:	d001      	beq.n	8008818 <__sflush_r+0xac>
 8008814:	2b16      	cmp	r3, #22
 8008816:	d11e      	bne.n	8008856 <__sflush_r+0xea>
 8008818:	602f      	str	r7, [r5, #0]
 800881a:	2000      	movs	r0, #0
 800881c:	e022      	b.n	8008864 <__sflush_r+0xf8>
 800881e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008822:	b21b      	sxth	r3, r3
 8008824:	e01b      	b.n	800885e <__sflush_r+0xf2>
 8008826:	690f      	ldr	r7, [r1, #16]
 8008828:	2f00      	cmp	r7, #0
 800882a:	d0f6      	beq.n	800881a <__sflush_r+0xae>
 800882c:	0793      	lsls	r3, r2, #30
 800882e:	680e      	ldr	r6, [r1, #0]
 8008830:	bf08      	it	eq
 8008832:	694b      	ldreq	r3, [r1, #20]
 8008834:	600f      	str	r7, [r1, #0]
 8008836:	bf18      	it	ne
 8008838:	2300      	movne	r3, #0
 800883a:	eba6 0807 	sub.w	r8, r6, r7
 800883e:	608b      	str	r3, [r1, #8]
 8008840:	f1b8 0f00 	cmp.w	r8, #0
 8008844:	dde9      	ble.n	800881a <__sflush_r+0xae>
 8008846:	6a21      	ldr	r1, [r4, #32]
 8008848:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800884a:	4643      	mov	r3, r8
 800884c:	463a      	mov	r2, r7
 800884e:	4628      	mov	r0, r5
 8008850:	47b0      	blx	r6
 8008852:	2800      	cmp	r0, #0
 8008854:	dc08      	bgt.n	8008868 <__sflush_r+0xfc>
 8008856:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800885a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800885e:	81a3      	strh	r3, [r4, #12]
 8008860:	f04f 30ff 	mov.w	r0, #4294967295
 8008864:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008868:	4407      	add	r7, r0
 800886a:	eba8 0800 	sub.w	r8, r8, r0
 800886e:	e7e7      	b.n	8008840 <__sflush_r+0xd4>
 8008870:	dfbffffe 	.word	0xdfbffffe

08008874 <_fflush_r>:
 8008874:	b538      	push	{r3, r4, r5, lr}
 8008876:	690b      	ldr	r3, [r1, #16]
 8008878:	4605      	mov	r5, r0
 800887a:	460c      	mov	r4, r1
 800887c:	b913      	cbnz	r3, 8008884 <_fflush_r+0x10>
 800887e:	2500      	movs	r5, #0
 8008880:	4628      	mov	r0, r5
 8008882:	bd38      	pop	{r3, r4, r5, pc}
 8008884:	b118      	cbz	r0, 800888e <_fflush_r+0x1a>
 8008886:	6a03      	ldr	r3, [r0, #32]
 8008888:	b90b      	cbnz	r3, 800888e <_fflush_r+0x1a>
 800888a:	f7ff fa9f 	bl	8007dcc <__sinit>
 800888e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008892:	2b00      	cmp	r3, #0
 8008894:	d0f3      	beq.n	800887e <_fflush_r+0xa>
 8008896:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8008898:	07d0      	lsls	r0, r2, #31
 800889a:	d404      	bmi.n	80088a6 <_fflush_r+0x32>
 800889c:	0599      	lsls	r1, r3, #22
 800889e:	d402      	bmi.n	80088a6 <_fflush_r+0x32>
 80088a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80088a2:	f7ff fb98 	bl	8007fd6 <__retarget_lock_acquire_recursive>
 80088a6:	4628      	mov	r0, r5
 80088a8:	4621      	mov	r1, r4
 80088aa:	f7ff ff5f 	bl	800876c <__sflush_r>
 80088ae:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80088b0:	07da      	lsls	r2, r3, #31
 80088b2:	4605      	mov	r5, r0
 80088b4:	d4e4      	bmi.n	8008880 <_fflush_r+0xc>
 80088b6:	89a3      	ldrh	r3, [r4, #12]
 80088b8:	059b      	lsls	r3, r3, #22
 80088ba:	d4e1      	bmi.n	8008880 <_fflush_r+0xc>
 80088bc:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80088be:	f7ff fb8b 	bl	8007fd8 <__retarget_lock_release_recursive>
 80088c2:	e7dd      	b.n	8008880 <_fflush_r+0xc>

080088c4 <__swbuf_r>:
 80088c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088c6:	460e      	mov	r6, r1
 80088c8:	4614      	mov	r4, r2
 80088ca:	4605      	mov	r5, r0
 80088cc:	b118      	cbz	r0, 80088d6 <__swbuf_r+0x12>
 80088ce:	6a03      	ldr	r3, [r0, #32]
 80088d0:	b90b      	cbnz	r3, 80088d6 <__swbuf_r+0x12>
 80088d2:	f7ff fa7b 	bl	8007dcc <__sinit>
 80088d6:	69a3      	ldr	r3, [r4, #24]
 80088d8:	60a3      	str	r3, [r4, #8]
 80088da:	89a3      	ldrh	r3, [r4, #12]
 80088dc:	071a      	lsls	r2, r3, #28
 80088de:	d501      	bpl.n	80088e4 <__swbuf_r+0x20>
 80088e0:	6923      	ldr	r3, [r4, #16]
 80088e2:	b943      	cbnz	r3, 80088f6 <__swbuf_r+0x32>
 80088e4:	4621      	mov	r1, r4
 80088e6:	4628      	mov	r0, r5
 80088e8:	f000 f82a 	bl	8008940 <__swsetup_r>
 80088ec:	b118      	cbz	r0, 80088f6 <__swbuf_r+0x32>
 80088ee:	f04f 37ff 	mov.w	r7, #4294967295
 80088f2:	4638      	mov	r0, r7
 80088f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80088f6:	6823      	ldr	r3, [r4, #0]
 80088f8:	6922      	ldr	r2, [r4, #16]
 80088fa:	1a98      	subs	r0, r3, r2
 80088fc:	6963      	ldr	r3, [r4, #20]
 80088fe:	b2f6      	uxtb	r6, r6
 8008900:	4283      	cmp	r3, r0
 8008902:	4637      	mov	r7, r6
 8008904:	dc05      	bgt.n	8008912 <__swbuf_r+0x4e>
 8008906:	4621      	mov	r1, r4
 8008908:	4628      	mov	r0, r5
 800890a:	f7ff ffb3 	bl	8008874 <_fflush_r>
 800890e:	2800      	cmp	r0, #0
 8008910:	d1ed      	bne.n	80088ee <__swbuf_r+0x2a>
 8008912:	68a3      	ldr	r3, [r4, #8]
 8008914:	3b01      	subs	r3, #1
 8008916:	60a3      	str	r3, [r4, #8]
 8008918:	6823      	ldr	r3, [r4, #0]
 800891a:	1c5a      	adds	r2, r3, #1
 800891c:	6022      	str	r2, [r4, #0]
 800891e:	701e      	strb	r6, [r3, #0]
 8008920:	6962      	ldr	r2, [r4, #20]
 8008922:	1c43      	adds	r3, r0, #1
 8008924:	429a      	cmp	r2, r3
 8008926:	d004      	beq.n	8008932 <__swbuf_r+0x6e>
 8008928:	89a3      	ldrh	r3, [r4, #12]
 800892a:	07db      	lsls	r3, r3, #31
 800892c:	d5e1      	bpl.n	80088f2 <__swbuf_r+0x2e>
 800892e:	2e0a      	cmp	r6, #10
 8008930:	d1df      	bne.n	80088f2 <__swbuf_r+0x2e>
 8008932:	4621      	mov	r1, r4
 8008934:	4628      	mov	r0, r5
 8008936:	f7ff ff9d 	bl	8008874 <_fflush_r>
 800893a:	2800      	cmp	r0, #0
 800893c:	d0d9      	beq.n	80088f2 <__swbuf_r+0x2e>
 800893e:	e7d6      	b.n	80088ee <__swbuf_r+0x2a>

08008940 <__swsetup_r>:
 8008940:	b538      	push	{r3, r4, r5, lr}
 8008942:	4b29      	ldr	r3, [pc, #164]	@ (80089e8 <__swsetup_r+0xa8>)
 8008944:	4605      	mov	r5, r0
 8008946:	6818      	ldr	r0, [r3, #0]
 8008948:	460c      	mov	r4, r1
 800894a:	b118      	cbz	r0, 8008954 <__swsetup_r+0x14>
 800894c:	6a03      	ldr	r3, [r0, #32]
 800894e:	b90b      	cbnz	r3, 8008954 <__swsetup_r+0x14>
 8008950:	f7ff fa3c 	bl	8007dcc <__sinit>
 8008954:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008958:	0719      	lsls	r1, r3, #28
 800895a:	d422      	bmi.n	80089a2 <__swsetup_r+0x62>
 800895c:	06da      	lsls	r2, r3, #27
 800895e:	d407      	bmi.n	8008970 <__swsetup_r+0x30>
 8008960:	2209      	movs	r2, #9
 8008962:	602a      	str	r2, [r5, #0]
 8008964:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8008968:	81a3      	strh	r3, [r4, #12]
 800896a:	f04f 30ff 	mov.w	r0, #4294967295
 800896e:	e033      	b.n	80089d8 <__swsetup_r+0x98>
 8008970:	0758      	lsls	r0, r3, #29
 8008972:	d512      	bpl.n	800899a <__swsetup_r+0x5a>
 8008974:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008976:	b141      	cbz	r1, 800898a <__swsetup_r+0x4a>
 8008978:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800897c:	4299      	cmp	r1, r3
 800897e:	d002      	beq.n	8008986 <__swsetup_r+0x46>
 8008980:	4628      	mov	r0, r5
 8008982:	f7ff fb2b 	bl	8007fdc <_free_r>
 8008986:	2300      	movs	r3, #0
 8008988:	6363      	str	r3, [r4, #52]	@ 0x34
 800898a:	89a3      	ldrh	r3, [r4, #12]
 800898c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008990:	81a3      	strh	r3, [r4, #12]
 8008992:	2300      	movs	r3, #0
 8008994:	6063      	str	r3, [r4, #4]
 8008996:	6923      	ldr	r3, [r4, #16]
 8008998:	6023      	str	r3, [r4, #0]
 800899a:	89a3      	ldrh	r3, [r4, #12]
 800899c:	f043 0308 	orr.w	r3, r3, #8
 80089a0:	81a3      	strh	r3, [r4, #12]
 80089a2:	6923      	ldr	r3, [r4, #16]
 80089a4:	b94b      	cbnz	r3, 80089ba <__swsetup_r+0x7a>
 80089a6:	89a3      	ldrh	r3, [r4, #12]
 80089a8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80089ac:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80089b0:	d003      	beq.n	80089ba <__swsetup_r+0x7a>
 80089b2:	4621      	mov	r1, r4
 80089b4:	4628      	mov	r0, r5
 80089b6:	f000 f84f 	bl	8008a58 <__smakebuf_r>
 80089ba:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80089be:	f013 0201 	ands.w	r2, r3, #1
 80089c2:	d00a      	beq.n	80089da <__swsetup_r+0x9a>
 80089c4:	2200      	movs	r2, #0
 80089c6:	60a2      	str	r2, [r4, #8]
 80089c8:	6962      	ldr	r2, [r4, #20]
 80089ca:	4252      	negs	r2, r2
 80089cc:	61a2      	str	r2, [r4, #24]
 80089ce:	6922      	ldr	r2, [r4, #16]
 80089d0:	b942      	cbnz	r2, 80089e4 <__swsetup_r+0xa4>
 80089d2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80089d6:	d1c5      	bne.n	8008964 <__swsetup_r+0x24>
 80089d8:	bd38      	pop	{r3, r4, r5, pc}
 80089da:	0799      	lsls	r1, r3, #30
 80089dc:	bf58      	it	pl
 80089de:	6962      	ldrpl	r2, [r4, #20]
 80089e0:	60a2      	str	r2, [r4, #8]
 80089e2:	e7f4      	b.n	80089ce <__swsetup_r+0x8e>
 80089e4:	2000      	movs	r0, #0
 80089e6:	e7f7      	b.n	80089d8 <__swsetup_r+0x98>
 80089e8:	20000018 	.word	0x20000018

080089ec <_sbrk_r>:
 80089ec:	b538      	push	{r3, r4, r5, lr}
 80089ee:	4d06      	ldr	r5, [pc, #24]	@ (8008a08 <_sbrk_r+0x1c>)
 80089f0:	2300      	movs	r3, #0
 80089f2:	4604      	mov	r4, r0
 80089f4:	4608      	mov	r0, r1
 80089f6:	602b      	str	r3, [r5, #0]
 80089f8:	f7f9 fb9c 	bl	8002134 <_sbrk>
 80089fc:	1c43      	adds	r3, r0, #1
 80089fe:	d102      	bne.n	8008a06 <_sbrk_r+0x1a>
 8008a00:	682b      	ldr	r3, [r5, #0]
 8008a02:	b103      	cbz	r3, 8008a06 <_sbrk_r+0x1a>
 8008a04:	6023      	str	r3, [r4, #0]
 8008a06:	bd38      	pop	{r3, r4, r5, pc}
 8008a08:	200006f4 	.word	0x200006f4

08008a0c <__swhatbuf_r>:
 8008a0c:	b570      	push	{r4, r5, r6, lr}
 8008a0e:	460c      	mov	r4, r1
 8008a10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8008a14:	2900      	cmp	r1, #0
 8008a16:	b096      	sub	sp, #88	@ 0x58
 8008a18:	4615      	mov	r5, r2
 8008a1a:	461e      	mov	r6, r3
 8008a1c:	da0d      	bge.n	8008a3a <__swhatbuf_r+0x2e>
 8008a1e:	89a3      	ldrh	r3, [r4, #12]
 8008a20:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8008a24:	f04f 0100 	mov.w	r1, #0
 8008a28:	bf14      	ite	ne
 8008a2a:	2340      	movne	r3, #64	@ 0x40
 8008a2c:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008a30:	2000      	movs	r0, #0
 8008a32:	6031      	str	r1, [r6, #0]
 8008a34:	602b      	str	r3, [r5, #0]
 8008a36:	b016      	add	sp, #88	@ 0x58
 8008a38:	bd70      	pop	{r4, r5, r6, pc}
 8008a3a:	466a      	mov	r2, sp
 8008a3c:	f000 f848 	bl	8008ad0 <_fstat_r>
 8008a40:	2800      	cmp	r0, #0
 8008a42:	dbec      	blt.n	8008a1e <__swhatbuf_r+0x12>
 8008a44:	9901      	ldr	r1, [sp, #4]
 8008a46:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8008a4a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008a4e:	4259      	negs	r1, r3
 8008a50:	4159      	adcs	r1, r3
 8008a52:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8008a56:	e7eb      	b.n	8008a30 <__swhatbuf_r+0x24>

08008a58 <__smakebuf_r>:
 8008a58:	898b      	ldrh	r3, [r1, #12]
 8008a5a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008a5c:	079d      	lsls	r5, r3, #30
 8008a5e:	4606      	mov	r6, r0
 8008a60:	460c      	mov	r4, r1
 8008a62:	d507      	bpl.n	8008a74 <__smakebuf_r+0x1c>
 8008a64:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8008a68:	6023      	str	r3, [r4, #0]
 8008a6a:	6123      	str	r3, [r4, #16]
 8008a6c:	2301      	movs	r3, #1
 8008a6e:	6163      	str	r3, [r4, #20]
 8008a70:	b003      	add	sp, #12
 8008a72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008a74:	ab01      	add	r3, sp, #4
 8008a76:	466a      	mov	r2, sp
 8008a78:	f7ff ffc8 	bl	8008a0c <__swhatbuf_r>
 8008a7c:	9f00      	ldr	r7, [sp, #0]
 8008a7e:	4605      	mov	r5, r0
 8008a80:	4639      	mov	r1, r7
 8008a82:	4630      	mov	r0, r6
 8008a84:	f7ff fb16 	bl	80080b4 <_malloc_r>
 8008a88:	b948      	cbnz	r0, 8008a9e <__smakebuf_r+0x46>
 8008a8a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008a8e:	059a      	lsls	r2, r3, #22
 8008a90:	d4ee      	bmi.n	8008a70 <__smakebuf_r+0x18>
 8008a92:	f023 0303 	bic.w	r3, r3, #3
 8008a96:	f043 0302 	orr.w	r3, r3, #2
 8008a9a:	81a3      	strh	r3, [r4, #12]
 8008a9c:	e7e2      	b.n	8008a64 <__smakebuf_r+0xc>
 8008a9e:	89a3      	ldrh	r3, [r4, #12]
 8008aa0:	6020      	str	r0, [r4, #0]
 8008aa2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8008aa6:	81a3      	strh	r3, [r4, #12]
 8008aa8:	9b01      	ldr	r3, [sp, #4]
 8008aaa:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8008aae:	b15b      	cbz	r3, 8008ac8 <__smakebuf_r+0x70>
 8008ab0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008ab4:	4630      	mov	r0, r6
 8008ab6:	f000 f81d 	bl	8008af4 <_isatty_r>
 8008aba:	b128      	cbz	r0, 8008ac8 <__smakebuf_r+0x70>
 8008abc:	89a3      	ldrh	r3, [r4, #12]
 8008abe:	f023 0303 	bic.w	r3, r3, #3
 8008ac2:	f043 0301 	orr.w	r3, r3, #1
 8008ac6:	81a3      	strh	r3, [r4, #12]
 8008ac8:	89a3      	ldrh	r3, [r4, #12]
 8008aca:	431d      	orrs	r5, r3
 8008acc:	81a5      	strh	r5, [r4, #12]
 8008ace:	e7cf      	b.n	8008a70 <__smakebuf_r+0x18>

08008ad0 <_fstat_r>:
 8008ad0:	b538      	push	{r3, r4, r5, lr}
 8008ad2:	4d07      	ldr	r5, [pc, #28]	@ (8008af0 <_fstat_r+0x20>)
 8008ad4:	2300      	movs	r3, #0
 8008ad6:	4604      	mov	r4, r0
 8008ad8:	4608      	mov	r0, r1
 8008ada:	4611      	mov	r1, r2
 8008adc:	602b      	str	r3, [r5, #0]
 8008ade:	f7f9 fb00 	bl	80020e2 <_fstat>
 8008ae2:	1c43      	adds	r3, r0, #1
 8008ae4:	d102      	bne.n	8008aec <_fstat_r+0x1c>
 8008ae6:	682b      	ldr	r3, [r5, #0]
 8008ae8:	b103      	cbz	r3, 8008aec <_fstat_r+0x1c>
 8008aea:	6023      	str	r3, [r4, #0]
 8008aec:	bd38      	pop	{r3, r4, r5, pc}
 8008aee:	bf00      	nop
 8008af0:	200006f4 	.word	0x200006f4

08008af4 <_isatty_r>:
 8008af4:	b538      	push	{r3, r4, r5, lr}
 8008af6:	4d06      	ldr	r5, [pc, #24]	@ (8008b10 <_isatty_r+0x1c>)
 8008af8:	2300      	movs	r3, #0
 8008afa:	4604      	mov	r4, r0
 8008afc:	4608      	mov	r0, r1
 8008afe:	602b      	str	r3, [r5, #0]
 8008b00:	f7f9 faff 	bl	8002102 <_isatty>
 8008b04:	1c43      	adds	r3, r0, #1
 8008b06:	d102      	bne.n	8008b0e <_isatty_r+0x1a>
 8008b08:	682b      	ldr	r3, [r5, #0]
 8008b0a:	b103      	cbz	r3, 8008b0e <_isatty_r+0x1a>
 8008b0c:	6023      	str	r3, [r4, #0]
 8008b0e:	bd38      	pop	{r3, r4, r5, pc}
 8008b10:	200006f4 	.word	0x200006f4

08008b14 <_init>:
 8008b14:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b16:	bf00      	nop
 8008b18:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b1a:	bc08      	pop	{r3}
 8008b1c:	469e      	mov	lr, r3
 8008b1e:	4770      	bx	lr

08008b20 <_fini>:
 8008b20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b22:	bf00      	nop
 8008b24:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008b26:	bc08      	pop	{r3}
 8008b28:	469e      	mov	lr, r3
 8008b2a:	4770      	bx	lr
